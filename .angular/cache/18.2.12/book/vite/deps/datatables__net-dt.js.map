{
  "version": 3,
  "sources": ["../../../../../../node_modules/datatables.net-dt/js/dataTables.dataTables.mjs", "../../../../../../node_modules/datatables.net/js/dataTables.mjs"],
  "sourcesContent": ["/*! DataTables styling integration\n * © SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\nexport default DataTable;", "/*! DataTables 2.2.0\n * © SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\nvar DataTable = function (selector, options) {\n  // Check if called with a window or jQuery object for DOM less applications\n  // This is for backwards compatibility\n  if (DataTable.factory(selector, options)) {\n    return DataTable;\n  }\n\n  // When creating with `new`, create a new DataTable, returning the API instance\n  if (this instanceof DataTable) {\n    return $(selector).DataTable(options);\n  } else {\n    // Argument switching\n    options = selector;\n  }\n  var _that = this;\n  var emptyInit = options === undefined;\n  var len = this.length;\n  if (emptyInit) {\n    options = {};\n  }\n\n  // Method to get DT API instance from jQuery object\n  this.api = function () {\n    return new _Api(this);\n  };\n  this.each(function () {\n    // For each initialisation we want to give it a clean initialisation\n    // object that can be bashed around\n    var o = {};\n    var oInit = len > 1 ?\n    // optimisation for single table case\n    _fnExtend(o, options, true) : options;\n    var i = 0,\n      iLen;\n    var sId = this.getAttribute('id');\n    var defaults = DataTable.defaults;\n    var $this = $(this);\n\n    /* Sanity check */\n    if (this.nodeName.toLowerCase() != 'table') {\n      _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n      return;\n    }\n    $(this).trigger('options.dt', oInit);\n\n    /* Backwards compatibility for the defaults */\n    _fnCompatOpts(defaults);\n    _fnCompatCols(defaults.column);\n\n    /* Convert the camel-case defaults to Hungarian */\n    _fnCamelToHungarian(defaults, defaults, true);\n    _fnCamelToHungarian(defaults.column, defaults.column, true);\n\n    /* Setting up the initialisation object */\n    _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()), true);\n\n    /* Check to see if we are re-initialising a table */\n    var allSettings = DataTable.settings;\n    for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n      var s = allSettings[i];\n\n      /* Base check on table node */\n      if (s.nTable == this || s.nTHead && s.nTHead.parentNode == this || s.nTFoot && s.nTFoot.parentNode == this) {\n        var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n        var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n        if (emptyInit || bRetrieve) {\n          return s.oInstance;\n        } else if (bDestroy) {\n          new DataTable.Api(s).destroy();\n          break;\n        } else {\n          _fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n          return;\n        }\n      }\n\n      /* If the element we are initialising has the same ID as a table which was previously\n       * initialised, but the table nodes don't match (from before) then we destroy the old\n       * instance by simply deleting it. This is under the assumption that the table has been\n       * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n       */\n      if (s.sTableId == this.id) {\n        allSettings.splice(i, 1);\n        break;\n      }\n    }\n\n    /* Ensure the table has an ID - required for accessibility */\n    if (sId === null || sId === \"\") {\n      sId = \"DataTables_Table_\" + DataTable.ext._unique++;\n      this.id = sId;\n    }\n\n    /* Create the settings object for this table and set some of the default parameters */\n    var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n      \"sDestroyWidth\": $this[0].style.width,\n      \"sInstance\": sId,\n      \"sTableId\": sId,\n      colgroup: $('<colgroup>').prependTo(this),\n      fastData: function (row, column, type) {\n        return _fnGetCellData(oSettings, row, column, type);\n      }\n    });\n    oSettings.nTable = this;\n    oSettings.oInit = oInit;\n    allSettings.push(oSettings);\n\n    // Make a single API instance available for internal handling\n    oSettings.api = new _Api(oSettings);\n\n    // Need to add the instance after the instance after the settings object has been added\n    // to the settings array, so we can self reference the table instance if more than one\n    oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable();\n\n    // Backwards compatibility, before we apply all the defaults\n    _fnCompatOpts(oInit);\n\n    // If the length menu is given, but the init display length is not, use the length menu\n    if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n      oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : $.isPlainObject(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0].value : oInit.aLengthMenu[0];\n    }\n\n    // Apply the defaults and init options to make a single init object will all\n    // options defined from defaults and instance options.\n    oInit = _fnExtend($.extend(true, {}, defaults), oInit);\n\n    // Map the initialisation options onto the settings object\n    _fnMap(oSettings.oFeatures, oInit, [\"bPaginate\", \"bLengthChange\", \"bFilter\", \"bSort\", \"bSortMulti\", \"bInfo\", \"bProcessing\", \"bAutoWidth\", \"bSortClasses\", \"bServerSide\", \"bDeferRender\"]);\n    _fnMap(oSettings, oInit, [\"ajax\", \"fnFormatNumber\", \"sServerMethod\", \"aaSorting\", \"aaSortingFixed\", \"aLengthMenu\", \"sPaginationType\", \"iStateDuration\", \"bSortCellsTop\", \"iTabIndex\", \"sDom\", \"fnStateLoadCallback\", \"fnStateSaveCallback\", \"renderer\", \"searchDelay\", \"rowId\", \"caption\", \"layout\", \"orderDescReverse\", \"typeDetect\", [\"iCookieDuration\", \"iStateDuration\"],\n    // backwards compat\n    [\"oSearch\", \"oPreviousSearch\"], [\"aoSearchCols\", \"aoPreSearchCols\"], [\"iDisplayLength\", \"_iDisplayLength\"]]);\n    _fnMap(oSettings.oScroll, oInit, [[\"sScrollX\", \"sX\"], [\"sScrollXInner\", \"sXInner\"], [\"sScrollY\", \"sY\"], [\"bScrollCollapse\", \"bCollapse\"]]);\n    _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n\n    /* Callback functions which are array driven */\n    _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback);\n    _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams);\n    _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams);\n    _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded);\n    _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback);\n    _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow);\n    _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback);\n    _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback);\n    _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete);\n    _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback);\n    oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n\n    /* Browser support detection */\n    _fnBrowserDetect(oSettings);\n    var oClasses = oSettings.oClasses;\n    $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n    $this.addClass(oClasses.table);\n    if (!oSettings.oFeatures.bPaginate) {\n      oInit.iDisplayStart = 0;\n    }\n    if (oSettings.iInitDisplayStart === undefined) {\n      /* Display start point, taking into account the save saving */\n      oSettings.iInitDisplayStart = oInit.iDisplayStart;\n      oSettings._iDisplayStart = oInit.iDisplayStart;\n    }\n    var defer = oInit.iDeferLoading;\n    if (defer !== null) {\n      oSettings.deferLoading = true;\n      var tmp = Array.isArray(defer);\n      oSettings._iRecordsDisplay = tmp ? defer[0] : defer;\n      oSettings._iRecordsTotal = tmp ? defer[1] : defer;\n    }\n\n    /*\n     * Columns\n     * See if we should load columns automatically or use defined ones\n     */\n    var columnsInit = [];\n    var thead = this.getElementsByTagName('thead');\n    var initHeaderLayout = _fnDetectHeader(oSettings, thead[0]);\n\n    // If we don't have a columns array, then generate one with nulls\n    if (oInit.aoColumns) {\n      columnsInit = oInit.aoColumns;\n    } else if (initHeaderLayout.length) {\n      for (i = 0, iLen = initHeaderLayout[0].length; i < iLen; i++) {\n        columnsInit.push(null);\n      }\n    }\n\n    // Add the columns\n    for (i = 0, iLen = columnsInit.length; i < iLen; i++) {\n      _fnAddColumn(oSettings);\n    }\n\n    // Apply the column definitions\n    _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n      _fnColumnOptions(oSettings, iCol, oDef);\n    });\n\n    /* HTML5 attribute detection - build an mData object automatically if the\n     * attributes are found\n     */\n    var rowOne = $this.children('tbody').find('tr').eq(0);\n    if (rowOne.length) {\n      var a = function (cell, name) {\n        return cell.getAttribute('data-' + name) !== null ? name : null;\n      };\n      $(rowOne[0]).children('th, td').each(function (i, cell) {\n        var col = oSettings.aoColumns[i];\n        if (!col) {\n          _fnLog(oSettings, 0, 'Incorrect column count', 18);\n        }\n        if (col.mData === i) {\n          var sort = a(cell, 'sort') || a(cell, 'order');\n          var filter = a(cell, 'filter') || a(cell, 'search');\n          if (sort !== null || filter !== null) {\n            col.mData = {\n              _: i + '.display',\n              sort: sort !== null ? i + '.@data-' + sort : undefined,\n              type: sort !== null ? i + '.@data-' + sort : undefined,\n              filter: filter !== null ? i + '.@data-' + filter : undefined\n            };\n            col._isArrayHost = true;\n            _fnColumnOptions(oSettings, i);\n          }\n        }\n      });\n    }\n\n    // Must be done after everything which can be overridden by the state saving!\n    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState);\n    var features = oSettings.oFeatures;\n    if (oInit.bStateSave) {\n      features.bStateSave = true;\n    }\n\n    // If aaSorting is not defined, then we use the first indicator in asSorting\n    // in case that has been altered, so the default sort reflects that option\n    if (oInit.aaSorting === undefined) {\n      var sorting = oSettings.aaSorting;\n      for (i = 0, iLen = sorting.length; i < iLen; i++) {\n        sorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n      }\n    }\n\n    // Do a first pass on the sorting classes (allows any size changes to be taken into\n    // account, and also will apply sorting disabled classes if disabled\n    _fnSortingClasses(oSettings);\n    _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n      if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n        _fnSortingClasses(oSettings);\n      }\n    });\n\n    /*\n     * Table HTML init\n     * Cache the header, body and footer as required, creating them if needed\n     */\n    var caption = $this.children('caption');\n    if (oSettings.caption) {\n      if (caption.length === 0) {\n        caption = $('<caption/>').appendTo($this);\n      }\n      caption.html(oSettings.caption);\n    }\n\n    // Store the caption side, so we can remove the element from the document\n    // when creating the element\n    if (caption.length) {\n      caption[0]._captionSide = caption.css('caption-side');\n      oSettings.captionNode = caption[0];\n    }\n    if (thead.length === 0) {\n      thead = $('<thead/>').appendTo($this);\n    }\n    oSettings.nTHead = thead[0];\n    var tbody = $this.children('tbody');\n    if (tbody.length === 0) {\n      tbody = $('<tbody/>').insertAfter(thead);\n    }\n    oSettings.nTBody = tbody[0];\n    var tfoot = $this.children('tfoot');\n    if (tfoot.length === 0) {\n      // If we are a scrolling table, and no footer has been given, then we need to create\n      // a tfoot element for the caption element to be appended to\n      tfoot = $('<tfoot/>').appendTo($this);\n    }\n    oSettings.nTFoot = tfoot[0];\n\n    // Copy the data index array\n    oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n    // Initialisation complete - table can be drawn\n    oSettings.bInitialised = true;\n\n    // Language definitions\n    var oLanguage = oSettings.oLanguage;\n    $.extend(true, oLanguage, oInit.oLanguage);\n    if (oLanguage.sUrl) {\n      // Get the language definitions from a file\n      $.ajax({\n        dataType: 'json',\n        url: oLanguage.sUrl,\n        success: function (json) {\n          _fnCamelToHungarian(defaults.oLanguage, json);\n          $.extend(true, oLanguage, json, oSettings.oInit.oLanguage);\n          _fnCallbackFire(oSettings, null, 'i18n', [oSettings], true);\n          _fnInitialise(oSettings);\n        },\n        error: function () {\n          // Error occurred loading language file\n          _fnLog(oSettings, 0, 'i18n file loading error', 21);\n\n          // Continue on as best we can\n          _fnInitialise(oSettings);\n        }\n      });\n    } else {\n      _fnCallbackFire(oSettings, null, 'i18n', [oSettings], true);\n      _fnInitialise(oSettings);\n    }\n  });\n  _that = null;\n  return this;\n};\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n  /**\n   * Buttons. For use with the Buttons extension for DataTables. This is\n   * defined here so other extensions can define buttons regardless of load\n   * order. It is _not_ used by DataTables core.\n   *\n   *  @type object\n   *  @default {}\n   */\n  buttons: {},\n  /**\n   * Element class names\n   *\n   *  @type object\n   *  @default {}\n   */\n  classes: {},\n  /**\n   * DataTables build type (expanded by the download builder)\n   *\n   *  @type string\n   */\n  builder: \"-source-\",\n  /**\n   * Error reporting.\n   * \n   * How should DataTables report an error. Can take the value 'alert',\n   * 'throw', 'none' or a function.\n   *\n   *  @type string|function\n   *  @default alert\n   */\n  errMode: \"alert\",\n  /**\n   * Legacy so v1 plug-ins don't throw js errors on load\n   */\n  feature: [],\n  /**\n   * Feature plug-ins.\n   * \n   * This is an object of callbacks which provide the features for DataTables\n   * to be initialised via the `layout` option.\n   */\n  features: {},\n  /**\n   * Row searching.\n   * \n   * This method of searching is complimentary to the default type based\n   * searching, and a lot more comprehensive as it allows you complete control\n   * over the searching logic. Each element in this array is a function\n   * (parameters described below) that is called for every row in the table,\n   * and your logic decides if it should be included in the searching data set\n   * or not.\n   *\n   * Searching functions have the following input parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{array|object}` Data for the row to be processed (same as the\n   *    original format that was passed in as the data source, or an array\n   *    from a DOM data source\n   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n   *    can be useful to retrieve the `TR` element if you need DOM interaction.\n   *\n   * And the following return is expected:\n   *\n   * * {boolean} Include the row in the searched result set (true) or not\n   *   (false)\n   *\n   * Note that as with the main search ability in DataTables, technically this\n   * is \"filtering\", since it is subtractive. However, for consistency in\n   * naming we call it searching here.\n   *\n   *  @type array\n   *  @default []\n   *\n   *  @example\n   *    // The following example shows custom search being applied to the\n   *    // fourth column (i.e. the data[3] index) based on two input values\n   *    // from the end-user, matching the data in a certain range.\n   *    $.fn.dataTable.ext.search.push(\n   *      function( settings, data, dataIndex ) {\n   *        var min = document.getElementById('min').value * 1;\n   *        var max = document.getElementById('max').value * 1;\n   *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n   *\n   *        if ( min == \"\" && max == \"\" ) {\n   *          return true;\n   *        }\n   *        else if ( min == \"\" && version < max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && \"\" == max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && version < max ) {\n   *          return true;\n   *        }\n   *        return false;\n   *      }\n   *    );\n   */\n  search: [],\n  /**\n   * Selector extensions\n   *\n   * The `selector` option can be used to extend the options available for the\n   * selector modifier options (`selector-modifier` object data type) that\n   * each of the three built in selector types offer (row, column and cell +\n   * their plural counterparts). For example the Select extension uses this\n   * mechanism to provide an option to select only rows, columns and cells\n   * that have been marked as selected by the end user (`{selected: true}`),\n   * which can be used in conjunction with the existing built in selector\n   * options.\n   *\n   * Each property is an array to which functions can be pushed. The functions\n   * take three attributes:\n   *\n   * * Settings object for the host table\n   * * Options object (`selector-modifier` object type)\n   * * Array of selected item indexes\n   *\n   * The return is an array of the resulting item indexes after the custom\n   * selector has been applied.\n   *\n   *  @type object\n   */\n  selector: {\n    cell: [],\n    column: [],\n    row: []\n  },\n  /**\n   * Legacy configuration options. Enable and disable legacy options that\n   * are available in DataTables.\n   *\n   *  @type object\n   */\n  legacy: {\n    /**\n     * Enable / disable DataTables 1.9 compatible server-side processing\n     * requests\n     *\n     *  @type boolean\n     *  @default null\n     */\n    ajax: null\n  },\n  /**\n   * Pagination plug-in methods.\n   * \n   * Each entry in this object is a function and defines which buttons should\n   * be shown by the pagination rendering method that is used for the table:\n   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n   * buttons are displayed in the document, while the functions here tell it\n   * what buttons to display. This is done by returning an array of button\n   * descriptions (what each button will do).\n   *\n   * Pagination types (the four built in options and any additional plug-in\n   * options defined here) can be used through the `paginationType`\n   * initialisation parameter.\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{int} page` The current page index\n   * 2. `{int} pages` The number of pages in the table\n   *\n   * Each function is expected to return an array where each element of the\n   * array can be one of:\n   *\n   * * `first` - Jump to first page when activated\n   * * `last` - Jump to last page when activated\n   * * `previous` - Show previous page when activated\n   * * `next` - Show next page when activated\n   * * `{int}` - Show page of the index given\n   * * `{array}` - A nested array containing the above elements to add a\n   *   containing 'DIV' element (might be useful for styling).\n   *\n   * Note that DataTables v1.9- used this object slightly differently whereby\n   * an object with two functions would be defined for each plug-in. That\n   * ability is still supported by DataTables 1.10+ to provide backwards\n   * compatibility, but this option of use is now decremented and no longer\n   * documented in DataTables 1.10+.\n   *\n   *  @type object\n   *  @default {}\n   *\n   *  @example\n   *    // Show previous, next and current page buttons only\n   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n   *      return [ 'previous', page, 'next' ];\n   *    };\n   */\n  pager: {},\n  renderer: {\n    pageButton: {},\n    header: {}\n  },\n  /**\n   * Ordering plug-ins - custom data source\n   * \n   * The extension options for ordering of data available here is complimentary\n   * to the default type based ordering that DataTables typically uses. It\n   * allows much greater control over the the data that is being used to\n   * order a column, but is necessarily therefore more complex.\n   * \n   * This type of ordering is useful if you want to do ordering based on data\n   * live from the DOM (for example the contents of an 'input' element) rather\n   * than just the static string that DataTables knows of.\n   * \n   * The way these plug-ins work is that you create an array of the values you\n   * wish to be ordering for the column in question and then return that\n   * array. The data in the array much be in the index order of the rows in\n   * the table (not the currently ordering order!). Which order data gathering\n   * function is run here depends on the `dt-init columns.orderDataType`\n   * parameter that is used for the column (if any).\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{int}` Target column index\n   *\n   * Each function is expected to return an array:\n   *\n   * * `{array}` Data for the column to be ordering upon\n   *\n   *  @type array\n   *\n   *  @example\n   *    // Ordering using `input` node values\n   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n   *    {\n   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n   *        return $('input', td).val();\n   *      } );\n   *    }\n   */\n  order: {},\n  /**\n   * Type based plug-ins.\n   *\n   * Each column in DataTables has a type assigned to it, either by automatic\n   * detection or by direct assignment using the `type` option for the column.\n   * The type of a column will effect how it is ordering and search (plug-ins\n   * can also make use of the column type if required).\n   *\n   * @namespace\n   */\n  type: {\n    /**\n     * Automatic column class assignment\n     */\n    className: {},\n    /**\n     * Type detection functions.\n     *\n     * The functions defined in this object are used to automatically detect\n     * a column's type, making initialisation of DataTables super easy, even\n     * when complex data is in the table.\n     *\n     * The functions defined take two parameters:\n     *\n        *  1. `{*}` Data from the column cell to be analysed\n        *  2. `{settings}` DataTables settings object. This can be used to\n        *     perform context specific type detection - for example detection\n        *     based on language settings such as using a comma for a decimal\n        *     place. Generally speaking the options from the settings will not\n        *     be required\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Data type detected, or null if unknown (and thus\n     *   pass it on to the other type detection functions.\n     *\n     *  @type array\n     *\n     *  @example\n     *    // Currency type detection plug-in:\n     *    $.fn.dataTable.ext.type.detect.push(\n     *      function ( data, settings ) {\n     *        // Check the numeric part\n     *        if ( ! data.substring(1).match(/[0-9]/) ) {\n     *          return null;\n     *        }\n     *\n     *        // Check prefixed by currency\n     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n     *          return 'currency';\n     *        }\n     *        return null;\n     *      }\n     *    );\n     */\n    detect: [],\n    /**\n     * Automatic renderer assignment\n     */\n    render: {},\n    /**\n     * Type based search formatting.\n     *\n     * The type based searching functions can be used to pre-format the\n     * data to be search on. For example, it can be used to strip HTML\n     * tags or to de-format telephone numbers for numeric only searching.\n     *\n     * Note that is a search is not defined for a column of a given type,\n     * no search formatting will be performed.\n     * \n     * Pre-processing of searching data plug-ins - When you assign the sType\n     * for a column (or have it automatically detected for you by DataTables\n     * or a type detection plug-in), you will typically be using this for\n     * custom sorting, but it can also be used to provide custom searching\n     * by allowing you to pre-processing the data and returning the data in\n     * the format that should be searched upon. This is done by adding\n     * functions this object with a parameter name which matches the sType\n     * for that target column. This is the corollary of <i>afnSortData</i>\n     * for searching data.\n     *\n     * The functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for searching\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Formatted string that will be used for the searching.\n     *\n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n     *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n     *    }\n     */\n    search: {},\n    /**\n     * Type based ordering.\n     *\n     * The column type tells DataTables what ordering to apply to the table\n     * when a column is sorted upon. The order for each type that is defined,\n     * is defined by the functions available in this object.\n     *\n     * Each ordering option can be described by three properties added to\n     * this object:\n     *\n     * * `{type}-pre` - Pre-formatting function\n     * * `{type}-asc` - Ascending order function\n     * * `{type}-desc` - Descending order function\n     *\n     * All three can be used together, only `{type}-pre` or only\n     * `{type}-asc` and `{type}-desc` together. It is generally recommended\n     * that only `{type}-pre` is used, as this provides the optimal\n     * implementation in terms of speed, although the others are provided\n     * for compatibility with existing Javascript sort functions.\n     *\n     * `{type}-pre`: Functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for ordering\n     *\n     * And return:\n     *\n     * * `{*}` Data to be sorted upon\n     *\n     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n     * functions, taking two parameters:\n     *\n        *  1. `{*}` Data to compare to the second parameter\n        *  2. `{*}` Data to compare to the first parameter\n     *\n     * And returning:\n     *\n     * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n     *   than the second parameter, ===0 if the two parameters are equal and\n     *   >0 if the first parameter should be sorted height than the second\n     *   parameter.\n     * \n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    // Numeric ordering of formatted numbers with a pre-formatter\n     *    $.extend( $.fn.dataTable.ext.type.order, {\n     *      \"string-pre\": function(x) {\n     *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n     *        return parseFloat( a );\n     *      }\n     *    } );\n     *\n     *  @example\n     *    // Case-sensitive string ordering, with no pre-formatting method\n     *    $.extend( $.fn.dataTable.ext.order, {\n     *      \"string-case-asc\": function(x,y) {\n     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n     *      },\n     *      \"string-case-desc\": function(x,y) {\n     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n     *      }\n     *    } );\n     */\n    order: {}\n  },\n  /**\n   * Unique DataTables instance counter\n   *\n   * @type int\n   * @private\n   */\n  _unique: 0,\n  //\n  // Depreciated\n  // The following properties are retained for backwards compatibility only.\n  // The should not be used in new projects and will be removed in a future\n  // version\n  //\n\n  /**\n   * Version check function.\n   *  @type function\n   *  @depreciated Since 1.10\n   */\n  fnVersionCheck: DataTable.fnVersionCheck,\n  /**\n   * Index for what 'this' index API functions should use\n   *  @type int\n   *  @deprecated Since v1.10\n   */\n  iApiIndex: 0,\n  /**\n   * Software version\n   *  @type string\n   *  @deprecated Since v1.10\n   */\n  sVersion: DataTable.version\n};\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend(_ext, {\n  afnFiltering: _ext.search,\n  aTypes: _ext.type.detect,\n  ofnSearch: _ext.type.search,\n  oSort: _ext.type.order,\n  afnSortData: _ext.order,\n  aoFeatures: _ext.feature,\n  oStdClasses: _ext.classes,\n  oPagination: _ext.pager\n});\n$.extend(DataTable.ext.classes, {\n  container: 'dt-container',\n  empty: {\n    row: 'dt-empty'\n  },\n  info: {\n    container: 'dt-info'\n  },\n  layout: {\n    row: 'dt-layout-row',\n    cell: 'dt-layout-cell',\n    tableRow: 'dt-layout-table',\n    tableCell: '',\n    start: 'dt-layout-start',\n    end: 'dt-layout-end',\n    full: 'dt-layout-full'\n  },\n  length: {\n    container: 'dt-length',\n    select: 'dt-input'\n  },\n  order: {\n    canAsc: 'dt-orderable-asc',\n    canDesc: 'dt-orderable-desc',\n    isAsc: 'dt-ordering-asc',\n    isDesc: 'dt-ordering-desc',\n    none: 'dt-orderable-none',\n    position: 'sorting_'\n  },\n  processing: {\n    container: 'dt-processing'\n  },\n  scrolling: {\n    body: 'dt-scroll-body',\n    container: 'dt-scroll',\n    footer: {\n      self: 'dt-scroll-foot',\n      inner: 'dt-scroll-footInner'\n    },\n    header: {\n      self: 'dt-scroll-head',\n      inner: 'dt-scroll-headInner'\n    }\n  },\n  search: {\n    container: 'dt-search',\n    input: 'dt-input'\n  },\n  table: 'dataTable',\n  tbody: {\n    cell: '',\n    row: ''\n  },\n  thead: {\n    cell: '',\n    row: ''\n  },\n  tfoot: {\n    cell: '',\n    row: ''\n  },\n  paging: {\n    active: 'current',\n    button: 'dt-paging-button',\n    container: 'dt-paging',\n    disabled: 'disabled',\n    nav: ''\n  }\n});\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<([^>]*>)/g;\nvar _max_str_len = Math.pow(2, 28);\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g');\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - Ƀ - Bitcoin\n// - Ξ - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\nvar _empty = function (d) {\n  return !d || d === true || d === '-' ? true : false;\n};\nvar _intVal = function (s) {\n  var integer = parseInt(s, 10);\n  return !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function (num, decimalPoint) {\n  // Cache created regular expressions for speed as this function is called often\n  if (!_re_dic[decimalPoint]) {\n    _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n  }\n  return typeof num === 'string' && decimalPoint !== '.' ? num.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') : num;\n};\nvar _isNumber = function (d, decimalPoint, formatted, allowEmpty) {\n  var type = typeof d;\n  var strType = type === 'string';\n  if (type === 'number' || type === 'bigint') {\n    return true;\n  }\n\n  // If empty return immediately so there must be a number if it is a\n  // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n  // as a formatted number for currency\n  if (allowEmpty && _empty(d)) {\n    return true;\n  }\n  if (decimalPoint && strType) {\n    d = _numToDecimal(d, decimalPoint);\n  }\n  if (formatted && strType) {\n    d = d.replace(_re_formatted_numeric, '');\n  }\n  return !isNaN(parseFloat(d)) && isFinite(d);\n};\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function (d) {\n  return _empty(d) || typeof d === 'string';\n};\n\n// Is a string a number surrounded by HTML?\nvar _htmlNumeric = function (d, decimalPoint, formatted, allowEmpty) {\n  if (allowEmpty && _empty(d)) {\n    return true;\n  }\n\n  // input and select strings mean that this isn't just a number\n  if (typeof d === 'string' && d.match(/<(input|select)/i)) {\n    return null;\n  }\n  var html = _isHtml(d);\n  return !html ? null : _isNumber(_stripHtml(d), decimalPoint, formatted, allowEmpty) ? true : null;\n};\nvar _pluck = function (a, prop, prop2) {\n  var out = [];\n  var i = 0,\n    ien = a.length;\n\n  // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[i] && a[i][prop]) {\n        out.push(a[i][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[i]) {\n        out.push(a[i][prop]);\n      }\n    }\n  }\n  return out;\n};\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function (a, order, prop, prop2) {\n  var out = [];\n  var i = 0,\n    ien = order.length;\n\n  // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[order[i]] && a[order[i]][prop]) {\n        out.push(a[order[i]][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[order[i]]) {\n        out.push(a[order[i]][prop]);\n      }\n    }\n  }\n  return out;\n};\nvar _range = function (len, start) {\n  var out = [];\n  var end;\n  if (start === undefined) {\n    start = 0;\n    end = len;\n  } else {\n    end = start;\n    start = len;\n  }\n  for (var i = start; i < end; i++) {\n    out.push(i);\n  }\n  return out;\n};\nvar _removeEmpty = function (a) {\n  var out = [];\n  for (var i = 0, ien = a.length; i < ien; i++) {\n    if (a[i]) {\n      // careful - will remove all falsy values!\n      out.push(a[i]);\n    }\n  }\n  return out;\n};\n\n// Replaceable function in api.util\nvar _stripHtml = function (input) {\n  if (!input || typeof input !== 'string') {\n    return input;\n  }\n\n  // Irrelevant check to workaround CodeQL's false positive on the regex\n  if (input.length > _max_str_len) {\n    throw new Error('Exceeded max str len');\n  }\n  var previous;\n  input = input.replace(_re_html, ''); // Complete tags\n\n  // Safety for incomplete script tag - use do / while to ensure that\n  // we get all instances\n  do {\n    previous = input;\n    input = input.replace(/<script/i, '');\n  } while (input !== previous);\n  return previous;\n};\n\n// Replaceable function in api.util\nvar _escapeHtml = function (d) {\n  if (Array.isArray(d)) {\n    d = d.join(',');\n  }\n  return typeof d === 'string' ? d.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') : d;\n};\n\n// Remove diacritics from a string by decomposing it and then removing\n// non-ascii characters\nvar _normalize = function (str, both) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  // It is faster to just run `normalize` than it is to check if\n  // we need to with a regex! (Check as it isn't available in old\n  // Safari)\n  var res = str.normalize ? str.normalize(\"NFD\") : str;\n\n  // Equally, here we check if a regex is needed or not\n  return res.length !== str.length ? (both === true ? str + ' ' : '') + res.replace(/[\\u0300-\\u036f]/g, \"\") : res;\n};\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function (src) {\n  if (src.length < 2) {\n    return true;\n  }\n  var sorted = src.slice().sort();\n  var last = sorted[0];\n  for (var i = 1, ien = sorted.length; i < ien; i++) {\n    if (sorted[i] === last) {\n      return false;\n    }\n    last = sorted[i];\n  }\n  return true;\n};\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function (src) {\n  if (Array.from && Set) {\n    return Array.from(new Set(src));\n  }\n  if (_areAllUnique(src)) {\n    return src.slice();\n  }\n\n  // A faster unique method is to use object keys to identify used values,\n  // but this doesn't work with arrays or objects, which we must also\n  // consider. See jsperf.app/compare-array-unique-versions/4 for more\n  // information.\n  var out = [],\n    val,\n    i,\n    ien = src.length,\n    j,\n    k = 0;\n  again: for (i = 0; i < ien; i++) {\n    val = src[i];\n    for (j = 0; j < k; j++) {\n      if (out[j] === val) {\n        continue again;\n      }\n    }\n    out.push(val);\n    k++;\n  }\n  return out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n  if (Array.isArray(val)) {\n    for (var i = 0; i < val.length; i++) {\n      _flatten(out, val[i]);\n    }\n  } else {\n    out.push(val);\n  }\n  return out;\n};\n\n// Similar to jQuery's addClass, but use classList.add\nfunction _addClass(el, name) {\n  if (name) {\n    name.split(' ').forEach(function (n) {\n      if (n) {\n        // `add` does deduplication, so no need to check `contains`\n        el.classList.add(n);\n      }\n    });\n  }\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n  /**\n   * Return a string with diacritic characters decomposed\n   * @param {*} mixed Function or string to normalize\n   * @param {*} both Return original string and the normalized string\n   * @returns String or undefined\n   */\n  diacritics: function (mixed, both) {\n    var type = typeof mixed;\n    if (type !== 'function') {\n      return _normalize(mixed, both);\n    }\n    _normalize = mixed;\n  },\n  /**\n   * Debounce a function\n   *\n   * @param {function} fn Function to be called\n   * @param {integer} freq Call frequency in mS\n   * @return {function} Wrapped function\n   */\n  debounce: function (fn, timeout) {\n    var timer;\n    return function () {\n      var that = this;\n      var args = arguments;\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        fn.apply(that, args);\n      }, timeout || 250);\n    };\n  },\n  /**\n   * Throttle the calls to a function. Arguments and context are maintained\n   * for the throttled function.\n   *\n   * @param {function} fn Function to be called\n   * @param {integer} freq Call frequency in mS\n   * @return {function} Wrapped function\n   */\n  throttle: function (fn, freq) {\n    var frequency = freq !== undefined ? freq : 200,\n      last,\n      timer;\n    return function () {\n      var that = this,\n        now = +new Date(),\n        args = arguments;\n      if (last && now < last + frequency) {\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          last = undefined;\n          fn.apply(that, args);\n        }, frequency);\n      } else {\n        last = now;\n        fn.apply(that, args);\n      }\n    };\n  },\n  /**\n   * Escape a string such that it can be used in a regular expression\n   *\n   *  @param {string} val string to escape\n   *  @returns {string} escaped string\n   */\n  escapeRegex: function (val) {\n    return val.replace(_re_escape_regex, '\\\\$1');\n  },\n  /**\n   * Create a function that will write to a nested object or array\n   * @param {*} source JSON notation string\n   * @returns Write function\n   */\n  set: function (source) {\n    if ($.isPlainObject(source)) {\n      /* Unlike get, only the underscore (global) option is used for for\n       * setting data since we don't know the type here. This is why an object\n       * option is not documented for `mData` (which is read/write), but it is\n       * for `mRender` which is read only.\n       */\n      return DataTable.util.set(source._);\n    } else if (source === null) {\n      // Nothing to do when the data source is null\n      return function () {};\n    } else if (typeof source === 'function') {\n      return function (data, val, meta) {\n        source(data, 'set', val, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      // Like the get, we need to get data from a nested object\n      var setData = function (data, val, src) {\n        var a = _fnSplitObjNotation(src),\n          b;\n        var aLast = a[a.length - 1];\n        var arrayNotation, funcNotation, o, innerSrc;\n        for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n          // Protect against prototype pollution\n          if (a[i] === '__proto__' || a[i] === 'constructor') {\n            throw new Error('Cannot set prototype values');\n          }\n\n          // Check if we are dealing with an array notation request\n          arrayNotation = a[i].match(__reArray);\n          funcNotation = a[i].match(__reFn);\n          if (arrayNotation) {\n            a[i] = a[i].replace(__reArray, '');\n            data[a[i]] = [];\n\n            // Get the remainder of the nested object to set so we can recurse\n            b = a.slice();\n            b.splice(0, i + 1);\n            innerSrc = b.join('.');\n\n            // Traverse each entry in the array setting the properties requested\n            if (Array.isArray(val)) {\n              for (var j = 0, jLen = val.length; j < jLen; j++) {\n                o = {};\n                setData(o, val[j], innerSrc);\n                data[a[i]].push(o);\n              }\n            } else {\n              // We've been asked to save data to an array, but it\n              // isn't array data to be saved. Best that can be done\n              // is to just save the value.\n              data[a[i]] = val;\n            }\n\n            // The inner call to setData has already traversed through the remainder\n            // of the source and has set the data, thus we can exit here\n            return;\n          } else if (funcNotation) {\n            // Function call\n            a[i] = a[i].replace(__reFn, '');\n            data = data[a[i]](val);\n          }\n\n          // If the nested object doesn't currently exist - since we are\n          // trying to set the value - create it\n          if (data[a[i]] === null || data[a[i]] === undefined) {\n            data[a[i]] = {};\n          }\n          data = data[a[i]];\n        }\n\n        // Last item in the input - i.e, the actual set\n        if (aLast.match(__reFn)) {\n          // Function call\n          data = data[aLast.replace(__reFn, '')](val);\n        } else {\n          // If array notation is used, we just want to strip it and use the property name\n          // and assign the value. If it isn't used, then we get the result we want anyway\n          data[aLast.replace(__reArray, '')] = val;\n        }\n      };\n      return function (data, val) {\n        // meta is also passed in, but not used\n        return setData(data, val, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data, val) {\n        // meta is also passed in, but not used\n        data[source] = val;\n      };\n    }\n  },\n  /**\n   * Create a function that will read nested objects from arrays, based on JSON notation\n   * @param {*} source JSON notation string\n   * @returns Value read\n   */\n  get: function (source) {\n    if ($.isPlainObject(source)) {\n      // Build an object of get functions, and wrap them in a single call\n      var o = {};\n      $.each(source, function (key, val) {\n        if (val) {\n          o[key] = DataTable.util.get(val);\n        }\n      });\n      return function (data, type, row, meta) {\n        var t = o[type] || o._;\n        return t !== undefined ? t(data, type, row, meta) : data;\n      };\n    } else if (source === null) {\n      // Give an empty string for rendering / sorting etc\n      return function (data) {\n        // type, row and meta also passed, but not used\n        return data;\n      };\n    } else if (typeof source === 'function') {\n      return function (data, type, row, meta) {\n        return source(data, type, row, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      /* If there is a . in the source string then the data source is in a\n       * nested object so we loop over the data for each level to get the next\n       * level down. On each loop we test for undefined, and if found immediately\n       * return. This allows entire objects to be missing and sDefaultContent to\n       * be used if defined, rather than throwing an error\n       */\n      var fetchData = function (data, type, src) {\n        var arrayNotation, funcNotation, out, innerSrc;\n        if (src !== \"\") {\n          var a = _fnSplitObjNotation(src);\n          for (var i = 0, iLen = a.length; i < iLen; i++) {\n            // Check if we are dealing with special notation\n            arrayNotation = a[i].match(__reArray);\n            funcNotation = a[i].match(__reFn);\n            if (arrayNotation) {\n              // Array notation\n              a[i] = a[i].replace(__reArray, '');\n\n              // Condition allows simply [] to be passed in\n              if (a[i] !== \"\") {\n                data = data[a[i]];\n              }\n              out = [];\n\n              // Get the remainder of the nested object to get\n              a.splice(0, i + 1);\n              innerSrc = a.join('.');\n\n              // Traverse each entry in the array getting the properties requested\n              if (Array.isArray(data)) {\n                for (var j = 0, jLen = data.length; j < jLen; j++) {\n                  out.push(fetchData(data[j], type, innerSrc));\n                }\n              }\n\n              // If a string is given in between the array notation indicators, that\n              // is used to join the strings together, otherwise an array is returned\n              var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n              data = join === \"\" ? out : out.join(join);\n\n              // The inner call to fetchData has already traversed through the remainder\n              // of the source requested, so we exit from the loop\n              break;\n            } else if (funcNotation) {\n              // Function call\n              a[i] = a[i].replace(__reFn, '');\n              data = data[a[i]]();\n              continue;\n            }\n            if (data === null || data[a[i]] === null) {\n              return null;\n            } else if (data === undefined || data[a[i]] === undefined) {\n              return undefined;\n            }\n            data = data[a[i]];\n          }\n        }\n        return data;\n      };\n      return function (data, type) {\n        // row and meta also passed, but not used\n        return fetchData(data, type, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data) {\n        // row and meta also passed, but not used\n        return data[source];\n      };\n    }\n  },\n  stripHtml: function (mixed) {\n    var type = typeof mixed;\n    if (type === 'function') {\n      _stripHtml = mixed;\n      return;\n    } else if (type === 'string') {\n      return _stripHtml(mixed);\n    }\n    return mixed;\n  },\n  escapeHtml: function (mixed) {\n    var type = typeof mixed;\n    if (type === 'function') {\n      _escapeHtml = mixed;\n      return;\n    } else if (type === 'string' || Array.isArray(mixed)) {\n      return _escapeHtml(mixed);\n    }\n    return mixed;\n  },\n  unique: _unique\n};\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap(o) {\n  var hungarian = 'a aa ai ao as b fn i m o s ',\n    match,\n    newKey,\n    map = {};\n  $.each(o, function (key) {\n    match = key.match(/^([^A-Z]+?)([A-Z])/);\n    if (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n      newKey = key.replace(match[0], match[2].toLowerCase());\n      map[newKey] = key;\n      if (match[1] === 'o') {\n        _fnHungarianMap(o[key]);\n      }\n    }\n  });\n  o._hungarianMap = map;\n}\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian(src, user, force) {\n  if (!src._hungarianMap) {\n    _fnHungarianMap(src);\n  }\n  var hungarianKey;\n  $.each(user, function (key) {\n    hungarianKey = src._hungarianMap[key];\n    if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n      // For objects, we need to buzz down into the object to copy parameters\n      if (hungarianKey.charAt(0) === 'o') {\n        // Copy the camelCase options over to the hungarian\n        if (!user[hungarianKey]) {\n          user[hungarianKey] = {};\n        }\n        $.extend(true, user[hungarianKey], user[key]);\n        _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n      } else {\n        user[hungarianKey] = user[key];\n      }\n    }\n  });\n}\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function (o, knew, old) {\n  if (o[knew] !== undefined) {\n    o[old] = o[knew];\n  }\n};\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts(init) {\n  _fnCompatMap(init, 'ordering', 'bSort');\n  _fnCompatMap(init, 'orderMulti', 'bSortMulti');\n  _fnCompatMap(init, 'orderClasses', 'bSortClasses');\n  _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n  _fnCompatMap(init, 'order', 'aaSorting');\n  _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n  _fnCompatMap(init, 'paging', 'bPaginate');\n  _fnCompatMap(init, 'pagingType', 'sPaginationType');\n  _fnCompatMap(init, 'pageLength', 'iDisplayLength');\n  _fnCompatMap(init, 'searching', 'bFilter');\n\n  // Boolean initialisation of x-scrolling\n  if (typeof init.sScrollX === 'boolean') {\n    init.sScrollX = init.sScrollX ? '100%' : '';\n  }\n  if (typeof init.scrollX === 'boolean') {\n    init.scrollX = init.scrollX ? '100%' : '';\n  }\n\n  // Column search objects are in an array, so it needs to be converted\n  // element by element\n  var searchCols = init.aoSearchCols;\n  if (searchCols) {\n    for (var i = 0, ien = searchCols.length; i < ien; i++) {\n      if (searchCols[i]) {\n        _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n      }\n    }\n  }\n\n  // Enable search delay if server-side processing is enabled\n  if (init.serverSide && !init.searchDelay) {\n    init.searchDelay = 400;\n  }\n}\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols(init) {\n  _fnCompatMap(init, 'orderable', 'bSortable');\n  _fnCompatMap(init, 'orderData', 'aDataSort');\n  _fnCompatMap(init, 'orderSequence', 'asSorting');\n  _fnCompatMap(init, 'orderDataType', 'sortDataType');\n\n  // orderData can be given as an integer\n  var dataSort = init.aDataSort;\n  if (typeof dataSort === 'number' && !Array.isArray(dataSort)) {\n    init.aDataSort = [dataSort];\n  }\n}\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect(settings) {\n  // We don't need to do this every time DataTables is constructed, the values\n  // calculated are specific to the browser and OS configuration which we\n  // don't expect to change between initialisations\n  if (!DataTable.__browser) {\n    var browser = {};\n    DataTable.__browser = browser;\n\n    // Scrolling feature / quirks detection\n    var n = $('<div/>').css({\n      position: 'fixed',\n      top: 0,\n      left: -1 * window.pageXOffset,\n      // allow for scrolling\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    }).append($('<div/>').css({\n      position: 'absolute',\n      top: 1,\n      left: 1,\n      width: 100,\n      overflow: 'scroll'\n    }).append($('<div/>').css({\n      width: '100%',\n      height: 10\n    }))).appendTo('body');\n    var outer = n.children();\n    var inner = outer.children();\n\n    // Get scrollbar width\n    browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n    // In rtl text layout, some browsers (most, but not all) will place the\n    // scrollbar on the left, rather than the right.\n    browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;\n    n.remove();\n  }\n  $.extend(settings.oBrowser, DataTable.__browser);\n  settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn(oSettings) {\n  // Add column to aoColumns array\n  var oDefaults = DataTable.defaults.column;\n  var iCol = oSettings.aoColumns.length;\n  var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n    \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n    \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n    idx: iCol,\n    searchFixed: {},\n    colEl: $('<col>').attr('data-dt-column', iCol)\n  });\n  oSettings.aoColumns.push(oCol);\n\n  // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n  // passed into extend can be undefined. This allows the user to give a default\n  // with only some of the parameters defined, and also not give a default\n  var searchCols = oSettings.aoPreSearchCols;\n  searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);\n}\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions(oSettings, iCol, oOptions) {\n  var oCol = oSettings.aoColumns[iCol];\n\n  /* User specified column options */\n  if (oOptions !== undefined && oOptions !== null) {\n    // Backwards compatibility\n    _fnCompatCols(oOptions);\n\n    // Map camel case parameters to their Hungarian counterparts\n    _fnCamelToHungarian(DataTable.defaults.column, oOptions, true);\n\n    /* Backwards compatibility for mDataProp */\n    if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n      oOptions.mData = oOptions.mDataProp;\n    }\n    if (oOptions.sType) {\n      oCol._sManualType = oOptions.sType;\n    }\n\n    // `class` is a reserved word in Javascript, so we need to provide\n    // the ability to use a valid name for the camel case input\n    if (oOptions.className && !oOptions.sClass) {\n      oOptions.sClass = oOptions.className;\n    }\n    var origClass = oCol.sClass;\n    $.extend(oCol, oOptions);\n    _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n\n    // Merge class from previously defined classes with this one, rather than just\n    // overwriting it in the extend above\n    if (origClass !== oCol.sClass) {\n      oCol.sClass = origClass + ' ' + oCol.sClass;\n    }\n\n    /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n     * priority if defined\n     */\n    if (oOptions.iDataSort !== undefined) {\n      oCol.aDataSort = [oOptions.iDataSort];\n    }\n    _fnMap(oCol, oOptions, \"aDataSort\");\n  }\n\n  /* Cache the data get and set functions for speed */\n  var mDataSrc = oCol.mData;\n  var mData = _fnGetObjectDataFn(mDataSrc);\n\n  // The `render` option can be given as an array to access the helper rendering methods.\n  // The first element is the rendering method to use, the rest are the parameters to pass\n  if (oCol.mRender && Array.isArray(oCol.mRender)) {\n    var copy = oCol.mRender.slice();\n    var name = copy.shift();\n    oCol.mRender = DataTable.render[name].apply(window, copy);\n  }\n  oCol._render = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n  var attrTest = function (src) {\n    return typeof src === 'string' && src.indexOf('@') !== -1;\n  };\n  oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter));\n  oCol._setter = null;\n  oCol.fnGetData = function (rowData, type, meta) {\n    var innerData = mData(rowData, type, undefined, meta);\n    return oCol._render && type ? oCol._render(innerData, type, rowData, meta) : innerData;\n  };\n  oCol.fnSetData = function (rowData, val, meta) {\n    return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n  };\n\n  // Indicate if DataTables should read DOM data as an object or array\n  // Used in _fnGetRowElements\n  if (typeof mDataSrc !== 'number' && !oCol._isArrayHost) {\n    oSettings._rowReadObject = true;\n  }\n\n  /* Feature sorting overrides column specific when off */\n  if (!oSettings.oFeatures.bSort) {\n    oCol.bSortable = false;\n  }\n}\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing(settings) {\n  _fnCalculateColumnWidths(settings);\n  _fnColumnSizes(settings);\n  var scroll = settings.oScroll;\n  if (scroll.sY !== '' || scroll.sX !== '') {\n    _fnScrollDraw(settings);\n  }\n  _fnCallbackFire(settings, null, 'column-sizing', [settings]);\n}\n\n/**\n * Apply column sizes\n *\n * @param {*} settings DataTables settings object\n */\nfunction _fnColumnSizes(settings) {\n  var cols = settings.aoColumns;\n  for (var i = 0; i < cols.length; i++) {\n    var width = _fnColumnsSumWidth(settings, [i], false, false);\n    cols[i].colEl.css('width', width);\n    if (settings.oScroll.sX) {\n      cols[i].colEl.css('min-width', width);\n    }\n  }\n}\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n  return typeof aiVis[iMatch] === 'number' ? aiVis[iMatch] : null;\n}\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n  var iPos = aiVis.indexOf(iMatch);\n  return iPos !== -1 ? iPos : null;\n}\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns(settings) {\n  var layout = settings.aoHeader;\n  var columns = settings.aoColumns;\n  var vis = 0;\n  if (layout.length) {\n    for (var i = 0, ien = layout[0].length; i < ien; i++) {\n      if (columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none') {\n        vis++;\n      }\n    }\n  }\n  return vis;\n}\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns(oSettings, sParam) {\n  var a = [];\n  oSettings.aoColumns.map(function (val, i) {\n    if (val[sParam]) {\n      a.push(i);\n    }\n  });\n  return a;\n}\n\n/**\n * Allow the result from a type detection function to be `true` while\n * translating that into a string. Old type detection functions will\n * return the type name if it passes. An obect store would be better,\n * but not backwards compatible.\n *\n * @param {*} typeDetect Object or function for type detection\n * @param {*} res Result from the type detection function\n * @returns Type name or false\n */\nfunction _typeResult(typeDetect, res) {\n  return res === true ? typeDetect._name : res;\n}\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var types = DataTable.ext.type.detect;\n  var i, ien, j, jen, k, ken;\n  var col, detectedType, cache;\n\n  // For each column, spin over the data type detection functions, seeing if one matches\n  for (i = 0, ien = columns.length; i < ien; i++) {\n    col = columns[i];\n    cache = [];\n    if (!col.sType && col._sManualType) {\n      col.sType = col._sManualType;\n    } else if (!col.sType) {\n      // With SSP type detection can be unreliable and error prone, so we provide a way\n      // to turn it off.\n      if (!settings.typeDetect) {\n        return;\n      }\n      for (j = 0, jen = types.length; j < jen; j++) {\n        var typeDetect = types[j];\n\n        // There can be either one, or three type detection functions\n        var oneOf = typeDetect.oneOf;\n        var allOf = typeDetect.allOf || typeDetect;\n        var init = typeDetect.init;\n        var one = false;\n        detectedType = null;\n\n        // Fast detect based on column assignment\n        if (init) {\n          detectedType = _typeResult(typeDetect, init(settings, col, i));\n          if (detectedType) {\n            col.sType = detectedType;\n            break;\n          }\n        }\n        for (k = 0, ken = data.length; k < ken; k++) {\n          if (!data[k]) {\n            continue;\n          }\n\n          // Use a cache array so we only need to get the type data\n          // from the formatter once (when using multiple detectors)\n          if (cache[k] === undefined) {\n            cache[k] = _fnGetCellData(settings, k, i, 'type');\n          }\n\n          // Only one data point in the column needs to match this function\n          if (oneOf && !one) {\n            one = _typeResult(typeDetect, oneOf(cache[k], settings));\n          }\n\n          // All data points need to match this function\n          detectedType = _typeResult(typeDetect, allOf(cache[k], settings));\n\n          // If null, then this type can't apply to this column, so\n          // rather than testing all cells, break out. There is an\n          // exception for the last type which is `html`. We need to\n          // scan all rows since it is possible to mix string and HTML\n          // types\n          if (!detectedType && j !== types.length - 3) {\n            break;\n          }\n\n          // Only a single match is needed for html type since it is\n          // bottom of the pile and very similar to string - but it\n          // must not be empty\n          if (detectedType === 'html' && !_empty(cache[k])) {\n            break;\n          }\n        }\n\n        // Type is valid for all data points in the column - use this\n        // type\n        if (oneOf && one && detectedType || !oneOf && detectedType) {\n          col.sType = detectedType;\n          break;\n        }\n      }\n\n      // Fall back - if no type was detected, always use string\n      if (!col.sType) {\n        col.sType = 'string';\n      }\n    }\n\n    // Set class names for header / footer for auto type classes\n    var autoClass = _ext.type.className[col.sType];\n    if (autoClass) {\n      _columnAutoClass(settings.aoHeader, i, autoClass);\n      _columnAutoClass(settings.aoFooter, i, autoClass);\n    }\n    var renderer = _ext.type.render[col.sType];\n\n    // This can only happen once! There is no way to remove\n    // a renderer. After the first time the renderer has\n    // already been set so createTr will run the renderer itself.\n    if (renderer && !col._render) {\n      col._render = DataTable.util.get(renderer);\n      _columnAutoRender(settings, i);\n    }\n  }\n}\n\n/**\n * Apply an auto detected renderer to data which doesn't yet have\n * a renderer\n */\nfunction _columnAutoRender(settings, colIdx) {\n  var data = settings.aoData;\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].nTr) {\n      // We have to update the display here since there is no\n      // invalidation check for the data\n      var display = _fnGetCellData(settings, i, colIdx, 'display');\n      data[i].displayData[colIdx] = display;\n      _fnWriteCell(data[i].anCells[colIdx], display);\n\n      // No need to update sort / filter data since it has\n      // been invalidated and will be re-read with the\n      // renderer now applied\n    }\n  }\n}\n\n/**\n * Apply a class name to a column's header cells\n */\nfunction _columnAutoClass(container, colIdx, className) {\n  container.forEach(function (row) {\n    if (row[colIdx] && row[colIdx].unique) {\n      _addClass(row[colIdx].cell, className);\n    }\n  });\n}\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {array} headerLayout Layout for header as it was loaded\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, headerLayout, fn) {\n  var i, iLen, j, jLen, k, kLen, def;\n  var columns = oSettings.aoColumns;\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      if (aoCols[i] && aoCols[i].name) {\n        columns[i].sName = aoCols[i].name;\n      }\n    }\n  }\n\n  // Column definitions with aTargets\n  if (aoColDefs) {\n    /* Loop over the definitions array - loop in reverse so first instance has priority */\n    for (i = aoColDefs.length - 1; i >= 0; i--) {\n      def = aoColDefs[i];\n\n      /* Each definition can target multiple columns, as it is an array */\n      var aTargets = def.target !== undefined ? def.target : def.targets !== undefined ? def.targets : def.aTargets;\n      if (!Array.isArray(aTargets)) {\n        aTargets = [aTargets];\n      }\n      for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n        var target = aTargets[j];\n        if (typeof target === 'number' && target >= 0) {\n          /* Add columns that we don't yet know about */\n          while (columns.length <= target) {\n            _fnAddColumn(oSettings);\n          }\n\n          /* Integer, basic index */\n          fn(target, def);\n        } else if (typeof target === 'number' && target < 0) {\n          /* Negative integer, right to left column counting */\n          fn(columns.length + target, def);\n        } else if (typeof target === 'string') {\n          for (k = 0, kLen = columns.length; k < kLen; k++) {\n            if (target === '_all') {\n              // Apply to all columns\n              fn(k, def);\n            } else if (target.indexOf(':name') !== -1) {\n              // Column selector\n              if (columns[k].sName === target.replace(':name', '')) {\n                fn(k, def);\n              }\n            } else {\n              // Cell selector\n              headerLayout.forEach(function (row) {\n                if (row[k]) {\n                  var cell = $(row[k].cell);\n\n                  // Legacy support. Note that it means that we don't support\n                  // an element name selector only, since they are treated as\n                  // class names for 1.x compat.\n                  if (target.match(/^[a-z][\\w-]*$/i)) {\n                    target = '.' + target;\n                  }\n                  if (cell.is(target)) {\n                    fn(k, def);\n                  }\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Statically defined columns array\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      fn(i, aoCols[i]);\n    }\n  }\n}\n\n/**\n * Get the width for a given set of columns\n *\n * @param {*} settings DataTables settings object\n * @param {*} targets Columns - comma separated string or array of numbers\n * @param {*} original Use the original width (true) or calculated (false)\n * @param {*} incVisible Include visible columns (true) or not (false)\n * @returns Combined CSS value\n */\nfunction _fnColumnsSumWidth(settings, targets, original, incVisible) {\n  if (!Array.isArray(targets)) {\n    targets = _fnColumnsFromHeader(targets);\n  }\n  var sum = 0;\n  var unit;\n  var columns = settings.aoColumns;\n  for (var i = 0, ien = targets.length; i < ien; i++) {\n    var column = columns[targets[i]];\n    var definedWidth = original ? column.sWidthOrig : column.sWidth;\n    if (!incVisible && column.bVisible === false) {\n      continue;\n    }\n    if (definedWidth === null || definedWidth === undefined) {\n      return null; // can't determine a defined width - browser defined\n    } else if (typeof definedWidth === 'number') {\n      unit = 'px';\n      sum += definedWidth;\n    } else {\n      var matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n      if (matched) {\n        sum += matched[1] * 1;\n        unit = matched.length === 3 ? matched[2] : 'px';\n      }\n    }\n  }\n  return sum + unit;\n}\nfunction _fnColumnsFromHeader(cell) {\n  var attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n  if (!attr) {\n    return [];\n  }\n  return attr.split(',').map(function (val) {\n    return val * 1;\n  });\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} settings dataTables settings object\n *  @param {array} data data array to be added\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData(settings, dataIn, tr, tds) {\n  /* Create the object for storing information about this new row */\n  var rowIdx = settings.aoData.length;\n  var rowModel = $.extend(true, {}, DataTable.models.oRow, {\n    src: tr ? 'dom' : 'data',\n    idx: rowIdx\n  });\n  rowModel._aData = dataIn;\n  settings.aoData.push(rowModel);\n  var columns = settings.aoColumns;\n  for (var i = 0, iLen = columns.length; i < iLen; i++) {\n    // Invalidate the column types as the new data needs to be revalidated\n    columns[i].sType = null;\n  }\n\n  /* Add to the display array */\n  settings.aiDisplayMaster.push(rowIdx);\n  var id = settings.rowIdFn(dataIn);\n  if (id !== undefined) {\n    settings.aIds[id] = rowModel;\n  }\n\n  /* Create the DOM information, or register it if already present */\n  if (tr || !settings.oFeatures.bDeferRender) {\n    _fnCreateTr(settings, rowIdx, tr, tds);\n  }\n  return rowIdx;\n}\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr(settings, trs) {\n  var row;\n\n  // Allow an individual node to be passed in\n  if (!(trs instanceof $)) {\n    trs = $(trs);\n  }\n  return trs.map(function (i, el) {\n    row = _fnGetRowElements(settings, el);\n    return _fnAddData(settings, row.data, el, row.cells);\n  });\n}\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData(settings, rowIdx, colIdx, type) {\n  if (type === 'search') {\n    type = 'filter';\n  } else if (type === 'order') {\n    type = 'sort';\n  }\n  var row = settings.aoData[rowIdx];\n  if (!row) {\n    return undefined;\n  }\n  var draw = settings.iDraw;\n  var col = settings.aoColumns[colIdx];\n  var rowData = row._aData;\n  var defaultContent = col.sDefaultContent;\n  var cellData = col.fnGetData(rowData, type, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n\n  // Allow for a node being returned for non-display types\n  if (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n    cellData = cellData.innerHTML;\n  }\n  if (cellData === undefined) {\n    if (settings.iDrawError != draw && defaultContent === null) {\n      _fnLog(settings, 0, \"Requested unknown parameter \" + (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") + \" for row \" + rowIdx + \", column \" + colIdx, 4);\n      settings.iDrawError = draw;\n    }\n    return defaultContent;\n  }\n\n  // When the data source is null and a specific data type is requested (i.e.\n  // not the original data), we can use default column data\n  if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n    cellData = defaultContent;\n  } else if (typeof cellData === 'function') {\n    // If the data source is a function, then we run it and use the return,\n    // executing in the scope of the data object (for instances)\n    return cellData.call(rowData);\n  }\n  if (cellData === null && type === 'display') {\n    return '';\n  }\n  if (type === 'filter') {\n    var fomatters = DataTable.ext.type.search;\n    if (fomatters[col.sType]) {\n      cellData = fomatters[col.sType](cellData);\n    }\n  }\n  return cellData;\n}\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData(settings, rowIdx, colIdx, val) {\n  var col = settings.aoColumns[colIdx];\n  var rowData = settings.aoData[rowIdx]._aData;\n  col.fnSetData(rowData, val, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n}\n\n/**\n * Write a value to a cell\n * @param {*} td Cell\n * @param {*} val Value\n */\nfunction _fnWriteCell(td, val) {\n  if (val && typeof val === 'object' && val.nodeName) {\n    $(td).empty().append(val);\n  } else {\n    td.innerHTML = val;\n  }\n}\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation(str) {\n  var parts = str.match(/(\\\\.|[^.])+/g) || [''];\n  return parts.map(function (s) {\n    return s.replace(/\\\\\\./g, '.');\n  });\n}\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster(settings) {\n  return _pluck(settings.aoData, '_aData');\n}\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable(settings) {\n  settings.aoData.length = 0;\n  settings.aiDisplayMaster.length = 0;\n  settings.aiDisplay.length = 0;\n  settings.aIds = {};\n}\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate(settings, rowIdx, src, colIdx) {\n  var row = settings.aoData[rowIdx];\n  var i, ien;\n\n  // Remove the cached data for the row\n  row._aSortData = null;\n  row._aFilterData = null;\n  row.displayData = null;\n\n  // Are we reading last data from DOM or the data object?\n  if (src === 'dom' || (!src || src === 'auto') && row.src === 'dom') {\n    // Read the data from the DOM\n    row._aData = _fnGetRowElements(settings, row, colIdx, colIdx === undefined ? undefined : row._aData).data;\n  } else {\n    // Reading from data object, update the DOM\n    var cells = row.anCells;\n    var display = _fnGetRowDisplay(settings, rowIdx);\n    if (cells) {\n      if (colIdx !== undefined) {\n        _fnWriteCell(cells[colIdx], display[colIdx]);\n      } else {\n        for (i = 0, ien = cells.length; i < ien; i++) {\n          _fnWriteCell(cells[i], display[i]);\n        }\n      }\n    }\n  }\n\n  // Column specific invalidation\n  var cols = settings.aoColumns;\n  if (colIdx !== undefined) {\n    // Type - the data might have changed\n    cols[colIdx].sType = null;\n\n    // Max length string. Its a fairly cheep recalculation, so not worth\n    // something more complicated\n    cols[colIdx].maxLenString = null;\n  } else {\n    for (i = 0, ien = cols.length; i < ien; i++) {\n      cols[i].sType = null;\n      cols[i].maxLenString = null;\n    }\n\n    // Update DataTables special `DT_*` attributes for the row\n    _fnRowAttributes(settings, row);\n  }\n}\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements(settings, row, colIdx, d) {\n  var tds = [],\n    td = row.firstChild,\n    name,\n    col,\n    i = 0,\n    contents,\n    columns = settings.aoColumns,\n    objectRead = settings._rowReadObject;\n\n  // Allow the data object to be passed in, or construct\n  d = d !== undefined ? d : objectRead ? {} : [];\n  var attr = function (str, td) {\n    if (typeof str === 'string') {\n      var idx = str.indexOf('@');\n      if (idx !== -1) {\n        var attr = str.substring(idx + 1);\n        var setter = _fnSetObjectDataFn(str);\n        setter(d, td.getAttribute(attr));\n      }\n    }\n  };\n\n  // Read data from a cell and store into the data object\n  var cellProcess = function (cell) {\n    if (colIdx === undefined || colIdx === i) {\n      col = columns[i];\n      contents = cell.innerHTML.trim();\n      if (col && col._bAttrSrc) {\n        var setter = _fnSetObjectDataFn(col.mData._);\n        setter(d, contents);\n        attr(col.mData.sort, cell);\n        attr(col.mData.type, cell);\n        attr(col.mData.filter, cell);\n      } else {\n        // Depending on the `data` option for the columns the data can\n        // be read to either an object or an array.\n        if (objectRead) {\n          if (!col._setter) {\n            // Cache the setter function\n            col._setter = _fnSetObjectDataFn(col.mData);\n          }\n          col._setter(d, contents);\n        } else {\n          d[i] = contents;\n        }\n      }\n    }\n    i++;\n  };\n  if (td) {\n    // `tr` element was passed in\n    while (td) {\n      name = td.nodeName.toUpperCase();\n      if (name == \"TD\" || name == \"TH\") {\n        cellProcess(td);\n        tds.push(td);\n      }\n      td = td.nextSibling;\n    }\n  } else {\n    // Existing row object passed in\n    tds = row.anCells;\n    for (var j = 0, jen = tds.length; j < jen; j++) {\n      cellProcess(tds[j]);\n    }\n  }\n\n  // Read the ID from the DOM if present\n  var rowNode = row.firstChild ? row : row.nTr;\n  if (rowNode) {\n    var id = rowNode.getAttribute('id');\n    if (id) {\n      _fnSetObjectDataFn(settings.rowId)(d, id);\n    }\n  }\n  return {\n    data: d,\n    cells: tds\n  };\n}\n\n/**\n * Render and cache a row's display data for the columns, if required\n * @returns \n */\nfunction _fnGetRowDisplay(settings, rowIdx) {\n  var rowModal = settings.aoData[rowIdx];\n  var columns = settings.aoColumns;\n  if (!rowModal.displayData) {\n    // Need to render and cache\n    rowModal.displayData = [];\n    for (var colIdx = 0, len = columns.length; colIdx < len; colIdx++) {\n      rowModal.displayData.push(_fnGetCellData(settings, rowIdx, colIdx, 'display'));\n    }\n  }\n  return rowModal.displayData;\n}\n\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n  var row = oSettings.aoData[iRow],\n    rowData = row._aData,\n    cells = [],\n    nTr,\n    nTd,\n    oCol,\n    i,\n    iLen,\n    create,\n    trClass = oSettings.oClasses.tbody.row;\n  if (row.nTr === null) {\n    nTr = nTrIn || document.createElement('tr');\n    row.nTr = nTr;\n    row.anCells = cells;\n    _addClass(nTr, trClass);\n\n    /* Use a private property on the node to allow reserve mapping from the node\n     * to the aoData array for fast look up\n     */\n    nTr._DT_RowIndex = iRow;\n\n    /* Special parameters can be given by the data source to be used on the row */\n    _fnRowAttributes(oSettings, row);\n\n    /* Process each column */\n    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n      oCol = oSettings.aoColumns[i];\n      create = nTrIn && anTds[i] ? false : true;\n      nTd = create ? document.createElement(oCol.sCellType) : anTds[i];\n      if (!nTd) {\n        _fnLog(oSettings, 0, 'Incorrect column count', 18);\n      }\n      nTd._DT_CellIndex = {\n        row: iRow,\n        column: i\n      };\n      cells.push(nTd);\n      var display = _fnGetRowDisplay(oSettings, iRow);\n\n      // Need to create the HTML if new, or if a rendering function is defined\n      if (create || (oCol.mRender || oCol.mData !== i) && (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')) {\n        _fnWriteCell(nTd, display[i]);\n      }\n\n      // column class\n      _addClass(nTd, oCol.sClass);\n\n      // Visibility - add or remove as required\n      if (oCol.bVisible && create) {\n        nTr.appendChild(nTd);\n      } else if (!oCol.bVisible && !create) {\n        nTd.parentNode.removeChild(nTd);\n      }\n      if (oCol.fnCreatedCell) {\n        oCol.fnCreatedCell.call(oSettings.oInstance, nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i);\n      }\n    }\n    _fnCallbackFire(oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells]);\n  } else {\n    _addClass(row.nTr, trClass);\n  }\n}\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes(settings, row) {\n  var tr = row.nTr;\n  var data = row._aData;\n  if (tr) {\n    var id = settings.rowIdFn(data);\n    if (id) {\n      tr.id = id;\n    }\n    if (data.DT_RowClass) {\n      // Remove any classes added by DT_RowClass before\n      var a = data.DT_RowClass.split(' ');\n      row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a;\n      $(tr).removeClass(row.__rowc.join(' ')).addClass(data.DT_RowClass);\n    }\n    if (data.DT_RowAttr) {\n      $(tr).attr(data.DT_RowAttr);\n    }\n    if (data.DT_RowData) {\n      $(tr).data(data.DT_RowData);\n    }\n  }\n}\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead(settings, side) {\n  var classes = settings.oClasses;\n  var columns = settings.aoColumns;\n  var i, ien, row;\n  var target = side === 'header' ? settings.nTHead : settings.nTFoot;\n  var titleProp = side === 'header' ? 'sTitle' : side;\n\n  // Footer might be defined\n  if (!target) {\n    return;\n  }\n\n  // If no cells yet and we have content for them, then create\n  if (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\n    row = $('tr', target);\n\n    // Add a row if needed\n    if (!row.length) {\n      row = $('<tr/>').appendTo(target);\n    }\n\n    // Add the number of cells needed to make up to the number of columns\n    if (row.length === 1) {\n      var cellCount = 0;\n      $('td, th', row).each(function () {\n        cellCount += this.colSpan;\n      });\n      for (i = cellCount, ien = columns.length; i < ien; i++) {\n        $('<th/>').html(columns[i][titleProp] || '').appendTo(row);\n      }\n    }\n  }\n  var detected = _fnDetectHeader(settings, target, true);\n  if (side === 'header') {\n    settings.aoHeader = detected;\n    $('tr', target).addClass(classes.thead.row);\n  } else {\n    settings.aoFooter = detected;\n    $('tr', target).addClass(classes.tfoot.row);\n  }\n\n  // Every cell needs to be passed through the renderer\n  $(target).children('tr').children('th, td').each(function () {\n    _fnRenderer(settings, side)(settings, $(this), classes);\n  });\n}\n\n/**\n * Build a layout structure for a header or footer\n *\n * @param {*} settings DataTables settings\n * @param {*} source Source layout array\n * @param {*} incColumns What columns should be included\n * @returns Layout array\n */\nfunction _fnHeaderLayout(settings, source, incColumns) {\n  var row, column, cell;\n  var local = [];\n  var structure = [];\n  var columns = settings.aoColumns;\n  var columnCount = columns.length;\n  var rowspan, colspan;\n  if (!source) {\n    return;\n  }\n\n  // Default is to work on only visible columns\n  if (!incColumns) {\n    incColumns = _range(columnCount).filter(function (idx) {\n      return columns[idx].bVisible;\n    });\n  }\n\n  // Make a copy of the master layout array, but with only the columns we want\n  for (row = 0; row < source.length; row++) {\n    // Remove any columns we haven't selected\n    local[row] = source[row].slice().filter(function (cell, i) {\n      return incColumns.includes(i);\n    });\n\n    // Prep the structure array - it needs an element for each row\n    structure.push([]);\n  }\n  for (row = 0; row < local.length; row++) {\n    for (column = 0; column < local[row].length; column++) {\n      rowspan = 1;\n      colspan = 1;\n\n      // Check to see if there is already a cell (row/colspan) covering our target\n      // insert point. If there is, then there is nothing to do.\n      if (structure[row][column] === undefined) {\n        cell = local[row][column].cell;\n\n        // Expand for rowspan\n        while (local[row + rowspan] !== undefined && local[row][column].cell == local[row + rowspan][column].cell) {\n          structure[row + rowspan][column] = null;\n          rowspan++;\n        }\n\n        // And for colspan\n        while (local[row][column + colspan] !== undefined && local[row][column].cell == local[row][column + colspan].cell) {\n          // Which also needs to go over rows\n          for (var k = 0; k < rowspan; k++) {\n            structure[row + k][column + colspan] = null;\n          }\n          colspan++;\n        }\n        var titleSpan = $('span.dt-column-title', cell);\n        structure[row][column] = {\n          cell: cell,\n          colspan: colspan,\n          rowspan: rowspan,\n          title: titleSpan.length ? titleSpan.html() : $(cell).html()\n        };\n      }\n    }\n  }\n  return structure;\n}\n\n/**\n * Draw the header (or footer) element based on the column visibility states.\n *\n *  @param object oSettings dataTables settings object\n *  @param array aoSource Layout array from _fnDetectHeader\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead(settings, source) {\n  var layout = _fnHeaderLayout(settings, source);\n  var tr, n;\n  for (var row = 0; row < source.length; row++) {\n    tr = source[row].row;\n\n    // All cells are going to be replaced, so empty out the row\n    // Can't use $().empty() as that kills event handlers\n    if (tr) {\n      while (n = tr.firstChild) {\n        tr.removeChild(n);\n      }\n    }\n    for (var column = 0; column < layout[row].length; column++) {\n      var point = layout[row][column];\n      if (point) {\n        $(point.cell).appendTo(tr).attr('rowspan', point.rowspan).attr('colspan', point.colspan);\n      }\n    }\n  }\n}\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw(oSettings, ajaxComplete) {\n  // Allow for state saving and a custom start position\n  _fnStart(oSettings);\n\n  /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n  var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n  if (aPreDraw.indexOf(false) !== -1) {\n    _fnProcessingDisplay(oSettings, false);\n    return;\n  }\n  var anRows = [];\n  var iRowCount = 0;\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var aiDisplay = oSettings.aiDisplay;\n  var iDisplayStart = oSettings._iDisplayStart;\n  var iDisplayEnd = oSettings.fnDisplayEnd();\n  var columns = oSettings.aoColumns;\n  var body = $(oSettings.nTBody);\n  oSettings.bDrawing = true;\n\n  /* Server-side processing draw intercept */\n  if (oSettings.deferLoading) {\n    oSettings.deferLoading = false;\n    oSettings.iDraw++;\n    _fnProcessingDisplay(oSettings, false);\n  } else if (!bServerSide) {\n    oSettings.iDraw++;\n  } else if (!oSettings.bDestroying && !ajaxComplete) {\n    // Show loading message for server-side processing\n    if (oSettings.iDraw === 0) {\n      body.empty().append(_emptyRow(oSettings));\n    }\n    _fnAjaxUpdate(oSettings);\n    return;\n  }\n  if (aiDisplay.length !== 0) {\n    var iStart = bServerSide ? 0 : iDisplayStart;\n    var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n    for (var j = iStart; j < iEnd; j++) {\n      var iDataIndex = aiDisplay[j];\n      var aoData = oSettings.aoData[iDataIndex];\n      if (aoData.nTr === null) {\n        _fnCreateTr(oSettings, iDataIndex);\n      }\n      var nRow = aoData.nTr;\n\n      // Add various classes as needed\n      for (var i = 0; i < columns.length; i++) {\n        var col = columns[i];\n        var td = aoData.anCells[i];\n        _addClass(td, _ext.type.className[col.sType]); // auto class\n        _addClass(td, oSettings.oClasses.tbody.cell); // all cells\n      }\n\n      // Row callback functions - might want to manipulate the row\n      // iRowCount and j are not currently documented. Are they at all\n      // useful?\n      _fnCallbackFire(oSettings, 'aoRowCallback', null, [nRow, aoData._aData, iRowCount, j, iDataIndex]);\n      anRows.push(nRow);\n      iRowCount++;\n    }\n  } else {\n    anRows[0] = _emptyRow(oSettings);\n  }\n\n  /* Header and footer callbacks */\n  _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n  _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n  // replaceChildren is faster, but only became widespread in 2020,\n  // so a fall back in jQuery is provided for older browsers.\n  if (body[0].replaceChildren) {\n    body[0].replaceChildren.apply(body[0], anRows);\n  } else {\n    body.children().detach();\n    body.append($(anRows));\n  }\n\n  // Empty table needs a specific class\n  $(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n\n  /* Call all required callback functions for the end of a draw */\n  _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings], true);\n\n  /* Draw is complete, sorting and filtering must be as well */\n  oSettings.bSorted = false;\n  oSettings.bFiltered = false;\n  oSettings.bDrawing = false;\n}\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw(settings, holdPosition, recompute) {\n  var features = settings.oFeatures,\n    sort = features.bSort,\n    filter = features.bFilter;\n  if (recompute === undefined || recompute === true) {\n    // Resolve any column types that are unknown due to addition or invalidation\n    _fnColumnTypes(settings);\n    if (sort) {\n      _fnSort(settings);\n    }\n    if (filter) {\n      _fnFilterComplete(settings, settings.oPreviousSearch);\n    } else {\n      // No filtering, so we want to just use the display master\n      settings.aiDisplay = settings.aiDisplayMaster.slice();\n    }\n  }\n  if (holdPosition !== true) {\n    settings._iDisplayStart = 0;\n  }\n\n  // Let any modules know about the draw hold position state (used by\n  // scrolling internally)\n  settings._drawHold = holdPosition;\n  _fnDraw(settings);\n  settings._drawHold = false;\n}\n\n/*\n * Table is empty - create a row with an empty message in it\n */\nfunction _emptyRow(settings) {\n  var oLang = settings.oLanguage;\n  var zero = oLang.sZeroRecords;\n  var dataSrc = _fnDataSource(settings);\n  if (settings.iDraw < 1 && dataSrc === 'ssp' || settings.iDraw <= 1 && dataSrc === 'ajax') {\n    zero = oLang.sLoadingRecords;\n  } else if (oLang.sEmptyTable && settings.fnRecordsTotal() === 0) {\n    zero = oLang.sEmptyTable;\n  }\n  return $('<tr/>').append($('<td />', {\n    'colSpan': _fnVisbleColumns(settings),\n    'class': settings.oClasses.empty.row\n  }).html(zero))[0];\n}\n\n/**\n * Expand the layout items into an object for the rendering function\n */\nfunction _layoutItems(row, align, items) {\n  if (Array.isArray(items)) {\n    for (var i = 0; i < items.length; i++) {\n      _layoutItems(row, align, items[i]);\n    }\n    return;\n  }\n  var rowCell = row[align];\n\n  // If it is an object, then there can be multiple features contained in it\n  if ($.isPlainObject(items)) {\n    // A feature plugin cannot be named \"features\" due to this check\n    if (items.features) {\n      if (items.rowId) {\n        row.id = items.rowId;\n      }\n      if (items.rowClass) {\n        row.className = items.rowClass;\n      }\n      rowCell.id = items.id;\n      rowCell.className = items.className;\n      _layoutItems(row, align, items.features);\n    } else {\n      Object.keys(items).map(function (key) {\n        rowCell.contents.push({\n          feature: key,\n          opts: items[key]\n        });\n      });\n    }\n  } else {\n    rowCell.contents.push(items);\n  }\n}\n\n/**\n * Find, or create a layout row\n */\nfunction _layoutGetRow(rows, rowNum, align) {\n  var row;\n\n  // Find existing rows\n  for (var i = 0; i < rows.length; i++) {\n    row = rows[i];\n    if (row.rowNum === rowNum) {\n      // full is on its own, but start and end share a row\n      if (align === 'full' && row.full || (align === 'start' || align === 'end') && (row.start || row.end)) {\n        if (!row[align]) {\n          row[align] = {\n            contents: []\n          };\n        }\n        return row;\n      }\n    }\n  }\n\n  // If we get this far, then there was no match, create a new row\n  row = {\n    rowNum: rowNum\n  };\n  row[align] = {\n    contents: []\n  };\n  rows.push(row);\n  return row;\n}\n\n/**\n * Convert a `layout` object given by a user to the object structure needed\n * for the renderer. This is done twice, once for above and once for below\n * the table. Ordering must also be considered.\n *\n * @param {*} settings DataTables settings object\n * @param {*} layout Layout object to convert\n * @param {string} side `top` or `bottom`\n * @returns Converted array structure - one item for each row.\n */\nfunction _layoutArray(settings, layout, side) {\n  var rows = [];\n\n  // Split out into an array\n  $.each(layout, function (pos, items) {\n    if (items === null) {\n      return;\n    }\n    var parts = pos.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/);\n    var rowNum = parts[2] ? parts[2] * 1 : 0;\n    var align = parts[3] ? parts[3].toLowerCase() : 'full';\n\n    // Filter out the side we aren't interested in\n    if (parts[1] !== side) {\n      return;\n    }\n\n    // Get or create the row we should attach to\n    var row = _layoutGetRow(rows, rowNum, align);\n    _layoutItems(row, align, items);\n  });\n\n  // Order by item identifier\n  rows.sort(function (a, b) {\n    var order1 = a.rowNum;\n    var order2 = b.rowNum;\n\n    // If both in the same row, then the row with `full` comes first\n    if (order1 === order2) {\n      var ret = a.full && !b.full ? -1 : 1;\n      return side === 'bottom' ? ret * -1 : ret;\n    }\n    return order2 - order1;\n  });\n\n  // Invert for below the table\n  if (side === 'bottom') {\n    rows.reverse();\n  }\n  for (var row = 0; row < rows.length; row++) {\n    delete rows[row].rowNum;\n    _layoutResolve(settings, rows[row]);\n  }\n  return rows;\n}\n\n/**\n * Convert the contents of a row's layout object to nodes that can be inserted\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\n *\n * @param {*} settings DataTables settings object\n * @param {*} row Layout object for this row\n */\nfunction _layoutResolve(settings, row) {\n  var getFeature = function (feature, opts) {\n    if (!_ext.features[feature]) {\n      _fnLog(settings, 0, 'Unknown feature: ' + feature);\n    }\n    return _ext.features[feature].apply(this, [settings, opts]);\n  };\n  var resolve = function (item) {\n    if (!row[item]) {\n      return;\n    }\n    var line = row[item].contents;\n    for (var i = 0, ien = line.length; i < ien; i++) {\n      if (!line[i]) {\n        continue;\n      } else if (typeof line[i] === 'string') {\n        line[i] = getFeature(line[i], null);\n      } else if ($.isPlainObject(line[i])) {\n        // If it's an object, it just has feature and opts properties from\n        // the transform in _layoutArray\n        line[i] = getFeature(line[i].feature, line[i].opts);\n      } else if (typeof line[i].node === 'function') {\n        line[i] = line[i].node(settings);\n      } else if (typeof line[i] === 'function') {\n        var inst = line[i](settings);\n        line[i] = typeof inst.node === 'function' ? inst.node() : inst;\n      }\n    }\n  };\n  resolve('start');\n  resolve('end');\n  resolve('full');\n}\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} settings DataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml(settings) {\n  var classes = settings.oClasses;\n  var table = $(settings.nTable);\n\n  // Wrapper div around everything DataTables controls\n  var insert = $('<div/>').attr({\n    id: settings.sTableId + '_wrapper',\n    'class': classes.container\n  }).insertBefore(table);\n  settings.nTableWrapper = insert[0];\n  if (settings.sDom) {\n    // Legacy\n    _fnLayoutDom(settings, settings.sDom, insert);\n  } else {\n    var top = _layoutArray(settings, settings.layout, 'top');\n    var bottom = _layoutArray(settings, settings.layout, 'bottom');\n    var renderer = _fnRenderer(settings, 'layout');\n\n    // Everything above - the renderer will actually insert the contents into the document\n    top.forEach(function (item) {\n      renderer(settings, insert, item);\n    });\n\n    // The table - always the center of attention\n    renderer(settings, insert, {\n      full: {\n        table: true,\n        contents: [_fnFeatureHtmlTable(settings)]\n      }\n    });\n\n    // Everything below\n    bottom.forEach(function (item) {\n      renderer(settings, insert, item);\n    });\n  }\n\n  // Processing floats on top, so it isn't an inserted feature\n  _processingHtml(settings);\n}\n\n/**\n * Draw the table with the legacy DOM property\n * @param {*} settings DT settings object\n * @param {*} dom DOM string\n * @param {*} insert Insert point\n */\nfunction _fnLayoutDom(settings, dom, insert) {\n  var parts = dom.match(/(\".*?\")|('.*?')|./g);\n  var featureNode, option, newNode, next, attr;\n  for (var i = 0; i < parts.length; i++) {\n    featureNode = null;\n    option = parts[i];\n    if (option == '<') {\n      // New container div\n      newNode = $('<div/>');\n\n      // Check to see if we should append an id and/or a class name to the container\n      next = parts[i + 1];\n      if (next[0] == \"'\" || next[0] == '\"') {\n        attr = next.replace(/['\"]/g, '');\n        var id = '',\n          className;\n\n        /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n         * breaks the string into parts and applies them as needed\n         */\n        if (attr.indexOf('.') != -1) {\n          var split = attr.split('.');\n          id = split[0];\n          className = split[1];\n        } else if (attr[0] == \"#\") {\n          id = attr;\n        } else {\n          className = attr;\n        }\n        newNode.attr('id', id.substring(1)).addClass(className);\n        i++; // Move along the position array\n      }\n      insert.append(newNode);\n      insert = newNode;\n    } else if (option == '>') {\n      // End container div\n      insert = insert.parent();\n    } else if (option == 't') {\n      // Table\n      featureNode = _fnFeatureHtmlTable(settings);\n    } else {\n      DataTable.ext.feature.forEach(function (feature) {\n        if (option == feature.cFeature) {\n          featureNode = feature.fnInit(settings);\n        }\n      });\n    }\n\n    // Add to the display\n    if (featureNode) {\n      insert.append(featureNode);\n    }\n  }\n}\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param {node} thead The header/footer element for the table\n *  @returns {array} Calculated layout array\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader(settings, thead, write) {\n  var columns = settings.aoColumns;\n  var rows = $(thead).children('tr');\n  var row, cell;\n  var i, k, l, iLen, shifted, column, colspan, rowspan;\n  var isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n  var layout = [];\n  var unique;\n  var shift = function (a, i, j) {\n    var k = a[i];\n    while (k[j]) {\n      j++;\n    }\n    return j;\n  };\n\n  // We know how many rows there are in the layout - so prep it\n  for (i = 0, iLen = rows.length; i < iLen; i++) {\n    layout.push([]);\n  }\n  for (i = 0, iLen = rows.length; i < iLen; i++) {\n    row = rows[i];\n    column = 0;\n\n    // For every cell in the row..\n    cell = row.firstChild;\n    while (cell) {\n      if (cell.nodeName.toUpperCase() == 'TD' || cell.nodeName.toUpperCase() == 'TH') {\n        var cols = [];\n\n        // Get the col and rowspan attributes from the DOM and sanitise them\n        colspan = cell.getAttribute('colspan') * 1;\n        rowspan = cell.getAttribute('rowspan') * 1;\n        colspan = !colspan || colspan === 0 || colspan === 1 ? 1 : colspan;\n        rowspan = !rowspan || rowspan === 0 || rowspan === 1 ? 1 : rowspan;\n\n        // There might be colspan cells already in this row, so shift our target\n        // accordingly\n        shifted = shift(layout, i, column);\n\n        // Cache calculation for unique columns\n        unique = colspan === 1 ? true : false;\n\n        // Perform header setup\n        if (write) {\n          if (unique) {\n            // Allow column options to be set from HTML attributes\n            _fnColumnOptions(settings, shifted, $(cell).data());\n\n            // Get the width for the column. This can be defined from the\n            // width attribute, style attribute or `columns.width` option\n            var columnDef = columns[shifted];\n            var width = cell.getAttribute('width') || null;\n            var t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n            if (t) {\n              width = t[1];\n            }\n            columnDef.sWidthOrig = columnDef.sWidth || width;\n            if (isHeader) {\n              // Column title handling - can be user set, or read from the DOM\n              // This happens before the render, so the original is still in place\n              if (columnDef.sTitle !== null && !columnDef.autoTitle) {\n                cell.innerHTML = columnDef.sTitle;\n              }\n              if (!columnDef.sTitle && unique) {\n                columnDef.sTitle = _stripHtml(cell.innerHTML);\n                columnDef.autoTitle = true;\n              }\n            } else {\n              // Footer specific operations\n              if (columnDef.footer) {\n                cell.innerHTML = columnDef.footer;\n              }\n            }\n\n            // Fall back to the aria-label attribute on the table header if no ariaTitle is\n            // provided.\n            if (!columnDef.ariaTitle) {\n              columnDef.ariaTitle = $(cell).attr(\"aria-label\") || columnDef.sTitle;\n            }\n\n            // Column specific class names\n            if (columnDef.className) {\n              $(cell).addClass(columnDef.className);\n            }\n          }\n\n          // Wrap the column title so we can write to it in future\n          if ($('span.dt-column-title', cell).length === 0) {\n            $('<span>').addClass('dt-column-title').append(cell.childNodes).appendTo(cell);\n          }\n          if (isHeader && $('span.dt-column-order', cell).length === 0) {\n            $('<span>').addClass('dt-column-order').appendTo(cell);\n          }\n        }\n\n        // If there is col / rowspan, copy the information into the layout grid\n        for (l = 0; l < colspan; l++) {\n          for (k = 0; k < rowspan; k++) {\n            layout[i + k][shifted + l] = {\n              cell: cell,\n              unique: unique\n            };\n            layout[i + k].row = row;\n          }\n          cols.push(shifted + l);\n        }\n\n        // Assign an attribute so spanning cells can still be identified\n        // as belonging to a column\n        cell.setAttribute('data-dt-column', _unique(cols).join(','));\n      }\n      cell = cell.nextSibling;\n    }\n  }\n  return layout;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart(oSettings) {\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var iInitDisplayStart = oSettings.iInitDisplayStart;\n\n  // Check and see if we have an initial draw position from state saving\n  if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n    oSettings._iDisplayStart = bServerSide ? iInitDisplayStart : iInitDisplayStart >= oSettings.fnRecordsDisplay() ? 0 : iInitDisplayStart;\n    oSettings.iInitDisplayStart = -1;\n  }\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax(oSettings, data, fn) {\n  var ajaxData;\n  var ajax = oSettings.ajax;\n  var instance = oSettings.oInstance;\n  var callback = function (json) {\n    var status = oSettings.jqXHR ? oSettings.jqXHR.status : null;\n    if (json === null || typeof status === 'number' && status == 204) {\n      json = {};\n      _fnAjaxDataSrc(oSettings, json, []);\n    }\n    var error = json.error || json.sError;\n    if (error) {\n      _fnLog(oSettings, 0, error);\n    }\n\n    // Microsoft often wrap JSON as a string in another JSON object\n    // Let's handle that automatically\n    if (json.d && typeof json.d === 'string') {\n      try {\n        json = JSON.parse(json.d);\n      } catch (e) {\n        // noop\n      }\n    }\n    oSettings.json = json;\n    _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true);\n    fn(json);\n  };\n  if ($.isPlainObject(ajax) && ajax.data) {\n    ajaxData = ajax.data;\n    var newData = typeof ajaxData === 'function' ? ajaxData(data, oSettings) :\n    // fn can manipulate data or return\n    ajaxData; // an object object or array to merge\n\n    // If the function returned something, use that alone\n    data = typeof ajaxData === 'function' && newData ? newData : $.extend(true, data, newData);\n\n    // Remove the data property as we've resolved it already and don't want\n    // jQuery to do it again (it is restored at the end of the function)\n    delete ajax.data;\n  }\n  var baseAjax = {\n    \"url\": typeof ajax === 'string' ? ajax : '',\n    \"data\": data,\n    \"success\": callback,\n    \"dataType\": \"json\",\n    \"cache\": false,\n    \"type\": oSettings.sServerMethod,\n    \"error\": function (xhr, error) {\n      var ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true);\n      if (ret.indexOf(true) === -1) {\n        if (error == \"parsererror\") {\n          _fnLog(oSettings, 0, 'Invalid JSON response', 1);\n        } else if (xhr.readyState === 4) {\n          _fnLog(oSettings, 0, 'Ajax error', 7);\n        }\n      }\n      _fnProcessingDisplay(oSettings, false);\n    }\n  };\n\n  // If `ajax` option is an object, extend and override our default base\n  if ($.isPlainObject(ajax)) {\n    $.extend(baseAjax, ajax);\n  }\n\n  // Store the data submitted for the API\n  oSettings.oAjaxData = data;\n\n  // Allow plug-ins and external processes to modify the data\n  _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data, baseAjax], true);\n  if (typeof ajax === 'function') {\n    // Is a function - let the caller define what needs to be done\n    oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n  } else if (ajax.url === '') {\n    // No url, so don't load any data. Just apply an empty data array\n    // to the object for the callback.\n    var empty = {};\n    DataTable.util.set(ajax.dataSrc)(empty, []);\n    callback(empty);\n  } else {\n    // Object to extend the base settings\n    oSettings.jqXHR = $.ajax(baseAjax);\n  }\n\n  // Restore for next time around\n  if (ajaxData) {\n    ajax.data = ajaxData;\n  }\n}\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate(settings) {\n  settings.iDraw++;\n  _fnProcessingDisplay(settings, true);\n  _fnBuildAjax(settings, _fnAjaxParameters(settings), function (json) {\n    _fnAjaxUpdateDraw(settings, json);\n  });\n}\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters(settings) {\n  var columns = settings.aoColumns,\n    features = settings.oFeatures,\n    preSearch = settings.oPreviousSearch,\n    preColSearch = settings.aoPreSearchCols,\n    colData = function (idx, prop) {\n      return typeof columns[idx][prop] === 'function' ? 'function' : columns[idx][prop];\n    };\n  return {\n    draw: settings.iDraw,\n    columns: columns.map(function (column, i) {\n      return {\n        data: colData(i, 'mData'),\n        name: column.sName,\n        searchable: column.bSearchable,\n        orderable: column.bSortable,\n        search: {\n          value: preColSearch[i].search,\n          regex: preColSearch[i].regex,\n          fixed: Object.keys(column.searchFixed).map(function (name) {\n            return {\n              name: name,\n              term: column.searchFixed[name].toString()\n            };\n          })\n        }\n      };\n    }),\n    order: _fnSortFlatten(settings).map(function (val) {\n      return {\n        column: val.col,\n        dir: val.dir,\n        name: colData(val.col, 'sName')\n      };\n    }),\n    start: settings._iDisplayStart,\n    length: features.bPaginate ? settings._iDisplayLength : -1,\n    search: {\n      value: preSearch.search,\n      regex: preSearch.regex,\n      fixed: Object.keys(settings.searchFixed).map(function (name) {\n        return {\n          name: name,\n          term: settings.searchFixed[name].toString()\n        };\n      })\n    }\n  };\n}\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw(settings, json) {\n  var data = _fnAjaxDataSrc(settings, json);\n  var draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n  var recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n  var recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n  if (draw !== undefined) {\n    // Protect against out of sequence returns\n    if (draw * 1 < settings.iDraw) {\n      return;\n    }\n    settings.iDraw = draw * 1;\n  }\n\n  // No data in returned object, so rather than an array, we show an empty table\n  if (!data) {\n    data = [];\n  }\n  _fnClearTable(settings);\n  settings._iRecordsTotal = parseInt(recordsTotal, 10);\n  settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n  for (var i = 0, ien = data.length; i < ien; i++) {\n    _fnAddData(settings, data[i]);\n  }\n  settings.aiDisplay = settings.aiDisplayMaster.slice();\n  _fnColumnTypes(settings);\n  _fnDraw(settings, true);\n  _fnInitComplete(settings);\n  _fnProcessingDisplay(settings, false);\n}\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} settings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\nfunction _fnAjaxDataSrc(settings, json, write) {\n  var dataProp = 'data';\n  if ($.isPlainObject(settings.ajax) && settings.ajax.dataSrc !== undefined) {\n    // Could in inside a `dataSrc` object, or not!\n    var dataSrc = settings.ajax.dataSrc;\n\n    // string, function and object are valid types\n    if (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n      dataProp = dataSrc;\n    } else if (dataSrc.data !== undefined) {\n      dataProp = dataSrc.data;\n    }\n  }\n  if (!write) {\n    if (dataProp === 'data') {\n      // If the default, then we still want to support the old style, and safely ignore\n      // it if possible\n      return json.aaData || json[dataProp];\n    }\n    return dataProp !== \"\" ? _fnGetObjectDataFn(dataProp)(json) : json;\n  }\n\n  // set\n  _fnSetObjectDataFn(dataProp)(json, write);\n}\n\n/**\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n * @param {*} settings DataTables settings object\n * @param {*} param Target parameter\n * @param {*} json JSON data\n * @returns Resolved value\n */\nfunction _fnAjaxDataSrcParam(settings, param, json) {\n  var dataSrc = $.isPlainObject(settings.ajax) ? settings.ajax.dataSrc : null;\n  if (dataSrc && dataSrc[param]) {\n    // Get from custom location\n    return _fnGetObjectDataFn(dataSrc[param])(json);\n  }\n\n  // else - Default behaviour\n  var old = '';\n\n  // Legacy support\n  if (param === 'draw') {\n    old = 'sEcho';\n  } else if (param === 'recordsTotal') {\n    old = 'iTotalRecords';\n  } else if (param === 'recordsFiltered') {\n    old = 'iTotalDisplayRecords';\n  }\n  return json[old] !== undefined ? json[old] : json[param];\n}\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} settings dataTables settings object\n *  @param {object} input search information\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete(settings, input) {\n  var columnsSearch = settings.aoPreSearchCols;\n\n  // In server-side processing all filtering is done by the server, so no point hanging around here\n  if (_fnDataSource(settings) != 'ssp') {\n    // Check if any of the rows were invalidated\n    _fnFilterData(settings);\n\n    // Start from the full data set\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n    // Global filter first\n    _fnFilter(settings.aiDisplay, settings, input.search, input);\n    $.each(settings.searchFixed, function (name, term) {\n      _fnFilter(settings.aiDisplay, settings, term, {});\n    });\n\n    // Then individual column filters\n    for (var i = 0; i < columnsSearch.length; i++) {\n      var col = columnsSearch[i];\n      _fnFilter(settings.aiDisplay, settings, col.search, col, i);\n      $.each(settings.aoColumns[i].searchFixed, function (name, term) {\n        _fnFilter(settings.aiDisplay, settings, term, {}, i);\n      });\n    }\n\n    // And finally global filtering\n    _fnFilterCustom(settings);\n  }\n\n  // Tell the draw function we have been filtering\n  settings.bFiltered = true;\n  _fnCallbackFire(settings, null, 'search', [settings]);\n}\n\n/**\n * Apply custom filtering functions\n * \n * This is legacy now that we have named functions, but it is widely used\n * from 1.x, so it is not yet deprecated.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom(settings) {\n  var filters = DataTable.ext.search;\n  var displayRows = settings.aiDisplay;\n  var row, rowIdx;\n  for (var i = 0, ien = filters.length; i < ien; i++) {\n    var rows = [];\n\n    // Loop over each row and see if it should be included\n    for (var j = 0, jen = displayRows.length; j < jen; j++) {\n      rowIdx = displayRows[j];\n      row = settings.aoData[rowIdx];\n      if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n        rows.push(rowIdx);\n      }\n    }\n\n    // So the array reference doesn't break set the results into the\n    // existing array\n    displayRows.length = 0;\n    _fnArrayApply(displayRows, rows);\n  }\n}\n\n/**\n * Filter the data table based on user input and draw the table\n */\nfunction _fnFilter(searchRows, settings, input, options, column) {\n  if (input === '') {\n    return;\n  }\n  var i = 0;\n  var matched = [];\n\n  // Search term can be a function, regex or string - if a string we apply our\n  // smart filtering regex (assuming the options require that)\n  var searchFunc = typeof input === 'function' ? input : null;\n  var rpSearch = input instanceof RegExp ? input : searchFunc ? null : _fnFilterCreateSearch(input, options);\n\n  // Then for each row, does the test pass. If not, lop the row from the array\n  for (i = 0; i < searchRows.length; i++) {\n    var row = settings.aoData[searchRows[i]];\n    var data = column === undefined ? row._sFilterRow : row._aFilterData[column];\n    if (searchFunc && searchFunc(data, row._aData, searchRows[i], column) || rpSearch && rpSearch.test(data)) {\n      matched.push(searchRows[i]);\n    }\n  }\n\n  // Mutate the searchRows array\n  searchRows.length = matched.length;\n  for (i = 0; i < matched.length; i++) {\n    searchRows[i] = matched[i];\n  }\n}\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch(search, inOpts) {\n  var not = [];\n  var options = $.extend({}, {\n    boundary: false,\n    caseInsensitive: true,\n    exact: false,\n    regex: false,\n    smart: true\n  }, inOpts);\n  if (typeof search !== 'string') {\n    search = search.toString();\n  }\n\n  // Remove diacritics if normalize is set up to do so\n  search = _normalize(search);\n  if (options.exact) {\n    return new RegExp('^' + _fnEscapeRegex(search) + '$', options.caseInsensitive ? 'i' : '');\n  }\n  search = options.regex ? search : _fnEscapeRegex(search);\n  if (options.smart) {\n    /* For smart filtering we want to allow the search to work regardless of\n     * word order. We also want double quoted text to be preserved, so word\n     * order is important - a la google. And a negative look around for\n     * finding rows which don't contain a given string.\n     * \n     * So this is the sort of thing we want to generate:\n     * \n     * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n     */\n    var parts = search.match(/!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g) || [''];\n    var a = parts.map(function (word) {\n      var negative = false;\n      var m;\n\n      // Determine if it is a \"does not include\"\n      if (word.charAt(0) === '!') {\n        negative = true;\n        word = word.substring(1);\n      }\n\n      // Strip the quotes from around matched phrases\n      if (word.charAt(0) === '\"') {\n        m = word.match(/^\"(.*)\"$/);\n        word = m ? m[1] : word;\n      } else if (word.charAt(0) === '\\u201C') {\n        // Smart quote match (iPhone users)\n        m = word.match(/^\\u201C(.*)\\u201D$/);\n        word = m ? m[1] : word;\n      }\n\n      // For our \"not\" case, we need to modify the string that is\n      // allowed to match at the end of the expression.\n      if (negative) {\n        if (word.length > 1) {\n          not.push('(?!' + word + ')');\n        }\n        word = '';\n      }\n      return word.replace(/\"/g, '');\n    });\n    var match = not.length ? not.join('') : '';\n    var boundary = options.boundary ? '\\\\b' : '';\n    search = '^(?=.*?' + boundary + a.join(')(?=.*?' + boundary) + ')(' + match + '.)*$';\n  }\n  return new RegExp(search, options.caseInsensitive ? 'i' : '');\n}\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var column;\n  var j, jen, filterData, cellData, row;\n  var wasInvalidated = false;\n  for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n    if (!data[rowIdx]) {\n      continue;\n    }\n    row = data[rowIdx];\n    if (!row._aFilterData) {\n      filterData = [];\n      for (j = 0, jen = columns.length; j < jen; j++) {\n        column = columns[j];\n        if (column.bSearchable) {\n          cellData = _fnGetCellData(settings, rowIdx, j, 'filter');\n\n          // Search in DataTables is string based\n          if (cellData === null) {\n            cellData = '';\n          }\n          if (typeof cellData !== 'string' && cellData.toString) {\n            cellData = cellData.toString();\n          }\n        } else {\n          cellData = '';\n        }\n\n        // If it looks like there is an HTML entity in the string,\n        // attempt to decode it so sorting works as expected. Note that\n        // we could use a single line of jQuery to do this, but the DOM\n        // method used here is much faster https://jsperf.com/html-decode\n        if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n          __filter_div.innerHTML = cellData;\n          cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText;\n        }\n        if (cellData.replace) {\n          cellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n        }\n        filterData.push(cellData);\n      }\n      row._aFilterData = filterData;\n      row._sFilterRow = filterData.join('  ');\n      wasInvalidated = true;\n    }\n  }\n  return wasInvalidated;\n}\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise(settings) {\n  var i;\n  var init = settings.oInit;\n  var deferLoading = settings.deferLoading;\n  var dataSrc = _fnDataSource(settings);\n\n  // Ensure that the table data is fully initialised\n  if (!settings.bInitialised) {\n    setTimeout(function () {\n      _fnInitialise(settings);\n    }, 200);\n    return;\n  }\n\n  // Build the header / footer for the table\n  _fnBuildHead(settings, 'header');\n  _fnBuildHead(settings, 'footer');\n\n  // Load the table's state (if needed) and then render around it and draw\n  _fnLoadState(settings, init, function () {\n    // Then draw the header / footer\n    _fnDrawHead(settings, settings.aoHeader);\n    _fnDrawHead(settings, settings.aoFooter);\n\n    // Cache the paging start point, as the first redraw will reset it\n    var iAjaxStart = settings.iInitDisplayStart;\n\n    // Local data load\n    // Check if there is data passing into the constructor\n    if (init.aaData) {\n      for (i = 0; i < init.aaData.length; i++) {\n        _fnAddData(settings, init.aaData[i]);\n      }\n    } else if (deferLoading || dataSrc == 'dom') {\n      // Grab the data from the page\n      _fnAddTr(settings, $(settings.nTBody).children('tr'));\n    }\n\n    // Filter not yet applied - copy the display master\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n    // Enable features\n    _fnAddOptionsHtml(settings);\n    _fnSortInit(settings);\n    _colGroup(settings);\n\n    /* Okay to show that something is going on now */\n    _fnProcessingDisplay(settings, true);\n    _fnCallbackFire(settings, null, 'preInit', [settings], true);\n\n    // If there is default sorting required - let's do it. The sort function\n    // will do the drawing for us. Otherwise we draw the table regardless of the\n    // Ajax source - this allows the table to look initialised for Ajax sourcing\n    // data (show 'loading' message possibly)\n    _fnReDraw(settings);\n\n    // Server-side processing init complete is done by _fnAjaxUpdateDraw\n    if (dataSrc != 'ssp' || deferLoading) {\n      // if there is an ajax source load the data\n      if (dataSrc == 'ajax') {\n        _fnBuildAjax(settings, {}, function (json) {\n          var aData = _fnAjaxDataSrc(settings, json);\n\n          // Got the data - add it to the table\n          for (i = 0; i < aData.length; i++) {\n            _fnAddData(settings, aData[i]);\n          }\n\n          // Reset the init display for cookie saving. We've already done\n          // a filter, and therefore cleared it before. So we need to make\n          // it appear 'fresh'\n          settings.iInitDisplayStart = iAjaxStart;\n          _fnReDraw(settings);\n          _fnProcessingDisplay(settings, false);\n          _fnInitComplete(settings);\n        }, settings);\n      } else {\n        _fnInitComplete(settings);\n        _fnProcessingDisplay(settings, false);\n      }\n    }\n  });\n}\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete(settings) {\n  if (settings._bInitComplete) {\n    return;\n  }\n  var args = [settings, settings.json];\n  settings._bInitComplete = true;\n\n  // Table is fully set up and we have data, so calculate the\n  // column widths\n  _fnAdjustColumnSizing(settings);\n  _fnCallbackFire(settings, null, 'plugin-init', args, true);\n  _fnCallbackFire(settings, 'aoInitComplete', 'init', args, true);\n}\nfunction _fnLengthChange(settings, val) {\n  var len = parseInt(val, 10);\n  settings._iDisplayLength = len;\n  _fnLengthOverflow(settings);\n\n  // Fire length change event\n  _fnCallbackFire(settings, null, 'length', [settings, len]);\n}\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange(settings, action, redraw) {\n  var start = settings._iDisplayStart,\n    len = settings._iDisplayLength,\n    records = settings.fnRecordsDisplay();\n  if (records === 0 || len === -1) {\n    start = 0;\n  } else if (typeof action === \"number\") {\n    start = action * len;\n    if (start > records) {\n      start = 0;\n    }\n  } else if (action == \"first\") {\n    start = 0;\n  } else if (action == \"previous\") {\n    start = len >= 0 ? start - len : 0;\n    if (start < 0) {\n      start = 0;\n    }\n  } else if (action == \"next\") {\n    if (start + len < records) {\n      start += len;\n    }\n  } else if (action == \"last\") {\n    start = Math.floor((records - 1) / len) * len;\n  } else if (action === 'ellipsis') {\n    return;\n  } else {\n    _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n  }\n  var changed = settings._iDisplayStart !== start;\n  settings._iDisplayStart = start;\n  _fnCallbackFire(settings, null, changed ? 'page' : 'page-nc', [settings]);\n  if (changed && redraw) {\n    _fnDraw(settings);\n  }\n  return changed;\n}\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings DataTables settings object\n */\nfunction _processingHtml(settings) {\n  var table = settings.nTable;\n  var scrolling = settings.oScroll.sX !== '' || settings.oScroll.sY !== '';\n  if (settings.oFeatures.bProcessing) {\n    var n = $('<div/>', {\n      'id': settings.sTableId + '_processing',\n      'class': settings.oClasses.processing.container,\n      'role': 'status'\n    }).html(settings.oLanguage.sProcessing).append('<div><div></div><div></div><div></div><div></div></div>');\n\n    // Different positioning depending on if scrolling is enabled or not\n    if (scrolling) {\n      n.prependTo($('div.dt-scroll', settings.nTableWrapper));\n    } else {\n      n.insertBefore(table);\n    }\n    $(table).on('processing.dt.DT', function (e, s, show) {\n      n.css('display', show ? 'block' : 'none');\n    });\n  }\n}\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings DataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n */\nfunction _fnProcessingDisplay(settings, show) {\n  // Ignore cases when we are still redrawing\n  if (settings.bDrawing && show === false) {\n    return;\n  }\n  _fnCallbackFire(settings, null, 'processing', [settings, show]);\n}\n\n/**\n * Show the processing element if an action takes longer than a given time\n *\n * @param {*} settings DataTables settings object\n * @param {*} enable Do (true) or not (false) async processing (local feature enablement)\n * @param {*} run Function to run\n */\nfunction _fnProcessingRun(settings, enable, run) {\n  if (!enable) {\n    // Immediate execution, synchronous\n    run();\n  } else {\n    _fnProcessingDisplay(settings, true);\n\n    // Allow the processing display to show if needed\n    setTimeout(function () {\n      run();\n      _fnProcessingDisplay(settings, false);\n    }, 0);\n  }\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable(settings) {\n  var table = $(settings.nTable);\n\n  // Scrolling from here on in\n  var scroll = settings.oScroll;\n  if (scroll.sX === '' && scroll.sY === '') {\n    return settings.nTable;\n  }\n  var scrollX = scroll.sX;\n  var scrollY = scroll.sY;\n  var classes = settings.oClasses.scrolling;\n  var caption = settings.captionNode;\n  var captionSide = caption ? caption._captionSide : null;\n  var headerClone = $(table[0].cloneNode(false));\n  var footerClone = $(table[0].cloneNode(false));\n  var footer = table.children('tfoot');\n  var _div = '<div/>';\n  var size = function (s) {\n    return !s ? null : _fnStringToCss(s);\n  };\n  if (!footer.length) {\n    footer = null;\n  }\n\n  /*\n   * The HTML structure that we want to generate in this function is:\n   *  div - scroller\n   *    div - scroll head\n   *      div - scroll head inner\n   *        table - scroll head table\n   *          thead - thead\n   *    div - scroll body\n   *      table - table (master table)\n   *        thead - thead clone for sizing\n   *        tbody - tbody\n   *    div - scroll foot\n   *      div - scroll foot inner\n   *        table - scroll foot table\n   *          tfoot - tfoot\n   */\n  var scroller = $(_div, {\n    'class': classes.container\n  }).append($(_div, {\n    'class': classes.header.self\n  }).css({\n    overflow: 'hidden',\n    position: 'relative',\n    border: 0,\n    width: scrollX ? size(scrollX) : '100%'\n  }).append($(_div, {\n    'class': classes.header.inner\n  }).css({\n    'box-sizing': 'content-box',\n    width: scroll.sXInner || '100%'\n  }).append(headerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'top' ? caption : null).append(table.children('thead'))))).append($(_div, {\n    'class': classes.body\n  }).css({\n    position: 'relative',\n    overflow: 'auto',\n    width: size(scrollX)\n  }).append(table));\n  if (footer) {\n    scroller.append($(_div, {\n      'class': classes.footer.self\n    }).css({\n      overflow: 'hidden',\n      border: 0,\n      width: scrollX ? size(scrollX) : '100%'\n    }).append($(_div, {\n      'class': classes.footer.inner\n    }).append(footerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'bottom' ? caption : null).append(table.children('tfoot')))));\n  }\n  var children = scroller.children();\n  var scrollHead = children[0];\n  var scrollBody = children[1];\n  var scrollFoot = footer ? children[2] : null;\n\n  // When the body is scrolled, then we also want to scroll the headers\n  $(scrollBody).on('scroll.DT', function () {\n    var scrollLeft = this.scrollLeft;\n    scrollHead.scrollLeft = scrollLeft;\n    if (footer) {\n      scrollFoot.scrollLeft = scrollLeft;\n    }\n  });\n\n  // When focus is put on the header cells, we might need to scroll the body\n  $('th, td', scrollHead).on('focus', function () {\n    var scrollLeft = scrollHead.scrollLeft;\n    scrollBody.scrollLeft = scrollLeft;\n    if (footer) {\n      scrollBody.scrollLeft = scrollLeft;\n    }\n  });\n  $(scrollBody).css('max-height', scrollY);\n  if (!scroll.bCollapse) {\n    $(scrollBody).css('height', scrollY);\n  }\n  settings.nScrollHead = scrollHead;\n  settings.nScrollBody = scrollBody;\n  settings.nScrollFoot = scrollFoot;\n\n  // On redraw - align columns\n  settings.aoDrawCallback.push(_fnScrollDraw);\n  return scroller[0];\n}\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Correct colgroup > col values if needed\n *   3. Copy colgroup > col over to header and footer\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw(settings) {\n  // Given that this is such a monster function, a lot of variables are use\n  // to try and keep the minimised size as small as possible\n  var scroll = settings.oScroll,\n    barWidth = scroll.iBarWidth,\n    divHeader = $(settings.nScrollHead),\n    divHeaderInner = divHeader.children('div'),\n    divHeaderTable = divHeaderInner.children('table'),\n    divBodyEl = settings.nScrollBody,\n    divBody = $(divBodyEl),\n    divFooter = $(settings.nScrollFoot),\n    divFooterInner = divFooter.children('div'),\n    divFooterTable = divFooterInner.children('table'),\n    header = $(settings.nTHead),\n    table = $(settings.nTable),\n    footer = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n    browser = settings.oBrowser,\n    headerCopy,\n    footerCopy;\n\n  // If the scrollbar visibility has changed from the last draw, we need to\n  // adjust the column sizes as the table width will have changed to account\n  // for the scrollbar\n  var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n  if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n    settings.scrollBarVis = scrollBarVis;\n    _fnAdjustColumnSizing(settings);\n    return; // adjust column sizing will call this function again\n  } else {\n    settings.scrollBarVis = scrollBarVis;\n  }\n\n  // 1. Re-create the table inside the scrolling div\n  // Remove the old minimised thead and tfoot elements in the inner table\n  table.children('thead, tfoot').remove();\n\n  // Clone the current header and footer elements and then place it into the inner table\n  headerCopy = header.clone().prependTo(table);\n  headerCopy.find('th, td').removeAttr('tabindex');\n  headerCopy.find('[id]').removeAttr('id');\n  if (footer) {\n    footerCopy = footer.clone().prependTo(table);\n    footerCopy.find('[id]').removeAttr('id');\n  }\n\n  // 2. Correct colgroup > col values if needed\n  // It is possible that the cell sizes are smaller than the content, so we need to\n  // correct colgroup>col for such cases. This can happen if the auto width detection\n  // uses a cell which has a longer string, but isn't the widest! For example \n  // \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n  // \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n  // Note the use of translating into a column index to get the `col` element. This\n  // is because of Responsive which might remove `col` elements, knocking the alignment\n  // of the indexes out.\n  if (settings.aiDisplay.length) {\n    // Get the column sizes from the first row in the table. This should really be a\n    // [].find, but it wasn't supported in Chrome until Sept 2015, and DT has 10 year\n    // browser support\n    var firstTr = null;\n    var start = _fnDataSource(settings) !== 'ssp' ? settings._iDisplayStart : 0;\n    for (i = start; i < start + settings.aiDisplay.length; i++) {\n      var idx = settings.aiDisplay[i];\n      var tr = settings.aoData[idx].nTr;\n      if (tr) {\n        firstTr = tr;\n        break;\n      }\n    }\n    if (firstTr) {\n      var colSizes = $(firstTr).children('th, td').map(function (vis) {\n        return {\n          idx: _fnVisibleToColumnIndex(settings, vis),\n          width: $(this).outerWidth()\n        };\n      });\n\n      // Check against what the colgroup > col is set to and correct if needed\n      for (var i = 0; i < colSizes.length; i++) {\n        var colEl = settings.aoColumns[colSizes[i].idx].colEl[0];\n        var colWidth = colEl.style.width.replace('px', '');\n        if (colWidth !== colSizes[i].width) {\n          colEl.style.width = colSizes[i].width + 'px';\n          if (scroll.sX) {\n            colEl.style.minWidth = colSizes[i].width + 'px';\n          }\n        }\n      }\n    }\n  }\n\n  // 3. Copy the colgroup over to the header and footer\n  divHeaderTable.find('colgroup').remove();\n  divHeaderTable.append(settings.colgroup.clone());\n  if (footer) {\n    divFooterTable.find('colgroup').remove();\n    divFooterTable.append(settings.colgroup.clone());\n  }\n\n  // \"Hide\" the header and footer that we used for the sizing. We need to keep\n  // the content of the cell so that the width applied to the header and body\n  // both match, but we want to hide it completely.\n  $('th, td', headerCopy).each(function () {\n    $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n  });\n  if (footer) {\n    $('th, td', footerCopy).each(function () {\n      $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n    });\n  }\n\n  // 4. Clean up\n  // Figure out if there are scrollbar present - if so then we need a the header and footer to\n  // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n  var isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n  var paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right');\n\n  // Set the width's of the header and footer tables\n  var outerWidth = table.outerWidth();\n  divHeaderTable.css('width', _fnStringToCss(outerWidth));\n  divHeaderInner.css('width', _fnStringToCss(outerWidth)).css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n  if (footer) {\n    divFooterTable.css('width', _fnStringToCss(outerWidth));\n    divFooterInner.css('width', _fnStringToCss(outerWidth)).css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n  }\n\n  // Correct DOM ordering for colgroup - comes before the thead\n  table.children('colgroup').prependTo(table);\n\n  // Adjust the position of the header in case we loose the y-scrollbar\n  divBody.trigger('scroll');\n\n  // If sorting or filtering has occurred, jump the scrolling back to the top\n  // only if we aren't holding the position\n  if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n    divBodyEl.scrollTop = 0;\n  }\n}\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths(settings) {\n  // Not interested in doing column width calculation if auto-width is disabled\n  if (!settings.oFeatures.bAutoWidth) {\n    return;\n  }\n  var table = settings.nTable,\n    columns = settings.aoColumns,\n    scroll = settings.oScroll,\n    scrollY = scroll.sY,\n    scrollX = scroll.sX,\n    scrollXInner = scroll.sXInner,\n    visibleColumns = _fnGetColumns(settings, 'bVisible'),\n    tableWidthAttr = table.getAttribute('width'),\n    // from DOM element\n    tableContainer = table.parentNode,\n    i,\n    column,\n    columnIdx;\n  var styleWidth = table.style.width;\n\n  // If there is no width applied as a CSS style or as an attribute, we assume that\n  // the width is intended to be 100%, which is usually is in CSS, but it is very\n  // difficult to correctly parse the rules to get the final result.\n  if (!styleWidth && !tableWidthAttr) {\n    table.style.width = '100%';\n    styleWidth = '100%';\n  }\n  if (styleWidth && styleWidth.indexOf('%') !== -1) {\n    tableWidthAttr = styleWidth;\n  }\n\n  // Let plug-ins know that we are doing a recalc, in case they have changed any of the\n  // visible columns their own way (e.g. Responsive uses display:none).\n  _fnCallbackFire(settings, null, 'column-calc', {\n    visible: visibleColumns\n  }, false);\n\n  // Construct a single row, worst case, table with the widest\n  // node in the data, assign any user defined widths, then insert it into\n  // the DOM and allow the browser to do all the hard work of calculating\n  // table widths\n  var tmpTable = $(table.cloneNode()).css('visibility', 'hidden').removeAttr('id');\n\n  // Clean up the table body\n  tmpTable.append('<tbody>');\n  var tr = $('<tr/>').appendTo(tmpTable.find('tbody'));\n\n  // Clone the table header and footer - we can't use the header / footer\n  // from the cloned table, since if scrolling is active, the table's\n  // real header and footer are contained in different table tags\n  tmpTable.append($(settings.nTHead).clone()).append($(settings.nTFoot).clone());\n\n  // Remove any assigned widths from the footer (from scrolling)\n  tmpTable.find('tfoot th, tfoot td').css('width', '');\n\n  // Apply custom sizing to the cloned header\n  tmpTable.find('thead th, thead td').each(function () {\n    // Get the `width` from the header layout\n    var width = _fnColumnsSumWidth(settings, this, true, false);\n    if (width) {\n      this.style.width = width;\n\n      // For scrollX we need to force the column width otherwise the\n      // browser will collapse it. If this width is smaller than the\n      // width the column requires, then it will have no effect\n      if (scrollX) {\n        this.style.minWidth = width;\n        $(this).append($('<div/>').css({\n          width: width,\n          margin: 0,\n          padding: 0,\n          border: 0,\n          height: 1\n        }));\n      }\n    } else {\n      this.style.width = '';\n    }\n  });\n\n  // Find the widest piece of data for each column and put it into the table\n  for (i = 0; i < visibleColumns.length; i++) {\n    columnIdx = visibleColumns[i];\n    column = columns[columnIdx];\n    var longest = _fnGetMaxLenString(settings, columnIdx);\n    var autoClass = _ext.type.className[column.sType];\n    var text = longest + column.sContentPadding;\n    var insert = longest.indexOf('<') === -1 ? document.createTextNode(text) : text;\n    $('<td/>').addClass(autoClass).addClass(column.sClass).append(insert).appendTo(tr);\n  }\n\n  // Tidy the temporary table - remove name attributes so there aren't\n  // duplicated in the dom (radio elements for example)\n  $('[name]', tmpTable).removeAttr('name');\n\n  // Table has been built, attach to the document so we can work with it.\n  // A holding element is used, positioned at the top of the container\n  // with minimal height, so it has no effect on if the container scrolls\n  // or not. Otherwise it might trigger scrolling when it actually isn't\n  // needed\n  var holder = $('<div/>').css(scrollX || scrollY ? {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: 1,\n    right: 0,\n    overflow: 'hidden'\n  } : {}).append(tmpTable).appendTo(tableContainer);\n\n  // When scrolling (X or Y) we want to set the width of the table as \n  // appropriate. However, when not scrolling leave the table width as it\n  // is. This results in slightly different, but I think correct behaviour\n  if (scrollX && scrollXInner) {\n    tmpTable.width(scrollXInner);\n  } else if (scrollX) {\n    tmpTable.css('width', 'auto');\n    tmpTable.removeAttr('width');\n\n    // If there is no width attribute or style, then allow the table to\n    // collapse\n    if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n      tmpTable.width(tableContainer.clientWidth);\n    }\n  } else if (scrollY) {\n    tmpTable.width(tableContainer.clientWidth);\n  } else if (tableWidthAttr) {\n    tmpTable.width(tableWidthAttr);\n  }\n\n  // Get the width of each column in the constructed table\n  var total = 0;\n  var bodyCells = tmpTable.find('tbody tr').eq(0).children();\n  for (i = 0; i < visibleColumns.length; i++) {\n    // Use getBounding for sub-pixel accuracy, which we then want to round up!\n    var bounding = bodyCells[i].getBoundingClientRect().width;\n\n    // Total is tracked to remove any sub-pixel errors as the outerWidth\n    // of the table might not equal the total given here\n    total += bounding;\n\n    // Width for each column to use\n    columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding);\n  }\n  table.style.width = _fnStringToCss(total);\n\n  // Finished with the table - ditch it\n  holder.remove();\n\n  // If there is a width attr, we want to attach an event listener which\n  // allows the table sizing to automatically adjust when the window is\n  // resized. Use the width attr rather than CSS, since we can't know if the\n  // CSS is a relative value or absolute - DOM read is always px.\n  if (tableWidthAttr) {\n    table.style.width = _fnStringToCss(tableWidthAttr);\n  }\n  if ((tableWidthAttr || scrollX) && !settings._reszEvt) {\n    var wrapperWidth = function () {\n      return $(settings.nTableWrapper).is(':visible') ? $(settings.nTableWrapper).width() : 0;\n    };\n    settings.containerWidth = wrapperWidth();\n    var resize = DataTable.util.throttle(function () {\n      var newWidth = wrapperWidth();\n\n      // Don't do it if destroying, is the same size as last time, or the container\n      // width is 0\n      if (!settings.bDestroying && settings.containerWidth !== newWidth && newWidth !== 0) {\n        // Do a resize\n        _fnAdjustColumnSizing(settings);\n        settings.containerWidth = newWidth;\n      }\n    });\n\n    // For browsers that support it (~2020 onwards for wide support) we can watch for the\n    // container changing width.\n    if (window.ResizeObserver) {\n      settings.resizeObserver = new ResizeObserver(function (e) {\n        var box = e[0].contentBoxSize;\n        var size = Array.isArray(box) ? box[0].inlineSize // Spec\n        : box.inlineSize; // Old Firefox\n\n        // Under this condition a resize will trigger its own resize, causing an error.\n        if (size < settings.containerWidth) {\n          return;\n        }\n        resize();\n      });\n      settings.resizeObserver.observe(settings.nTableWrapper);\n    } else {\n      // For old browsers, the best we can do is listen for a window resize\n      $(window).on('resize.DT-' + settings.sInstance, resize);\n    }\n    settings._reszEvt = true;\n  }\n}\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} string of the max length\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString(settings, colIdx) {\n  var column = settings.aoColumns[colIdx];\n  if (!column.maxLenString) {\n    var s,\n      max = '',\n      maxLen = -1;\n    for (var i = 0, ien = settings.aiDisplayMaster.length; i < ien; i++) {\n      var rowIdx = settings.aiDisplayMaster[i];\n      var data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n      var cellString = data && typeof data === 'object' && data.nodeType ? data.innerHTML : data + '';\n\n      // Remove id / name attributes from elements so they\n      // don't interfere with existing elements\n      cellString = cellString.replace(/id=\".*?\"/g, '').replace(/name=\".*?\"/g, '');\n      s = _stripHtml(cellString).replace(/&nbsp;/g, ' ');\n      if (s.length > maxLen) {\n        // We want the HTML in the string, but the length that\n        // is important is the stripped string\n        max = cellString;\n        maxLen = s.length;\n      }\n    }\n    column.maxLenString = max;\n  }\n  return column.maxLenString;\n}\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss(s) {\n  if (s === null) {\n    return '0px';\n  }\n  if (typeof s == 'number') {\n    return s < 0 ? '0px' : s + 'px';\n  }\n\n  // Check it has a unit character already\n  return s.match(/\\d$/) ? s + 'px' : s;\n}\n\n/**\n * Re-insert the `col` elements for current visibility\n *\n * @param {*} settings DT settings\n */\nfunction _colGroup(settings) {\n  var cols = settings.aoColumns;\n  settings.colgroup.empty();\n  for (i = 0; i < cols.length; i++) {\n    if (cols[i].bVisible) {\n      settings.colgroup.append(cols[i].colEl);\n    }\n  }\n}\nfunction _fnSortInit(settings) {\n  var target = settings.nTHead;\n  var headerRows = target.querySelectorAll('tr');\n  var legacyTop = settings.bSortCellsTop;\n  var notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\n  // Legacy support for `orderCellsTop`\n  if (legacyTop === true) {\n    target = headerRows[0];\n  } else if (legacyTop === false) {\n    target = headerRows[headerRows.length - 1];\n  }\n  _fnSortAttachListener(settings, target, target === settings.nTHead ? 'tr' + notSelector + ' th' + notSelector + ', tr' + notSelector + ' td' + notSelector : 'th' + notSelector + ', td' + notSelector);\n\n  // Need to resolve the user input array into our internal structure\n  var order = [];\n  _fnSortResolve(settings, order, settings.aaSorting);\n  settings.aaSorting = order;\n}\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n  _fnBindAction(node, selector, function (e) {\n    var run = false;\n    var columns = column === undefined ? _fnColumnsFromHeader(e.target) : [column];\n    if (columns.length) {\n      for (var i = 0, ien = columns.length; i < ien; i++) {\n        var ret = _fnSortAdd(settings, columns[i], i, e.shiftKey);\n        if (ret !== false) {\n          run = true;\n        }\n\n        // If the first entry is no sort, then subsequent\n        // sort columns are ignored\n        if (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\n          break;\n        }\n      }\n      if (run) {\n        _fnProcessingRun(settings, true, function () {\n          _fnSort(settings);\n          _fnSortDisplay(settings, settings.aiDisplay);\n          _fnReDraw(settings, false, false);\n          if (callback) {\n            callback();\n          }\n        });\n      }\n    }\n  });\n}\n\n/**\n * Sort the display array to match the master's order\n * @param {*} settings\n */\nfunction _fnSortDisplay(settings, display) {\n  if (display.length < 2) {\n    return;\n  }\n  var master = settings.aiDisplayMaster;\n  var masterMap = {};\n  var map = {};\n  var i;\n\n  // Rather than needing an `indexOf` on master array, we can create a map\n  for (i = 0; i < master.length; i++) {\n    masterMap[master[i]] = i;\n  }\n\n  // And then cache what would be the indexOf fom the display\n  for (i = 0; i < display.length; i++) {\n    map[display[i]] = masterMap[display[i]];\n  }\n  display.sort(function (a, b) {\n    // Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n    return map[a] - map[b];\n  });\n}\nfunction _fnSortResolve(settings, nestedSort, sort) {\n  var push = function (a) {\n    if ($.isPlainObject(a)) {\n      if (a.idx !== undefined) {\n        // Index based ordering\n        nestedSort.push([a.idx, a.dir]);\n      } else if (a.name) {\n        // Name based ordering\n        var cols = _pluck(settings.aoColumns, 'sName');\n        var idx = cols.indexOf(a.name);\n        if (idx !== -1) {\n          nestedSort.push([idx, a.dir]);\n        }\n      }\n    } else {\n      // Plain column index and direction pair\n      nestedSort.push(a);\n    }\n  };\n  if ($.isPlainObject(sort)) {\n    // Object\n    push(sort);\n  } else if (sort.length && typeof sort[0] === 'number') {\n    // 1D array\n    push(sort);\n  } else if (sort.length) {\n    // 2D array\n    for (var z = 0; z < sort.length; z++) {\n      push(sort[z]); // Object or array\n    }\n  }\n}\nfunction _fnSortFlatten(settings) {\n  var i,\n    k,\n    kLen,\n    aSort = [],\n    extSort = DataTable.ext.type.order,\n    aoColumns = settings.aoColumns,\n    aDataSort,\n    iCol,\n    sType,\n    srcCol,\n    fixed = settings.aaSortingFixed,\n    fixedObj = $.isPlainObject(fixed),\n    nestedSort = [];\n  if (!settings.oFeatures.bSort) {\n    return aSort;\n  }\n\n  // Build the sort array, with pre-fix and post-fix options if they have been\n  // specified\n  if (Array.isArray(fixed)) {\n    _fnSortResolve(settings, nestedSort, fixed);\n  }\n  if (fixedObj && fixed.pre) {\n    _fnSortResolve(settings, nestedSort, fixed.pre);\n  }\n  _fnSortResolve(settings, nestedSort, settings.aaSorting);\n  if (fixedObj && fixed.post) {\n    _fnSortResolve(settings, nestedSort, fixed.post);\n  }\n  for (i = 0; i < nestedSort.length; i++) {\n    srcCol = nestedSort[i][0];\n    if (aoColumns[srcCol]) {\n      aDataSort = aoColumns[srcCol].aDataSort;\n      for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n        iCol = aDataSort[k];\n        sType = aoColumns[iCol].sType || 'string';\n        if (nestedSort[i]._idx === undefined) {\n          nestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n        }\n        if (nestedSort[i][1]) {\n          aSort.push({\n            src: srcCol,\n            col: iCol,\n            dir: nestedSort[i][1],\n            index: nestedSort[i]._idx,\n            type: sType,\n            formatter: extSort[sType + \"-pre\"],\n            sorter: extSort[sType + \"-\" + nestedSort[i][1]]\n          });\n        }\n      }\n    }\n  }\n  return aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSort(oSettings, col, dir) {\n  var i,\n    ien,\n    iLen,\n    aiOrig = [],\n    extSort = DataTable.ext.type.order,\n    aoData = oSettings.aoData,\n    sortCol,\n    displayMaster = oSettings.aiDisplayMaster,\n    aSort;\n\n  // Allow a specific column to be sorted, which will _not_ alter the display\n  // master\n  if (col !== undefined) {\n    var srcCol = oSettings.aoColumns[col];\n    aSort = [{\n      src: col,\n      col: col,\n      dir: dir,\n      index: 0,\n      type: srcCol.sType,\n      formatter: extSort[srcCol.sType + \"-pre\"],\n      sorter: extSort[srcCol.sType + \"-\" + dir]\n    }];\n    displayMaster = displayMaster.slice();\n  } else {\n    aSort = _fnSortFlatten(oSettings);\n  }\n  for (i = 0, ien = aSort.length; i < ien; i++) {\n    sortCol = aSort[i];\n\n    // Load the data needed for the sort, for each cell\n    _fnSortData(oSettings, sortCol.col);\n  }\n\n  /* No sorting required if server-side or no sorting array */\n  if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n    // Reset the initial positions on each pass so we get a stable sort\n    for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n      aiOrig[i] = i;\n    }\n\n    // If the first sort is desc, then reverse the array to preserve original\n    // order, just in reverse\n    if (aSort.length && aSort[0].dir === 'desc' && oSettings.orderDescReverse) {\n      aiOrig.reverse();\n    }\n\n    /* Do the sort - here we want multi-column sorting based on a given data source (column)\n     * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n     * follow on it's own, but this is what we want (example two column sorting):\n     *  fnLocalSorting = function(a,b){\n     *    var test;\n     *    test = oSort['string-asc']('data11', 'data12');\n     *      if (test !== 0)\n     *        return test;\n     *    test = oSort['numeric-desc']('data21', 'data22');\n     *    if (test !== 0)\n     *      return test;\n     *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n     *  }\n     * Basically we have a test for each sorting column, if the data in that column is equal,\n     * test the next column. If all columns match, then we use a numeric sort on the row\n     * positions in the original data array to provide a stable sort.\n     */\n    displayMaster.sort(function (a, b) {\n      var x,\n        y,\n        k,\n        test,\n        sort,\n        len = aSort.length,\n        dataA = aoData[a]._aSortData,\n        dataB = aoData[b]._aSortData;\n      for (k = 0; k < len; k++) {\n        sort = aSort[k];\n\n        // Data, which may have already been through a `-pre` function\n        x = dataA[sort.col];\n        y = dataB[sort.col];\n        if (sort.sorter) {\n          // If there is a custom sorter (`-asc` or `-desc`) for this\n          // data type, use it\n          test = sort.sorter(x, y);\n          if (test !== 0) {\n            return test;\n          }\n        } else {\n          // Otherwise, use generic sorting\n          test = x < y ? -1 : x > y ? 1 : 0;\n          if (test !== 0) {\n            return sort.dir === 'asc' ? test : -test;\n          }\n        }\n      }\n      x = aiOrig[a];\n      y = aiOrig[b];\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n  } else if (aSort.length === 0) {\n    // Apply index order\n    displayMaster.sort(function (x, y) {\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n  }\n  if (col === undefined) {\n    // Tell the draw function that we have sorted the data\n    oSettings.bSorted = true;\n    oSettings.sortDetails = aSort;\n    _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort]);\n  }\n  return displayMaster;\n}\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {int} addIndex Counter\n *  @param {boolean} [shift=false] Shift click add\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAdd(settings, colIdx, addIndex, shift) {\n  var col = settings.aoColumns[colIdx];\n  var sorting = settings.aaSorting;\n  var asSorting = col.asSorting;\n  var nextSortIdx;\n  var next = function (a, overflow) {\n    var idx = a._idx;\n    if (idx === undefined) {\n      idx = asSorting.indexOf(a[1]);\n    }\n    return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0;\n  };\n  if (!col.bSortable) {\n    return false;\n  }\n\n  // Convert to 2D array if needed\n  if (typeof sorting[0] === 'number') {\n    sorting = settings.aaSorting = [sorting];\n  }\n\n  // If appending the sort then we are multi-column sorting\n  if ((shift || addIndex) && settings.oFeatures.bSortMulti) {\n    // Are we already doing some kind of sort on this column?\n    var sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n    if (sortIdx !== -1) {\n      // Yes, modify the sort\n      nextSortIdx = next(sorting[sortIdx], true);\n      if (nextSortIdx === null && sorting.length === 1) {\n        nextSortIdx = 0; // can't remove sorting completely\n      }\n      if (nextSortIdx === null) {\n        sorting.splice(sortIdx, 1);\n      } else {\n        sorting[sortIdx][1] = asSorting[nextSortIdx];\n        sorting[sortIdx]._idx = nextSortIdx;\n      }\n    } else if (shift) {\n      // No sort on this column yet, being added by shift click\n      // add it as itself\n      sorting.push([colIdx, asSorting[0], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    } else {\n      // No sort on this column yet, being added from a colspan\n      // so add with same direction as first column\n      sorting.push([colIdx, sorting[0][1], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    }\n  } else if (sorting.length && sorting[0][0] == colIdx) {\n    // Single column - already sorting on this column, modify the sort\n    nextSortIdx = next(sorting[0]);\n    sorting.length = 1;\n    sorting[0][1] = asSorting[nextSortIdx];\n    sorting[0]._idx = nextSortIdx;\n  } else {\n    // Single column - sort only on this column\n    sorting.length = 0;\n    sorting.push([colIdx, asSorting[0]]);\n    sorting[0]._idx = 0;\n  }\n}\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses(settings) {\n  var oldSort = settings.aLastSort;\n  var sortClass = settings.oClasses.order.position;\n  var sort = _fnSortFlatten(settings);\n  var features = settings.oFeatures;\n  var i, ien, colIdx;\n  if (features.bSort && features.bSortClasses) {\n    // Remove old sorting classes\n    for (i = 0, ien = oldSort.length; i < ien; i++) {\n      colIdx = oldSort[i].src;\n\n      // Remove column sorting\n      $(_pluck(settings.aoData, 'anCells', colIdx)).removeClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n\n    // Add new column sorting\n    for (i = 0, ien = sort.length; i < ien; i++) {\n      colIdx = sort[i].src;\n      $(_pluck(settings.aoData, 'anCells', colIdx)).addClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n  }\n  settings.aLastSort = sort;\n}\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData(settings, colIdx) {\n  // Custom sorting function - provided by the sort data type\n  var column = settings.aoColumns[colIdx];\n  var customSort = DataTable.ext.order[column.sSortDataType];\n  var customData;\n  if (customSort) {\n    customData = customSort.call(settings.oInstance, settings, colIdx, _fnColumnIndexToVisible(settings, colIdx));\n  }\n\n  // Use / populate cache\n  var row, cellData;\n  var formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n  var data = settings.aoData;\n  for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n    // Sparse array\n    if (!data[rowIdx]) {\n      continue;\n    }\n    row = data[rowIdx];\n    if (!row._aSortData) {\n      row._aSortData = [];\n    }\n    if (!row._aSortData[colIdx] || customSort) {\n      cellData = customSort ? customData[rowIdx] :\n      // If there was a custom sort function, use data from there\n      _fnGetCellData(settings, rowIdx, colIdx, 'sort');\n      row._aSortData[colIdx] = formatter ? formatter(cellData, settings) : cellData;\n    }\n  }\n}\n\n/**\n * State information for a table\n *\n * @param {*} settings\n * @returns State object\n */\nfunction _fnSaveState(settings) {\n  if (settings._bLoadingState) {\n    return;\n  }\n\n  // Sort state saving uses [[idx, order]] structure.\n  var sorting = [];\n  _fnSortResolve(settings, sorting, settings.aaSorting);\n\n  /* Store the interesting variables */\n  var columns = settings.aoColumns;\n  var state = {\n    time: +new Date(),\n    start: settings._iDisplayStart,\n    length: settings._iDisplayLength,\n    order: sorting.map(function (sort) {\n      // If a column name is available, use it\n      return columns[sort[0]] && columns[sort[0]].sName ? [columns[sort[0]].sName, sort[1]] : sort.slice();\n    }),\n    search: $.extend({}, settings.oPreviousSearch),\n    columns: settings.aoColumns.map(function (col, i) {\n      return {\n        name: col.sName,\n        visible: col.bVisible,\n        search: $.extend({}, settings.aoPreSearchCols[i])\n      };\n    })\n  };\n  settings.oSavedState = state;\n  _fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n  if (settings.oFeatures.bStateSave && !settings.bDestroying) {\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n  }\n}\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState(settings, init, callback) {\n  if (!settings.oFeatures.bStateSave) {\n    callback();\n    return;\n  }\n  var loaded = function (state) {\n    _fnImplementState(settings, state, callback);\n  };\n  var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n  if (state !== undefined) {\n    _fnImplementState(settings, state, callback);\n  }\n  // otherwise, wait for the loaded callback to be executed\n\n  return true;\n}\nfunction _fnImplementState(settings, s, callback) {\n  var i, ien;\n  var columns = settings.aoColumns;\n  var currentNames = _pluck(settings.aoColumns, 'sName');\n  settings._bLoadingState = true;\n\n  // When StateRestore was introduced the state could now be implemented at any time\n  // Not just initialisation. To do this an api instance is required in some places\n  var api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n  if (!s || !s.time) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Reject old data\n  var duration = settings.iStateDuration;\n  if (duration > 0 && s.time < +new Date() - duration * 1000) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Allow custom and plug-in manipulation functions to alter the saved data set and\n  // cancelling of loading by returning false\n  var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);\n  if (abStateLoad.indexOf(false) !== -1) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Store the saved state so it might be accessed at any time\n  settings.oLoadedState = $.extend(true, {}, s);\n\n  // This is needed for ColReorder, which has to happen first to allow all\n  // the stored indexes to be usable. It is not publicly documented.\n  _fnCallbackFire(settings, null, 'stateLoadInit', [settings, s], true);\n\n  // Page Length\n  if (s.length !== undefined) {\n    // If already initialised just set the value directly so that the select element is also updated\n    if (api) {\n      api.page.len(s.length);\n    } else {\n      settings._iDisplayLength = s.length;\n    }\n  }\n\n  // Restore key features\n  if (s.start !== undefined) {\n    if (api === null) {\n      settings._iDisplayStart = s.start;\n      settings.iInitDisplayStart = s.start;\n    } else {\n      _fnPageChange(settings, s.start / settings._iDisplayLength);\n    }\n  }\n\n  // Order\n  if (s.order !== undefined) {\n    settings.aaSorting = [];\n    $.each(s.order, function (i, col) {\n      var set = [col[0], col[1]];\n\n      // A column name was stored and should be used for restore\n      if (typeof col[0] === 'string') {\n        var idx = currentNames.indexOf(col[0]);\n\n        // Find the name from the current list of column names, or fallback to index 0\n        set[0] = idx >= 0 ? idx : 0;\n      } else if (set[0] >= columns.length) {\n        // If a column name, but it is out of bounds, set to 0\n        set[0] = 0;\n      }\n      settings.aaSorting.push(set);\n    });\n  }\n\n  // Search\n  if (s.search !== undefined) {\n    $.extend(settings.oPreviousSearch, s.search);\n  }\n\n  // Columns\n  if (s.columns) {\n    var set = s.columns;\n    var incoming = _pluck(s.columns, 'name');\n\n    // Check if it is a 2.2 style state object with a `name` property for the columns, and if\n    // the name was defined. If so, then create a new array that will map the state object\n    // given, to the current columns (don't bother if they are already matching tho).\n    if (incoming.join('').length && incoming.join('') !== currentNames.join('')) {\n      set = [];\n\n      // For each column, try to find the name in the incoming array\n      for (i = 0; i < currentNames.length; i++) {\n        if (currentNames[i] != '') {\n          var idx = incoming.indexOf(currentNames[i]);\n          if (idx >= 0) {\n            set.push(s.columns[idx]);\n          } else {\n            // No matching column name in the state's columns, so this might be a new\n            // column and thus can't have a state already.\n            set.push({});\n          }\n        } else {\n          // If no name, but other columns did have a name, then there is no knowing\n          // where this one came from originally so it can't be restored.\n          set.push({});\n        }\n      }\n    }\n\n    // If the number of columns to restore is different from current, then all bets are off.\n    if (set.length === columns.length) {\n      for (i = 0, ien = set.length; i < ien; i++) {\n        var col = set[i];\n\n        // Visibility\n        if (col.visible !== undefined) {\n          // If the api is defined, the table has been initialised so we need to use it rather than internal settings\n          if (api) {\n            // Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n            api.column(i).visible(col.visible, false);\n          } else {\n            columns[i].bVisible = col.visible;\n          }\n        }\n\n        // Search\n        if (col.search !== undefined) {\n          $.extend(settings.aoPreSearchCols[i], col.search);\n        }\n      }\n\n      // If the api is defined then we need to adjust the columns once the visibility has been changed\n      if (api) {\n        api.columns.adjust();\n      }\n    }\n  }\n  settings._bLoadingState = false;\n  _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);\n  callback();\n}\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog(settings, level, msg, tn) {\n  msg = 'DataTables warning: ' + (settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n  if (tn) {\n    msg += '. For more information about this error, please see ' + 'https://datatables.net/tn/' + tn;\n  }\n  if (!level) {\n    // Backwards compatibility pre 1.10\n    var ext = DataTable.ext;\n    var type = ext.sErrMode || ext.errMode;\n    if (settings) {\n      _fnCallbackFire(settings, null, 'dt-error', [settings, tn, msg], true);\n    }\n    if (type == 'alert') {\n      alert(msg);\n    } else if (type == 'throw') {\n      throw new Error(msg);\n    } else if (typeof type == 'function') {\n      type(settings, tn, msg);\n    }\n  } else if (window.console && console.log) {\n    console.log(msg);\n  }\n}\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap(ret, src, name, mappedName) {\n  if (Array.isArray(name)) {\n    $.each(name, function (i, val) {\n      if (Array.isArray(val)) {\n        _fnMap(ret, src, val[0], val[1]);\n      } else {\n        _fnMap(ret, src, val);\n      }\n    });\n    return;\n  }\n  if (mappedName === undefined) {\n    mappedName = name;\n  }\n  if (src[name] !== undefined) {\n    ret[mappedName] = src[name];\n  }\n}\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend(out, extender, breakRefs) {\n  var val;\n  for (var prop in extender) {\n    if (Object.prototype.hasOwnProperty.call(extender, prop)) {\n      val = extender[prop];\n      if ($.isPlainObject(val)) {\n        if (!$.isPlainObject(out[prop])) {\n          out[prop] = {};\n        }\n        $.extend(true, out[prop], val);\n      } else if (breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val)) {\n        out[prop] = val.slice();\n      } else {\n        out[prop] = val;\n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object|string} selector Selector (for delegated events) or data object\n *   to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction(n, selector, fn) {\n  $(n).on('click.DT', selector, function (e) {\n    fn(e);\n  }).on('keypress.DT', selector, function (e) {\n    if (e.which === 13) {\n      e.preventDefault();\n      fn(e);\n    }\n  }).on('selectstart.DT', selector, function () {\n    // Don't want a double click resulting in text selection\n    return false;\n  });\n}\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} settings dataTables settings object\n *  @param {string} store Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg(settings, store, fn) {\n  if (fn) {\n    settings[store].push(fn);\n  }\n}\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @param {boolean} [bubbles] True if the event should bubble\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire(settings, callbackArr, eventName, args, bubbles) {\n  var ret = [];\n  if (callbackArr) {\n    ret = settings[callbackArr].slice().reverse().map(function (val) {\n      return val.apply(settings.oInstance, args);\n    });\n  }\n  if (eventName !== null) {\n    var e = $.Event(eventName + '.dt');\n    var table = $(settings.nTable);\n\n    // Expose the DataTables API on the event object for easy access\n    e.dt = settings.api;\n    table[bubbles ? 'trigger' : 'triggerHandler'](e, args);\n\n    // If not yet attached to the document, trigger the event\n    // on the body directly to sort of simulate the bubble\n    if (bubbles && table.parents('body').length === 0) {\n      $('body').trigger(e, args);\n    }\n    ret.push(e.result);\n  }\n  return ret;\n}\nfunction _fnLengthOverflow(settings) {\n  var start = settings._iDisplayStart,\n    end = settings.fnDisplayEnd(),\n    len = settings._iDisplayLength;\n\n  /* If we have space to show extra rows (backing up from the end point - then do so */\n  if (start >= end) {\n    start = end - len;\n  }\n\n  // Keep the start record on the current page\n  start -= start % len;\n  if (len === -1 || start < 0) {\n    start = 0;\n  }\n  settings._iDisplayStart = start;\n}\nfunction _fnRenderer(settings, type) {\n  var renderer = settings.renderer;\n  var host = DataTable.ext.renderer[type];\n  if ($.isPlainObject(renderer) && renderer[type]) {\n    // Specific renderer for this type. If available use it, otherwise use\n    // the default.\n    return host[renderer[type]] || host._;\n  } else if (typeof renderer === 'string') {\n    // Common renderer - if there is one available for this type use it,\n    // otherwise use the default\n    return host[renderer] || host._;\n  }\n\n  // Use the default\n  return host._;\n}\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource(settings) {\n  if (settings.oFeatures.bServerSide) {\n    return 'ssp';\n  } else if (settings.ajax) {\n    return 'ajax';\n  }\n  return 'dom';\n}\n\n/**\n * Common replacement for language strings\n *\n * @param {*} settings DT settings object\n * @param {*} str String with values to replace\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n * @returns String\n */\nfunction _fnMacros(settings, str, entries) {\n  // When infinite scrolling, we are always starting at 1. _iDisplayStart is\n  // used only internally\n  var formatter = settings.fnFormatNumber,\n    start = settings._iDisplayStart + 1,\n    len = settings._iDisplayLength,\n    vis = settings.fnRecordsDisplay(),\n    max = settings.fnRecordsTotal(),\n    all = len === -1;\n  return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, max)).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len))).replace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries)).replace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max)).replace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis));\n}\n\n/**\n * Add elements to an array as quickly as possible, but stack stafe.\n *\n * @param {*} arr Array to add the data to\n * @param {*} data Data array that is to be added\n * @returns \n */\nfunction _fnArrayApply(arr, data) {\n  if (!data) {\n    return;\n  }\n\n  // Chrome can throw a max stack error if apply is called with\n  // too large an array, but apply is faster.\n  if (data.length < 10000) {\n    arr.push.apply(arr, data);\n  } else {\n    for (i = 0; i < data.length; i++) {\n      arr.push(data[i]);\n    }\n  }\n}\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function (mixed) {\n  var idx, jq;\n  var settings = DataTable.settings;\n  var tables = _pluck(settings, 'nTable');\n  if (!mixed) {\n    return [];\n  } else if (mixed.nTable && mixed.oFeatures) {\n    // DataTables settings object\n    return [mixed];\n  } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n    // Table node\n    idx = tables.indexOf(mixed);\n    return idx !== -1 ? [settings[idx]] : null;\n  } else if (mixed && typeof mixed.settings === 'function') {\n    return mixed.settings().toArray();\n  } else if (typeof mixed === 'string') {\n    // jQuery selector\n    jq = $(mixed).get();\n  } else if (mixed instanceof $) {\n    // jQuery object (also DataTables instance)\n    jq = mixed.get();\n  }\n  if (jq) {\n    return settings.filter(function (v, idx) {\n      return jq.includes(tables[idx]);\n    });\n  }\n};\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new DataTable.Api( 'table.dataTable' );\n */\n_Api = function (context, data) {\n  if (!(this instanceof _Api)) {\n    return new _Api(context, data);\n  }\n  var i;\n  var settings = [];\n  var ctxSettings = function (o) {\n    var a = _toSettings(o);\n    if (a) {\n      settings.push.apply(settings, a);\n    }\n  };\n  if (Array.isArray(context)) {\n    for (i = 0; i < context.length; i++) {\n      ctxSettings(context[i]);\n    }\n  } else {\n    ctxSettings(context);\n  }\n\n  // Remove duplicates\n  this.context = settings.length > 1 ? _unique(settings) : settings;\n\n  // Initial data\n  _fnArrayApply(this, data);\n\n  // selector\n  this.selector = {\n    rows: null,\n    cols: null,\n    opts: null\n  };\n  _Api.extend(this, this, __apiStruct);\n};\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend(_Api.prototype, {\n  any: function () {\n    return this.count() !== 0;\n  },\n  context: [],\n  // array of table settings objects\n\n  count: function () {\n    return this.flatten().length;\n  },\n  each: function (fn) {\n    for (var i = 0, ien = this.length; i < ien; i++) {\n      fn.call(this, this[i], i, this);\n    }\n    return this;\n  },\n  eq: function (idx) {\n    var ctx = this.context;\n    return ctx.length > idx ? new _Api(ctx[idx], this[idx]) : null;\n  },\n  filter: function (fn) {\n    var a = __arrayProto.filter.call(this, fn, this);\n    return new _Api(this.context, a);\n  },\n  flatten: function () {\n    var a = [];\n    return new _Api(this.context, a.concat.apply(a, this.toArray()));\n  },\n  get: function (idx) {\n    return this[idx];\n  },\n  join: __arrayProto.join,\n  includes: function (find) {\n    return this.indexOf(find) === -1 ? false : true;\n  },\n  indexOf: __arrayProto.indexOf,\n  iterator: function (flatten, type, fn, alwaysNew) {\n    var a = [],\n      ret,\n      i,\n      ien,\n      j,\n      jen,\n      context = this.context,\n      rows,\n      items,\n      item,\n      selector = this.selector;\n\n    // Argument shifting\n    if (typeof flatten === 'string') {\n      alwaysNew = fn;\n      fn = type;\n      type = flatten;\n      flatten = false;\n    }\n    for (i = 0, ien = context.length; i < ien; i++) {\n      var apiInst = new _Api(context[i]);\n      if (type === 'table') {\n        ret = fn.call(apiInst, context[i], i);\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'columns' || type === 'rows') {\n        // this has same length as context - one entry for each table\n        ret = fn.call(apiInst, context[i], this[i], i);\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n        // columns and rows share the same structure.\n        // 'this' is an array of column indexes for each context\n        items = this[i];\n        if (type === 'column-rows') {\n          rows = _selector_row_indexes(context[i], selector.opts);\n        }\n        for (j = 0, jen = items.length; j < jen; j++) {\n          item = items[j];\n          if (type === 'cell') {\n            ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n          } else {\n            ret = fn.call(apiInst, context[i], item, i, j, rows);\n          }\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        }\n      }\n    }\n    if (a.length || alwaysNew) {\n      var api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n      var apiSelector = api.selector;\n      apiSelector.rows = selector.rows;\n      apiSelector.cols = selector.cols;\n      apiSelector.opts = selector.opts;\n      return api;\n    }\n    return this;\n  },\n  lastIndexOf: __arrayProto.lastIndexOf,\n  length: 0,\n  map: function (fn) {\n    var a = __arrayProto.map.call(this, fn, this);\n    return new _Api(this.context, a);\n  },\n  pluck: function (prop) {\n    var fn = DataTable.util.get(prop);\n    return this.map(function (el) {\n      return fn(el);\n    });\n  },\n  pop: __arrayProto.pop,\n  push: __arrayProto.push,\n  reduce: __arrayProto.reduce,\n  reduceRight: __arrayProto.reduceRight,\n  reverse: __arrayProto.reverse,\n  // Object with rows, columns and opts\n  selector: null,\n  shift: __arrayProto.shift,\n  slice: function () {\n    return new _Api(this.context, this);\n  },\n  sort: __arrayProto.sort,\n  splice: __arrayProto.splice,\n  toArray: function () {\n    return __arrayProto.slice.call(this);\n  },\n  to$: function () {\n    return $(this);\n  },\n  toJQuery: function () {\n    return $(this);\n  },\n  unique: function () {\n    return new _Api(this.context, _unique(this.toArray()));\n  },\n  unshift: __arrayProto.unshift\n});\nfunction _api_scope(scope, fn, struc) {\n  return function () {\n    var ret = fn.apply(scope || this, arguments);\n\n    // Method extension\n    _Api.extend(ret, ret, struc.methodExt);\n    return ret;\n  };\n}\nfunction _api_find(src, name) {\n  for (var i = 0, ien = src.length; i < ien; i++) {\n    if (src[i].name === name) {\n      return src[i];\n    }\n  }\n  return null;\n}\nwindow.__apiStruct = __apiStruct;\n_Api.extend = function (scope, obj, ext) {\n  // Only extend API instances and static properties of the API\n  if (!ext.length || !obj || !(obj instanceof _Api) && !obj.__dt_wrapper) {\n    return;\n  }\n  var i, ien, struct;\n  for (i = 0, ien = ext.length; i < ien; i++) {\n    struct = ext[i];\n    if (struct.name === '__proto__') {\n      continue;\n    }\n\n    // Value\n    obj[struct.name] = struct.type === 'function' ? _api_scope(scope, struct.val, struct) : struct.type === 'object' ? {} : struct.val;\n    obj[struct.name].__dt_wrapper = true;\n\n    // Property extension\n    _Api.extend(scope, obj[struct.name], struct.propExt);\n  }\n};\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n_Api.register = _api_register = function (name, val) {\n  if (Array.isArray(name)) {\n    for (var j = 0, jen = name.length; j < jen; j++) {\n      _Api.register(name[j], val);\n    }\n    return;\n  }\n  var i,\n    ien,\n    heir = name.split('.'),\n    struct = __apiStruct,\n    key,\n    method;\n  for (i = 0, ien = heir.length; i < ien; i++) {\n    method = heir[i].indexOf('()') !== -1;\n    key = method ? heir[i].replace('()', '') : heir[i];\n    var src = _api_find(struct, key);\n    if (!src) {\n      src = {\n        name: key,\n        val: {},\n        methodExt: [],\n        propExt: [],\n        type: 'object'\n      };\n      struct.push(src);\n    }\n    if (i === ien - 1) {\n      src.val = val;\n      src.type = typeof val === 'function' ? 'function' : $.isPlainObject(val) ? 'object' : 'other';\n    } else {\n      struct = method ? src.methodExt : src.propExt;\n    }\n  }\n};\n_Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n  _Api.register(pluralName, val);\n  _Api.register(singularName, function () {\n    var ret = val.apply(this, arguments);\n    if (ret === this) {\n      // Returned item is the API instance that was passed in, return it\n      return this;\n    } else if (ret instanceof _Api) {\n      // New API instance returned, want the value from the first item\n      // in the returned array for the singular result.\n      return ret.length ? Array.isArray(ret[0]) ? new _Api(ret.context, ret[0]) :\n      // Array results are 'enhanced'\n      ret[0] : undefined;\n    }\n\n    // Non-API return - just fire it back\n    return ret;\n  });\n};\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function (selector, a) {\n  if (Array.isArray(selector)) {\n    var result = [];\n    selector.forEach(function (sel) {\n      var inner = __table_selector(sel, a);\n      _fnArrayApply(result, inner);\n    });\n    return result.filter(function (item) {\n      return item;\n    });\n  }\n\n  // Integer is used to pick out a table by index\n  if (typeof selector === 'number') {\n    return [a[selector]];\n  }\n\n  // Perform a jQuery selector on the table nodes\n  var nodes = a.map(function (el) {\n    return el.nTable;\n  });\n  return $(nodes).filter(selector).map(function () {\n    // Need to translate back from the table node to the settings\n    var idx = nodes.indexOf(this);\n    return a[idx];\n  }).toArray();\n};\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register('tables()', function (selector) {\n  // A new instance is created if there was a selector specified\n  return selector !== undefined && selector !== null ? new _Api(__table_selector(selector, this.context)) : this;\n});\n_api_register('table()', function (selector) {\n  var tables = this.tables(selector);\n  var ctx = tables.context;\n\n  // Truncate to the first matched table\n  return ctx.length ? new _Api(ctx[0]) : tables;\n});\n\n// Common methods, combined to reduce size\n[['nodes', 'node', 'nTable'], ['body', 'body', 'nTBody'], ['header', 'header', 'nTHead'], ['footer', 'footer', 'nTFoot']].forEach(function (item) {\n  _api_registerPlural('tables().' + item[0] + '()', 'table().' + item[1] + '()', function () {\n    return this.iterator('table', function (ctx) {\n      return ctx[item[2]];\n    }, 1);\n  });\n});\n\n// Structure methods\n[['header', 'aoHeader'], ['footer', 'aoFooter']].forEach(function (item) {\n  _api_register('table().' + item[0] + '.structure()', function (selector) {\n    var indexes = this.columns(selector).indexes().flatten();\n    var ctx = this.context[0];\n    return _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n  });\n});\n_api_registerPlural('tables().containers()', 'table().container()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTableWrapper;\n  }, 1);\n});\n_api_register('tables().every()', function (fn) {\n  var that = this;\n  return this.iterator('table', function (s, i) {\n    fn.call(that.table(i), i);\n  });\n});\n_api_register('caption()', function (value, side) {\n  var context = this.context;\n\n  // Getter - return existing node's content\n  if (value === undefined) {\n    var caption = context[0].captionNode;\n    return caption && context.length ? caption.innerHTML : null;\n  }\n  return this.iterator('table', function (ctx) {\n    var table = $(ctx.nTable);\n    var caption = $(ctx.captionNode);\n    var container = $(ctx.nTableWrapper);\n\n    // Create the node if it doesn't exist yet\n    if (!caption.length) {\n      caption = $('<caption/>').html(value);\n      ctx.captionNode = caption[0];\n\n      // If side isn't set, we need to insert into the document to let the\n      // CSS decide so we can read it back, otherwise there is no way to\n      // know if the CSS would put it top or bottom for scrolling\n      if (!side) {\n        table.prepend(caption);\n        side = caption.css('caption-side');\n      }\n    }\n    caption.html(value);\n    if (side) {\n      caption.css('caption-side', side);\n      caption[0]._captionSide = side;\n    }\n    if (container.find('div.dataTables_scroll').length) {\n      var selector = side === 'top' ? 'Head' : 'Foot';\n      container.find('div.dataTables_scroll' + selector + ' table').prepend(caption);\n    } else {\n      table.prepend(caption);\n    }\n  }, 1);\n});\n_api_register('caption.node()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].captionNode : null;\n});\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register('draw()', function (paging) {\n  return this.iterator('table', function (settings) {\n    if (paging === 'page') {\n      _fnDraw(settings);\n    } else {\n      if (typeof paging === 'string') {\n        paging = paging === 'full-hold' ? false : true;\n      }\n      _fnReDraw(settings, paging === false);\n    }\n  });\n});\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n */ /**\n    * Set the current page.\n    *\n    * Note that if you attempt to show a page which does not exist, DataTables will\n    * not throw an error, but rather reset the paging.\n    *\n    * @param {integer|string} action The paging action to take. This can be one of:\n    *  * `integer` - The page index to jump to\n    *  * `string` - An action to take:\n    *    * `first` - Jump to first page.\n    *    * `next` - Jump to the next page\n    *    * `previous` - Jump to previous page\n    *    * `last` - Jump to the last page.\n    * @returns {DataTables.Api} this\n    */\n_api_register('page()', function (action) {\n  if (action === undefined) {\n    return this.page.info().page; // not an expensive call\n  }\n\n  // else, have an action to take on all tables\n  return this.iterator('table', function (settings) {\n    _fnPageChange(settings, action);\n  });\n});\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register('page.info()', function () {\n  if (this.context.length === 0) {\n    return undefined;\n  }\n  var settings = this.context[0],\n    start = settings._iDisplayStart,\n    len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n    visRecords = settings.fnRecordsDisplay(),\n    all = len === -1;\n  return {\n    \"page\": all ? 0 : Math.floor(start / len),\n    \"pages\": all ? 1 : Math.ceil(visRecords / len),\n    \"start\": start,\n    \"end\": settings.fnDisplayEnd(),\n    \"length\": len,\n    \"recordsTotal\": settings.fnRecordsTotal(),\n    \"recordsDisplay\": visRecords,\n    \"serverSide\": _fnDataSource(settings) === 'ssp'\n  };\n});\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n */ /**\n    * Set the current page length.\n    *\n    * @param {integer} Page length to set. Use `-1` to show all records.\n    * @returns {DataTables.Api} this\n    */\n_api_register('page.len()', function (len) {\n  // Note that we can't call this function 'length()' because `length`\n  // is a Javascript property of functions which defines how many arguments\n  // the function expects.\n  if (len === undefined) {\n    return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined;\n  }\n\n  // else, set the page length\n  return this.iterator('table', function (settings) {\n    _fnLengthChange(settings, len);\n  });\n});\nvar __reload = function (settings, holdPosition, callback) {\n  // Use the draw event to trigger a callback\n  if (callback) {\n    var api = new _Api(settings);\n    api.one('draw', function () {\n      callback(api.ajax.json());\n    });\n  }\n  if (_fnDataSource(settings) == 'ssp') {\n    _fnReDraw(settings, holdPosition);\n  } else {\n    _fnProcessingDisplay(settings, true);\n\n    // Cancel an existing request\n    var xhr = settings.jqXHR;\n    if (xhr && xhr.readyState !== 4) {\n      xhr.abort();\n    }\n\n    // Trigger xhr\n    _fnBuildAjax(settings, {}, function (json) {\n      _fnClearTable(settings);\n      var data = _fnAjaxDataSrc(settings, json);\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        _fnAddData(settings, data[i]);\n      }\n      _fnReDraw(settings, holdPosition);\n      _fnInitComplete(settings);\n      _fnProcessingDisplay(settings, false);\n    });\n  }\n};\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register('ajax.json()', function () {\n  var ctx = this.context;\n  if (ctx.length > 0) {\n    return ctx[0].json;\n  }\n\n  // else return undefined;\n});\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register('ajax.params()', function () {\n  var ctx = this.context;\n  if (ctx.length > 0) {\n    return ctx[0].oAjaxData;\n  }\n\n  // else return undefined;\n});\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register('ajax.reload()', function (callback, resetPaging) {\n  return this.iterator('table', function (settings) {\n    __reload(settings, resetPaging === false, callback);\n  });\n});\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n */ /**\n    * Set the Ajax URL. Note that this will set the URL for all tables in the\n    * current context.\n    *\n    * @param {string} url URL to set.\n    * @returns {DataTables.Api} this\n    */\n_api_register('ajax.url()', function (url) {\n  var ctx = this.context;\n  if (url === undefined) {\n    // get\n    if (ctx.length === 0) {\n      return undefined;\n    }\n    ctx = ctx[0];\n    return $.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax;\n  }\n\n  // set\n  return this.iterator('table', function (settings) {\n    if ($.isPlainObject(settings.ajax)) {\n      settings.ajax.url = url;\n    } else {\n      settings.ajax = url;\n    }\n  });\n});\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register('ajax.url().load()', function (callback, resetPaging) {\n  // Same as a reload, but makes sense to present it for easy access after a\n  // url change\n  return this.iterator('table', function (ctx) {\n    __reload(ctx, resetPaging === false, callback);\n  });\n});\nvar _selector_run = function (type, selector, selectFn, settings, opts) {\n  var out = [],\n    res,\n    a,\n    i,\n    ien,\n    j,\n    jen,\n    selectorType = typeof selector;\n\n  // Can't just check for isArray here, as an API or jQuery instance might be\n  // given with their array like look\n  if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n    selector = [selector];\n  }\n  for (i = 0, ien = selector.length; i < ien; i++) {\n    // Only split on simple strings - complex expressions will be jQuery selectors\n    a = selector[i] && selector[i].split && !selector[i].match(/[[(:]/) ? selector[i].split(',') : [selector[i]];\n    for (j = 0, jen = a.length; j < jen; j++) {\n      res = selectFn(typeof a[j] === 'string' ? a[j].trim() : a[j]);\n\n      // Remove empty items\n      res = res.filter(function (item) {\n        return item !== null && item !== undefined;\n      });\n      if (res && res.length) {\n        out = out.concat(res);\n      }\n    }\n  }\n\n  // selector extensions\n  var ext = _ext.selector[type];\n  if (ext.length) {\n    for (i = 0, ien = ext.length; i < ien; i++) {\n      out = ext[i](settings, opts, out);\n    }\n  }\n  return _unique(out);\n};\nvar _selector_opts = function (opts) {\n  if (!opts) {\n    opts = {};\n  }\n\n  // Backwards compatibility for 1.9- which used the terminology filter rather\n  // than search\n  if (opts.filter && opts.search === undefined) {\n    opts.search = opts.filter;\n  }\n  return $.extend({\n    search: 'none',\n    order: 'current',\n    page: 'all'\n  }, opts);\n};\n\n// Reduce the API instance to the first item found\nvar _selector_first = function (old) {\n  var inst = new _Api(old.context[0]);\n\n  // Use a push rather than passing to the constructor, since it will\n  // merge arrays down automatically, which isn't what is wanted here\n  if (old.length) {\n    inst.push(old[0]);\n  }\n  inst.selector = old.selector;\n\n  // Limit to a single row / column / cell\n  if (inst.length && inst[0].length > 1) {\n    inst[0].splice(1);\n  }\n  return inst;\n};\nvar _selector_row_indexes = function (settings, opts) {\n  var i,\n    ien,\n    tmp,\n    a = [],\n    displayFiltered = settings.aiDisplay,\n    displayMaster = settings.aiDisplayMaster;\n  var search = opts.search,\n    // none, applied, removed\n    order = opts.order,\n    // applied, current, index (original - compatibility with 1.9)\n    page = opts.page; // all, current\n\n  if (_fnDataSource(settings) == 'ssp') {\n    // In server-side processing mode, most options are irrelevant since\n    // rows not shown don't exist and the index order is the applied order\n    // Removed is a special case - for consistency just return an empty\n    // array\n    return search === 'removed' ? [] : _range(0, displayMaster.length);\n  }\n  if (page == 'current') {\n    // Current page implies that order=current and filter=applied, since it is\n    // fairly senseless otherwise, regardless of what order and search actually\n    // are\n    for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n      a.push(displayFiltered[i]);\n    }\n  } else if (order == 'current' || order == 'applied') {\n    if (search == 'none') {\n      a = displayMaster.slice();\n    } else if (search == 'applied') {\n      a = displayFiltered.slice();\n    } else if (search == 'removed') {\n      // O(n+m) solution by creating a hash map\n      var displayFilteredMap = {};\n      for (i = 0, ien = displayFiltered.length; i < ien; i++) {\n        displayFilteredMap[displayFiltered[i]] = null;\n      }\n      displayMaster.forEach(function (item) {\n        if (!Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n          a.push(item);\n        }\n      });\n    }\n  } else if (order == 'index' || order == 'original') {\n    for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n      if (!settings.aoData[i]) {\n        continue;\n      }\n      if (search == 'none') {\n        a.push(i);\n      } else {\n        // applied | removed\n        tmp = displayFiltered.indexOf(i);\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(i);\n        }\n      }\n    }\n  } else if (typeof order === 'number') {\n    // Order the rows by the given column\n    var ordered = _fnSort(settings, order, 'asc');\n    if (search === 'none') {\n      a = ordered;\n    } else {\n      // applied | removed\n      for (i = 0; i < ordered.length; i++) {\n        tmp = displayFiltered.indexOf(ordered[i]);\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(ordered[i]);\n        }\n      }\n    }\n  }\n  return a;\n};\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function (settings, selector, opts) {\n  var rows;\n  var run = function (sel) {\n    var selInt = _intVal(sel);\n    var aoData = settings.aoData;\n\n    // Short cut - selector is a number and no options provided (default is\n    // all records, so no need to check if the index is in there, since it\n    // must be - dev error if the index doesn't exist).\n    if (selInt !== null && !opts) {\n      return [selInt];\n    }\n    if (!rows) {\n      rows = _selector_row_indexes(settings, opts);\n    }\n    if (selInt !== null && rows.indexOf(selInt) !== -1) {\n      // Selector - integer\n      return [selInt];\n    } else if (sel === null || sel === undefined || sel === '') {\n      // Selector - none\n      return rows;\n    }\n\n    // Selector - function\n    if (typeof sel === 'function') {\n      return rows.map(function (idx) {\n        var row = aoData[idx];\n        return sel(idx, row._aData, row.nTr) ? idx : null;\n      });\n    }\n\n    // Selector - node\n    if (sel.nodeName) {\n      var rowIdx = sel._DT_RowIndex; // Property added by DT for fast lookup\n      var cellIdx = sel._DT_CellIndex;\n      if (rowIdx !== undefined) {\n        // Make sure that the row is actually still present in the table\n        return aoData[rowIdx] && aoData[rowIdx].nTr === sel ? [rowIdx] : [];\n      } else if (cellIdx) {\n        return aoData[cellIdx.row] && aoData[cellIdx.row].nTr === sel.parentNode ? [cellIdx.row] : [];\n      } else {\n        var host = $(sel).closest('*[data-dt-row]');\n        return host.length ? [host.data('dt-row')] : [];\n      }\n    }\n\n    // ID selector. Want to always be able to select rows by id, regardless\n    // of if the tr element has been created or not, so can't rely upon\n    // jQuery here - hence a custom implementation. This does not match\n    // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n    // but to select it using a CSS selector engine (like Sizzle or\n    // querySelect) it would need to need to be escaped for some characters.\n    // DataTables simplifies this for row selectors since you can select\n    // only a row. A # indicates an id any anything that follows is the id -\n    // unescaped.\n    if (typeof sel === 'string' && sel.charAt(0) === '#') {\n      // get row index from id\n      var rowObj = settings.aIds[sel.replace(/^#/, '')];\n      if (rowObj !== undefined) {\n        return [rowObj.idx];\n      }\n\n      // need to fall through to jQuery in case there is DOM id that\n      // matches\n    }\n\n    // Get nodes in the order from the `rows` array with null values removed\n    var nodes = _removeEmpty(_pluck_order(settings.aoData, rows, 'nTr'));\n\n    // Selector - jQuery selector string, array of nodes or jQuery object/\n    // As jQuery's .filter() allows jQuery objects to be passed in filter,\n    // it also allows arrays, so this will cope with all three options\n    return $(nodes).filter(sel).map(function () {\n      return this._DT_RowIndex;\n    }).toArray();\n  };\n  var matched = _selector_run('row', selector, run, settings, opts);\n  if (opts.order === 'current' || opts.order === 'applied') {\n    _fnSortDisplay(settings, matched);\n  }\n  return matched;\n};\n_api_register('rows()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __row_selector(settings, selector, opts);\n  }, 1);\n\n  // Want argument shifting here and in __row_selector?\n  inst.selector.rows = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n_api_register('rows().nodes()', function () {\n  return this.iterator('row', function (settings, row) {\n    return settings.aoData[row].nTr || undefined;\n  }, 1);\n});\n_api_register('rows().data()', function () {\n  return this.iterator(true, 'rows', function (settings, rows) {\n    return _pluck_order(settings.aoData, rows, '_aData');\n  }, 1);\n});\n_api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n  return this.iterator('row', function (settings, row) {\n    var r = settings.aoData[row];\n    return type === 'search' ? r._aFilterData : r._aSortData;\n  }, 1);\n});\n_api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n  return this.iterator('row', function (settings, row) {\n    _fnInvalidate(settings, row, src);\n  });\n});\n_api_registerPlural('rows().indexes()', 'row().index()', function () {\n  return this.iterator('row', function (settings, row) {\n    return row;\n  }, 1);\n});\n_api_registerPlural('rows().ids()', 'row().id()', function (hash) {\n  var a = [];\n  var context = this.context;\n\n  // `iterator` will drop undefined values, but in this case we want them\n  for (var i = 0, ien = context.length; i < ien; i++) {\n    for (var j = 0, jen = this[i].length; j < jen; j++) {\n      var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);\n      a.push((hash === true ? '#' : '') + id);\n    }\n  }\n  return new _Api(context, a);\n});\n_api_registerPlural('rows().remove()', 'row().remove()', function () {\n  this.iterator('row', function (settings, row) {\n    var data = settings.aoData;\n    var rowData = data[row];\n\n    // Delete from the display arrays\n    var idx = settings.aiDisplayMaster.indexOf(row);\n    if (idx !== -1) {\n      settings.aiDisplayMaster.splice(idx, 1);\n    }\n\n    // For server-side processing tables - subtract the deleted row from the count\n    if (settings._iRecordsDisplay > 0) {\n      settings._iRecordsDisplay--;\n    }\n\n    // Check for an 'overflow' they case for displaying the table\n    _fnLengthOverflow(settings);\n\n    // Remove the row's ID reference if there is one\n    var id = settings.rowIdFn(rowData._aData);\n    if (id !== undefined) {\n      delete settings.aIds[id];\n    }\n    data[row] = null;\n  });\n  return this;\n});\n_api_register('rows.add()', function (rows) {\n  var newRows = this.iterator('table', function (settings) {\n    var row, i, ien;\n    var out = [];\n    for (i = 0, ien = rows.length; i < ien; i++) {\n      row = rows[i];\n      if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n        out.push(_fnAddTr(settings, row)[0]);\n      } else {\n        out.push(_fnAddData(settings, row));\n      }\n    }\n    return out;\n  }, 1);\n\n  // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n  var modRows = this.rows(-1);\n  modRows.pop();\n  _fnArrayApply(modRows, newRows);\n  return modRows;\n});\n\n/**\n *\n */\n_api_register('row()', function (selector, opts) {\n  return _selector_first(this.rows(selector, opts));\n});\n_api_register('row().data()', function (data) {\n  var ctx = this.context;\n  if (data === undefined) {\n    // Get\n    return ctx.length && this.length && this[0].length ? ctx[0].aoData[this[0]]._aData : undefined;\n  }\n\n  // Set\n  var row = ctx[0].aoData[this[0]];\n  row._aData = data;\n\n  // If the DOM has an id, and the data source is an array\n  if (Array.isArray(data) && row.nTr && row.nTr.id) {\n    _fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);\n  }\n\n  // Automatically invalidate\n  _fnInvalidate(ctx[0], this[0], 'data');\n  return this;\n});\n_api_register('row().node()', function () {\n  var ctx = this.context;\n  if (ctx.length && this.length && this[0].length) {\n    var row = ctx[0].aoData[this[0]];\n    if (row && row.nTr) {\n      return row.nTr;\n    }\n  }\n  return null;\n});\n_api_register('row.add()', function (row) {\n  // Allow a jQuery object to be passed in - only a single row is added from\n  // it though - the first element in the set\n  if (row instanceof $ && row.length) {\n    row = row[0];\n  }\n  var rows = this.iterator('table', function (settings) {\n    if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n      return _fnAddTr(settings, row)[0];\n    }\n    return _fnAddData(settings, row);\n  });\n\n  // Return an Api.rows() extended instance, with the newly added row selected\n  return this.row(rows[0]);\n});\n$(document).on('plugin-init.dt', function (e, context) {\n  var api = new _Api(context);\n  api.on('stateSaveParams.DT', function (e, settings, d) {\n    // This could be more compact with the API, but it is a lot faster as a simple\n    // internal loop\n    var idFn = settings.rowIdFn;\n    var rows = settings.aiDisplayMaster;\n    var ids = [];\n    for (var i = 0; i < rows.length; i++) {\n      var rowIdx = rows[i];\n      var data = settings.aoData[rowIdx];\n      if (data._detailsShow) {\n        ids.push('#' + idFn(data._aData));\n      }\n    }\n    d.childRows = ids;\n  });\n\n  // For future state loads (e.g. with StateRestore)\n  api.on('stateLoaded.DT', function (e, settings, state) {\n    __details_state_load(api, state);\n  });\n\n  // And the initial load state\n  __details_state_load(api, api.state.loaded());\n});\nvar __details_state_load = function (api, state) {\n  if (state && state.childRows) {\n    api.rows(state.childRows.map(function (id) {\n      // Escape any `:` characters from the row id. Accounts for\n      // already escaped characters.\n      return id.replace(/([^:\\\\]*(?:\\\\.[^:\\\\]*)*):/g, \"$1\\\\:\");\n    })).every(function () {\n      _fnCallbackFire(api.settings()[0], null, 'requestChild', [this]);\n    });\n  }\n};\nvar __details_add = function (ctx, row, data, klass) {\n  // Convert to array of TR elements\n  var rows = [];\n  var addRow = function (r, k) {\n    // Recursion to allow for arrays of jQuery objects\n    if (Array.isArray(r) || r instanceof $) {\n      for (var i = 0, ien = r.length; i < ien; i++) {\n        addRow(r[i], k);\n      }\n      return;\n    }\n\n    // If we get a TR element, then just add it directly - up to the dev\n    // to add the correct number of columns etc\n    if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n      r.setAttribute('data-dt-row', row.idx);\n      rows.push(r);\n    } else {\n      // Otherwise create a row with a wrapper\n      var created = $('<tr><td></td></tr>').attr('data-dt-row', row.idx).addClass(k);\n      $('td', created).addClass(k).html(r)[0].colSpan = _fnVisbleColumns(ctx);\n      rows.push(created[0]);\n    }\n  };\n  addRow(data, klass);\n  if (row._details) {\n    row._details.detach();\n  }\n  row._details = $(rows);\n\n  // If the children were already shown, that state should be retained\n  if (row._detailsShow) {\n    row._details.insertAfter(row.nTr);\n  }\n};\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(function (ctx) {\n  _fnSaveState(ctx[0]);\n}, 500);\nvar __details_remove = function (api, idx) {\n  var ctx = api.context;\n  if (ctx.length) {\n    var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n    if (row && row._details) {\n      row._details.remove();\n      row._detailsShow = undefined;\n      row._details = undefined;\n      $(row.nTr).removeClass('dt-hasChild');\n      __details_state(ctx);\n    }\n  }\n};\nvar __details_display = function (api, show) {\n  var ctx = api.context;\n  if (ctx.length && api.length) {\n    var row = ctx[0].aoData[api[0]];\n    if (row._details) {\n      row._detailsShow = show;\n      if (show) {\n        row._details.insertAfter(row.nTr);\n        $(row.nTr).addClass('dt-hasChild');\n      } else {\n        row._details.detach();\n        $(row.nTr).removeClass('dt-hasChild');\n      }\n      _fnCallbackFire(ctx[0], null, 'childRow', [show, api.row(api[0])]);\n      __details_events(ctx[0]);\n      __details_state(ctx);\n    }\n  }\n};\nvar __details_events = function (settings) {\n  var api = new _Api(settings);\n  var namespace = '.dt.DT_details';\n  var drawEvent = 'draw' + namespace;\n  var colvisEvent = 'column-sizing' + namespace;\n  var destroyEvent = 'destroy' + namespace;\n  var data = settings.aoData;\n  api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n  if (_pluck(data, '_details').length > 0) {\n    // On each draw, insert the required elements into the document\n    api.on(drawEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n      api.rows({\n        page: 'current'\n      }).eq(0).each(function (idx) {\n        // Internal data grab\n        var row = data[idx];\n        if (row._detailsShow) {\n          row._details.insertAfter(row.nTr);\n        }\n      });\n    });\n\n    // Column visibility change - update the colspan\n    api.on(colvisEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n\n      // Update the colspan for the details rows (note, only if it already has\n      // a colspan)\n      var row,\n        visible = _fnVisbleColumns(ctx);\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        row = data[i];\n        if (row && row._details) {\n          row._details.each(function () {\n            var el = $(this).children('td');\n            if (el.length == 1) {\n              el.attr('colspan', visible);\n            }\n          });\n        }\n      }\n    });\n\n    // Table destroyed - nuke any child rows\n    api.on(destroyEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        if (data[i] && data[i]._details) {\n          __details_remove(api, i);\n        }\n      }\n    });\n  }\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp + 'row().child';\nvar _child_mth = _child_obj + '()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register(_child_mth, function (data, klass) {\n  var ctx = this.context;\n  if (data === undefined) {\n    // get\n    return ctx.length && this.length && ctx[0].aoData[this[0]] ? ctx[0].aoData[this[0]]._details : undefined;\n  } else if (data === true) {\n    // show\n    this.child.show();\n  } else if (data === false) {\n    // remove\n    __details_remove(this);\n  } else if (ctx.length && this.length) {\n    // set\n    __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n  }\n  return this;\n});\n_api_register([_child_obj + '.show()', _child_mth + '.show()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, true);\n  return this;\n});\n_api_register([_child_obj + '.hide()', _child_mth + '.hide()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, false);\n  return this;\n});\n_api_register([_child_obj + '.remove()', _child_mth + '.remove()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_remove(this);\n  return this;\n});\n_api_register(_child_obj + '.isShown()', function () {\n  var ctx = this.context;\n  if (ctx.length && this.length && ctx[0].aoData[this[0]]) {\n    // _detailsShown as false or undefined will fall through to return false\n    return ctx[0].aoData[this[0]]._detailsShow || false;\n  }\n  return false;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+)?:(name|title|visIdx|visible)$/;\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function (settings, column, r1, r2, rows, type) {\n  var a = [];\n  for (var row = 0, ien = rows.length; row < ien; row++) {\n    a.push(_fnGetCellData(settings, rows[row], column, type));\n  }\n  return a;\n};\nvar __column_header = function (settings, column, row) {\n  var header = settings.aoHeader;\n  var target = row !== undefined ? row : settings.bSortCellsTop // legacy support\n  ? 0 : header.length - 1;\n  return header[target][column].cell;\n};\nvar __column_selector = function (settings, selector, opts) {\n  var columns = settings.aoColumns,\n    names = _pluck(columns, 'sName'),\n    titles = _pluck(columns, 'sTitle'),\n    cells = DataTable.util.get('[].[].cell')(settings.aoHeader),\n    nodes = _unique(_flatten([], cells));\n  var run = function (s) {\n    var selInt = _intVal(s);\n\n    // Selector - all\n    if (s === '') {\n      return _range(columns.length);\n    }\n\n    // Selector - index\n    if (selInt !== null) {\n      return [selInt >= 0 ? selInt :\n      // Count from left\n      columns.length + selInt // Count from right (+ because its a negative value)\n      ];\n    }\n\n    // Selector = function\n    if (typeof s === 'function') {\n      var rows = _selector_row_indexes(settings, opts);\n      return columns.map(function (col, idx) {\n        return s(idx, __columnData(settings, idx, 0, 0, rows), __column_header(settings, idx)) ? idx : null;\n      });\n    }\n\n    // jQuery or string selector\n    var match = typeof s === 'string' ? s.match(__re_column_selector) : '';\n    if (match) {\n      switch (match[2]) {\n        case 'visIdx':\n        case 'visible':\n          // Selector is a column index\n          if (match[1] && match[1].match(/^\\d+$/)) {\n            var idx = parseInt(match[1], 10);\n\n            // Visible index given, convert to column index\n            if (idx < 0) {\n              // Counting from the right\n              var visColumns = columns.map(function (col, i) {\n                return col.bVisible ? i : null;\n              });\n              return [visColumns[visColumns.length + idx]];\n            }\n            // Counting from the left\n            return [_fnVisibleToColumnIndex(settings, idx)];\n          }\n          return columns.map(function (col, idx) {\n            // Not visible, can't match\n            if (!col.bVisible) {\n              return null;\n            }\n\n            // Selector\n            if (match[1]) {\n              return $(nodes[idx]).filter(match[1]).length > 0 ? idx : null;\n            }\n\n            // `:visible` on its own\n            return idx;\n          });\n        case 'name':\n          // match by name. `names` is column index complete and in order\n          return names.map(function (name, i) {\n            return name === match[1] ? i : null;\n          });\n        case 'title':\n          // match by column title\n          return titles.map(function (title, i) {\n            return title === match[1] ? i : null;\n          });\n        default:\n          return [];\n      }\n    }\n\n    // Cell in the table body\n    if (s.nodeName && s._DT_CellIndex) {\n      return [s._DT_CellIndex.column];\n    }\n\n    // jQuery selector on the TH elements for the columns\n    var jqResult = $(nodes).filter(s).map(function () {\n      return _fnColumnsFromHeader(this); // `nodes` is column index complete and in order\n    }).toArray().sort(function (a, b) {\n      return a - b;\n    });\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    }\n\n    // Otherwise a node which might have a `dt-column` data attribute, or be\n    // a child or such an element\n    var host = $(s).closest('*[data-dt-column]');\n    return host.length ? [host.data('dt-column')] : [];\n  };\n  return _selector_run('column', selector, run, settings, opts);\n};\nvar __setColumnVis = function (settings, column, vis) {\n  var cols = settings.aoColumns,\n    col = cols[column],\n    data = settings.aoData,\n    cells,\n    i,\n    ien,\n    tr;\n\n  // Get\n  if (vis === undefined) {\n    return col.bVisible;\n  }\n\n  // Set\n  // No change\n  if (col.bVisible === vis) {\n    return false;\n  }\n  if (vis) {\n    // Insert column\n    // Need to decide if we should use appendChild or insertBefore\n    var insertBefore = _pluck(cols, 'bVisible').indexOf(true, column + 1);\n    for (i = 0, ien = data.length; i < ien; i++) {\n      if (data[i]) {\n        tr = data[i].nTr;\n        cells = data[i].anCells;\n        if (tr) {\n          // insertBefore can act like appendChild if 2nd arg is null\n          tr.insertBefore(cells[column], cells[insertBefore] || null);\n        }\n      }\n    }\n  } else {\n    // Remove column\n    $(_pluck(settings.aoData, 'anCells', column)).detach();\n  }\n\n  // Common actions\n  col.bVisible = vis;\n  _colGroup(settings);\n  return true;\n};\n_api_register('columns()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __column_selector(settings, selector, opts);\n  }, 1);\n\n  // Want argument shifting here and in _row_selector?\n  inst.selector.cols = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n_api_registerPlural('columns().header()', 'column().header()', function (row) {\n  return this.iterator('column', function (settings, column) {\n    return __column_header(settings, column, row);\n  }, 1);\n});\n_api_registerPlural('columns().footer()', 'column().footer()', function (row) {\n  return this.iterator('column', function (settings, column) {\n    var footer = settings.aoFooter;\n    if (!footer.length) {\n      return null;\n    }\n    return settings.aoFooter[row !== undefined ? row : 0][column].cell;\n  }, 1);\n});\n_api_registerPlural('columns().data()', 'column().data()', function () {\n  return this.iterator('column-rows', __columnData, 1);\n});\n_api_registerPlural('columns().render()', 'column().render()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return __columnData(settings, column, i, j, rows, type);\n  }, 1);\n});\n_api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].mData;\n  }, 1);\n});\n_api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, type === 'search' ? '_aFilterData' : '_aSortData', column);\n  }, 1);\n});\n_api_registerPlural('columns().init()', 'column().init()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column];\n  }, 1);\n});\n_api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, 'anCells', column);\n  }, 1);\n});\n_api_registerPlural('columns().titles()', 'column().title()', function (title, row) {\n  return this.iterator('column', function (settings, column) {\n    // Argument shifting\n    if (typeof title === 'number') {\n      row = title;\n      title = undefined;\n    }\n    var span = $('span.dt-column-title', this.column(column).header(row));\n    if (title !== undefined) {\n      span.html(title);\n      return this;\n    }\n    return span.html();\n  }, 1);\n});\n_api_registerPlural('columns().types()', 'column().type()', function () {\n  return this.iterator('column', function (settings, column) {\n    var type = settings.aoColumns[column].sType;\n\n    // If the type was invalidated, then resolve it. This actually does\n    // all columns at the moment. Would only happen once if getting all\n    // column's data types.\n    if (!type) {\n      _fnColumnTypes(settings);\n    }\n    return type;\n  }, 1);\n});\n_api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n  var that = this;\n  var changed = [];\n  var ret = this.iterator('column', function (settings, column) {\n    if (vis === undefined) {\n      return settings.aoColumns[column].bVisible;\n    } // else\n\n    if (__setColumnVis(settings, column, vis)) {\n      changed.push(column);\n    }\n  });\n\n  // Group the column visibility changes\n  if (vis !== undefined) {\n    this.iterator('table', function (settings) {\n      // Redraw the header after changes\n      _fnDrawHead(settings, settings.aoHeader);\n      _fnDrawHead(settings, settings.aoFooter);\n\n      // Update colspan for no records display. Child rows and extensions will use their own\n      // listeners to do this - only need to update the empty table item here\n      if (!settings.aiDisplay.length) {\n        $(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n      }\n      _fnSaveState(settings);\n\n      // Second loop once the first is done for events\n      that.iterator('column', function (settings, column) {\n        if (changed.includes(column)) {\n          _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n        }\n      });\n      if (changed.length && (calc === undefined || calc)) {\n        that.columns.adjust();\n      }\n    });\n  }\n  return ret;\n});\n_api_registerPlural('columns().widths()', 'column().width()', function () {\n  // Injects a fake row into the table for just a moment so the widths can\n  // be read, regardless of colspan in the header and rows being present in\n  // the body\n  var columns = this.columns(':visible').count();\n  var row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n  $(this.table().body()).append(row);\n  var widths = row.children().map(function () {\n    return $(this).outerWidth();\n  });\n  row.remove();\n  return this.iterator('column', function (settings, column) {\n    var visIdx = _fnColumnIndexToVisible(settings, column);\n    return visIdx !== null ? widths[visIdx] : 0;\n  }, 1);\n});\n_api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n  return this.iterator('column', function (settings, column) {\n    return type === 'visible' ? _fnColumnIndexToVisible(settings, column) : column;\n  }, 1);\n});\n_api_register('columns.adjust()', function () {\n  return this.iterator('table', function (settings) {\n    _fnAdjustColumnSizing(settings);\n  }, 1);\n});\n_api_register('column.index()', function (type, idx) {\n  if (this.context.length !== 0) {\n    var ctx = this.context[0];\n    if (type === 'fromVisible' || type === 'toData') {\n      return _fnVisibleToColumnIndex(ctx, idx);\n    } else if (type === 'fromData' || type === 'toVisible') {\n      return _fnColumnIndexToVisible(ctx, idx);\n    }\n  }\n});\n_api_register('column()', function (selector, opts) {\n  return _selector_first(this.columns(selector, opts));\n});\nvar __cell_selector = function (settings, selector, opts) {\n  var data = settings.aoData;\n  var rows = _selector_row_indexes(settings, opts);\n  var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n  var allCells = $(_flatten([], cells));\n  var row;\n  var columns = settings.aoColumns.length;\n  var a, i, ien, j, o, host;\n  var run = function (s) {\n    var fnSelector = typeof s === 'function';\n    if (s === null || s === undefined || fnSelector) {\n      // All cells and function selectors\n      a = [];\n      for (i = 0, ien = rows.length; i < ien; i++) {\n        row = rows[i];\n        for (j = 0; j < columns; j++) {\n          o = {\n            row: row,\n            column: j\n          };\n          if (fnSelector) {\n            // Selector - function\n            host = data[row];\n            if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n              a.push(o);\n            }\n          } else {\n            // Selector - all\n            a.push(o);\n          }\n        }\n      }\n      return a;\n    }\n\n    // Selector - index\n    if ($.isPlainObject(s)) {\n      // Valid cell index and its in the array of selectable rows\n      return s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ? [s] : [];\n    }\n\n    // Selector - jQuery filtered cells\n    var jqResult = allCells.filter(s).map(function (i, el) {\n      return {\n        // use a new object, in case someone changes the values\n        row: el._DT_CellIndex.row,\n        column: el._DT_CellIndex.column\n      };\n    }).toArray();\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    }\n\n    // Otherwise the selector is a node, and there is one last option - the\n    // element might be a child of an element which has dt-row and dt-column\n    // data attributes\n    host = $(s).closest('*[data-dt-row]');\n    return host.length ? [{\n      row: host.data('dt-row'),\n      column: host.data('dt-column')\n    }] : [];\n  };\n  return _selector_run('cell', selector, run, settings, opts);\n};\n_api_register('cells()', function (rowSelector, columnSelector, opts) {\n  // Argument shifting\n  if ($.isPlainObject(rowSelector)) {\n    // Indexes\n    if (rowSelector.row === undefined) {\n      // Selector options in first parameter\n      opts = rowSelector;\n      rowSelector = null;\n    } else {\n      // Cell index objects in first parameter\n      opts = columnSelector;\n      columnSelector = null;\n    }\n  }\n  if ($.isPlainObject(columnSelector)) {\n    opts = columnSelector;\n    columnSelector = null;\n  }\n\n  // Cell selector\n  if (columnSelector === null || columnSelector === undefined) {\n    return this.iterator('table', function (settings) {\n      return __cell_selector(settings, rowSelector, _selector_opts(opts));\n    });\n  }\n\n  // The default built in options need to apply to row and columns\n  var internalOpts = opts ? {\n    page: opts.page,\n    order: opts.order,\n    search: opts.search\n  } : {};\n\n  // Row + column selector\n  var columns = this.columns(columnSelector, internalOpts);\n  var rows = this.rows(rowSelector, internalOpts);\n  var i, ien, j, jen;\n  var cellsNoOpts = this.iterator('table', function (settings, idx) {\n    var a = [];\n    for (i = 0, ien = rows[idx].length; i < ien; i++) {\n      for (j = 0, jen = columns[idx].length; j < jen; j++) {\n        a.push({\n          row: rows[idx][i],\n          column: columns[idx][j]\n        });\n      }\n    }\n    return a;\n  }, 1);\n\n  // There is currently only one extension which uses a cell selector extension\n  // It is a _major_ performance drag to run this if it isn't needed, so this is\n  // an extension specific check at the moment\n  var cells = opts && opts.selected ? this.cells(cellsNoOpts, opts) : cellsNoOpts;\n  $.extend(cells.selector, {\n    cols: columnSelector,\n    rows: rowSelector,\n    opts: opts\n  });\n  return cells;\n});\n_api_registerPlural('cells().nodes()', 'cell().node()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    var data = settings.aoData[row];\n    return data && data.anCells ? data.anCells[column] : undefined;\n  }, 1);\n});\n_api_register('cells().data()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column);\n  }, 1);\n});\n_api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n  type = type === 'search' ? '_aFilterData' : '_aSortData';\n  return this.iterator('cell', function (settings, row, column) {\n    return settings.aoData[row][type][column];\n  }, 1);\n});\n_api_registerPlural('cells().render()', 'cell().render()', function (type) {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column, type);\n  }, 1);\n});\n_api_registerPlural('cells().indexes()', 'cell().index()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return {\n      row: row,\n      column: column,\n      columnVisible: _fnColumnIndexToVisible(settings, column)\n    };\n  }, 1);\n});\n_api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n  return this.iterator('cell', function (settings, row, column) {\n    _fnInvalidate(settings, row, src, column);\n  });\n});\n_api_register('cell()', function (rowSelector, columnSelector, opts) {\n  return _selector_first(this.cells(rowSelector, columnSelector, opts));\n});\n_api_register('cell().data()', function (data) {\n  var ctx = this.context;\n  var cell = this[0];\n  if (data === undefined) {\n    // Get\n    return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined;\n  }\n\n  // Set\n  _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n  _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n  return this;\n});\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n */ /**\n    * Set the ordering for the table.\n    *\n    * @param {integer} order Column index to sort upon.\n    * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n    * @returns {DataTables.Api} this\n    */ /**\n       * Set the ordering for the table.\n       *\n       * @param {array} order 1D array of sorting information to be applied.\n       * @param {array} [...] Optional additional sorting conditions\n       * @returns {DataTables.Api} this\n       */ /**\n          * Set the ordering for the table.\n          *\n          * @param {array} order 2D array of sorting information to be applied.\n          * @returns {DataTables.Api} this\n          */\n_api_register('order()', function (order, dir) {\n  var ctx = this.context;\n  var args = Array.prototype.slice.call(arguments);\n  if (order === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].aaSorting : undefined;\n  }\n\n  // set\n  if (typeof order === 'number') {\n    // Simple column / direction passed in\n    order = [[order, dir]];\n  } else if (args.length > 1) {\n    // Arguments passed in (list of 1D arrays)\n    order = args;\n  }\n  // otherwise a 2D array was passed in\n\n  return this.iterator('table', function (settings) {\n    settings.aaSorting = Array.isArray(order) ? order.slice() : order;\n  });\n});\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register('order.listener()', function (node, column, callback) {\n  return this.iterator('table', function (settings) {\n    _fnSortAttachListener(settings, node, {}, column, callback);\n  });\n});\n_api_register('order.fixed()', function (set) {\n  if (!set) {\n    var ctx = this.context;\n    var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined;\n    return Array.isArray(fixed) ? {\n      pre: fixed\n    } : fixed;\n  }\n  return this.iterator('table', function (settings) {\n    settings.aaSortingFixed = $.extend(true, {}, set);\n  });\n});\n\n// Order by the selected column(s)\n_api_register(['columns().order()', 'column().order()'], function (dir) {\n  var that = this;\n  if (!dir) {\n    return this.iterator('column', function (settings, idx) {\n      var sort = _fnSortFlatten(settings);\n      for (var i = 0, ien = sort.length; i < ien; i++) {\n        if (sort[i].col === idx) {\n          return sort[i].dir;\n        }\n      }\n      return null;\n    }, 1);\n  } else {\n    return this.iterator('table', function (settings, i) {\n      settings.aaSorting = that[i].map(function (col) {\n        return [col, dir];\n      });\n    });\n  }\n});\n_api_registerPlural('columns().orderable()', 'column().orderable()', function (directions) {\n  return this.iterator('column', function (settings, idx) {\n    var col = settings.aoColumns[idx];\n    return directions ? col.asSorting : col.bSortable;\n  }, 1);\n});\n_api_register('processing()', function (show) {\n  return this.iterator('table', function (ctx) {\n    _fnProcessingDisplay(ctx, show);\n  });\n});\n_api_register('search()', function (input, regex, smart, caseInsen) {\n  var ctx = this.context;\n  if (input === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].oPreviousSearch.search : undefined;\n  }\n\n  // set\n  return this.iterator('table', function (settings) {\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n    if (typeof regex === 'object') {\n      // New style options to pass to the search builder\n      _fnFilterComplete(settings, $.extend(settings.oPreviousSearch, regex, {\n        search: input\n      }));\n    } else {\n      // Compat for the old options\n      _fnFilterComplete(settings, $.extend(settings.oPreviousSearch, {\n        search: input,\n        regex: regex === null ? false : regex,\n        smart: smart === null ? true : smart,\n        caseInsensitive: caseInsen === null ? true : caseInsen\n      }));\n    }\n  });\n});\n_api_register('search.fixed()', function (name, search) {\n  var ret = this.iterator(true, 'table', function (settings) {\n    var fixed = settings.searchFixed;\n    if (!name) {\n      return Object.keys(fixed);\n    } else if (search === undefined) {\n      return fixed[name];\n    } else if (search === null) {\n      delete fixed[name];\n    } else {\n      fixed[name] = search;\n    }\n    return this;\n  });\n  return name !== undefined && search === undefined ? ret[0] : ret;\n});\n_api_registerPlural('columns().search()', 'column().search()', function (input, regex, smart, caseInsen) {\n  return this.iterator('column', function (settings, column) {\n    var preSearch = settings.aoPreSearchCols;\n    if (input === undefined) {\n      // get\n      return preSearch[column].search;\n    }\n\n    // set\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n    if (typeof regex === 'object') {\n      // New style options to pass to the search builder\n      $.extend(preSearch[column], regex, {\n        search: input\n      });\n    } else {\n      // Old style (with not all options available)\n      $.extend(preSearch[column], {\n        search: input,\n        regex: regex === null ? false : regex,\n        smart: smart === null ? true : smart,\n        caseInsensitive: caseInsen === null ? true : caseInsen\n      });\n    }\n    _fnFilterComplete(settings, settings.oPreviousSearch);\n  });\n});\n_api_register(['columns().search.fixed()', 'column().search.fixed()'], function (name, search) {\n  var ret = this.iterator(true, 'column', function (settings, colIdx) {\n    var fixed = settings.aoColumns[colIdx].searchFixed;\n    if (!name) {\n      return Object.keys(fixed);\n    } else if (search === undefined) {\n      return fixed[name];\n    } else if (search === null) {\n      delete fixed[name];\n    } else {\n      fixed[name] = search;\n    }\n    return this;\n  });\n  return name !== undefined && search === undefined ? ret[0] : ret;\n});\n/*\n * State API methods\n */\n\n_api_register('state()', function (set, ignoreTime) {\n  // getter\n  if (!set) {\n    return this.context.length ? this.context[0].oSavedState : null;\n  }\n  var setMutate = $.extend(true, {}, set);\n\n  // setter\n  return this.iterator('table', function (settings) {\n    if (ignoreTime !== false) {\n      setMutate.time = +new Date() + 100;\n    }\n    _fnImplementState(settings, setMutate, function () {});\n  });\n});\n_api_register('state.clear()', function () {\n  return this.iterator('table', function (settings) {\n    // Save an empty object\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n  });\n});\n_api_register('state.loaded()', function () {\n  return this.context.length ? this.context[0].oLoadedState : null;\n});\n_api_register('state.save()', function () {\n  return this.iterator('table', function (settings) {\n    _fnSaveState(settings);\n  });\n});\n\n// Can be assigned in DateTable.use() - note luxon and moment vars are in helpers.js\nvar __bootstrap;\nvar __foundation;\n\n/**\n * Set the libraries that DataTables uses, or the global objects.\n * Note that the arguments can be either way around (legacy support)\n * and the second is optional. See docs.\n */\nDataTable.use = function (arg1, arg2) {\n  // Reverse arguments for legacy support\n  var module = typeof arg1 === 'string' ? arg2 : arg1;\n  var type = typeof arg2 === 'string' ? arg2 : arg1;\n\n  // Getter\n  if (module === undefined && typeof type === 'string') {\n    switch (type) {\n      case 'lib':\n      case 'jq':\n        return $;\n      case 'win':\n        return window;\n      case 'datetime':\n        return DataTable.DateTime;\n      case 'luxon':\n        return __luxon;\n      case 'moment':\n        return __moment;\n      case 'bootstrap':\n        // Use local if set, otherwise try window, which could be undefined\n        return __bootstrap || window.bootstrap;\n      case 'foundation':\n        // Ditto\n        return __foundation || window.Foundation;\n      default:\n        return null;\n    }\n  }\n\n  // Setter\n  if (type === 'lib' || type === 'jq' || module && module.fn && module.fn.jquery) {\n    $ = module;\n  } else if (type === 'win' || module && module.document) {\n    window = module;\n    document = module.document;\n  } else if (type === 'datetime' || module && module.type === 'DateTime') {\n    DataTable.DateTime = module;\n  } else if (type === 'luxon' || module && module.FixedOffsetZone) {\n    __luxon = module;\n  } else if (type === 'moment' || module && module.isMoment) {\n    __moment = module;\n  } else if (type === 'bootstrap' || module && module.Modal && module.Modal.NAME === 'modal') {\n    // This is currently for BS5 only. BS3/4 attach to jQuery, so no need to use `.use()`\n    __bootstrap = module;\n  } else if (type === 'foundation' || module && module.Reveal) {\n    __foundation = module;\n  }\n};\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n  var is = false;\n\n  // Test if the first parameter is a window object\n  if (root && root.document) {\n    window = root;\n    document = root.document;\n  }\n\n  // Test if the second parameter is a jQuery object\n  if (jq && jq.fn && jq.fn.jquery) {\n    $ = jq;\n    is = true;\n  }\n  return is;\n};\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @param {string} [version2=current DataTables version] As above, but optional.\n *   If not given the current DataTables version will be used.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = function (version, version2) {\n  var aThis = version2 ? version2.split('.') : DataTable.version.split('.');\n  var aThat = version.split('.');\n  var iThis, iThat;\n  for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n    iThis = parseInt(aThis[i], 10) || 0;\n    iThat = parseInt(aThat[i], 10) || 0;\n\n    // Parts are the same, keep comparing\n    if (iThis === iThat) {\n      continue;\n    }\n\n    // Parts are different, return immediately\n    return iThis > iThat;\n  }\n  return true;\n};\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = function (table) {\n  var t = $(table).get(0);\n  var is = false;\n  if (table instanceof DataTable.Api) {\n    return true;\n  }\n  $.each(DataTable.settings, function (i, o) {\n    var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n    var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n    if (o.nTable === t || head === t || foot === t) {\n      is = true;\n    }\n  });\n  return is;\n};\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = function (visible) {\n  var api = false;\n  if ($.isPlainObject(visible)) {\n    api = visible.api;\n    visible = visible.visible;\n  }\n  var a = DataTable.settings.filter(function (o) {\n    return !visible || visible && $(o.nTable).is(':visible') ? true : false;\n  }).map(function (o) {\n    return o.nTable;\n  });\n  return api ? new _Api(a) : a;\n};\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n/**\n *\n */\n_api_register('$()', function (selector, opts) {\n  var rows = this.rows(opts).nodes(),\n    // Get all rows\n    jqRows = $(rows);\n  return $([].concat(jqRows.filter(selector).toArray(), jqRows.find(selector).toArray()));\n});\n\n// jQuery functions to operate on the tables\n$.each(['on', 'one', 'off'], function (i, key) {\n  _api_register(key + '()', function /* event, handler */\n  () {\n    var args = Array.prototype.slice.call(arguments);\n\n    // Add the `dt` namespace automatically if it isn't already present\n    args[0] = args[0].split(/\\s/).map(function (e) {\n      return !e.match(/\\.dt\\b/) ? e + '.dt' : e;\n    }).join(' ');\n    var inst = $(this.tables().nodes());\n    inst[key].apply(inst, args);\n    return this;\n  });\n});\n_api_register('clear()', function () {\n  return this.iterator('table', function (settings) {\n    _fnClearTable(settings);\n  });\n});\n_api_register('error()', function (msg) {\n  return this.iterator('table', function (settings) {\n    _fnLog(settings, 0, msg);\n  });\n});\n_api_register('settings()', function () {\n  return new _Api(this.context, this.context);\n});\n_api_register('init()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].oInit : null;\n});\n_api_register('data()', function () {\n  return this.iterator('table', function (settings) {\n    return _pluck(settings.aoData, '_aData');\n  }).flatten();\n});\n_api_register('trigger()', function (name, args, bubbles) {\n  return this.iterator('table', function (settings) {\n    return _fnCallbackFire(settings, null, name, args, bubbles);\n  }).flatten();\n});\n_api_register('ready()', function (fn) {\n  var ctx = this.context;\n\n  // Get status of first table\n  if (!fn) {\n    return ctx.length ? ctx[0]._bInitComplete || false : null;\n  }\n\n  // Function to run either once the table becomes ready or\n  // immediately if it is already ready.\n  return this.tables().every(function () {\n    if (this.context[0]._bInitComplete) {\n      fn.call(this);\n    } else {\n      this.on('init.dt.DT', function () {\n        fn.call(this);\n      });\n    }\n  });\n});\n_api_register('destroy()', function (remove) {\n  remove = remove || false;\n  return this.iterator('table', function (settings) {\n    var classes = settings.oClasses;\n    var table = settings.nTable;\n    var tbody = settings.nTBody;\n    var thead = settings.nTHead;\n    var tfoot = settings.nTFoot;\n    var jqTable = $(table);\n    var jqTbody = $(tbody);\n    var jqWrapper = $(settings.nTableWrapper);\n    var rows = settings.aoData.map(function (r) {\n      return r ? r.nTr : null;\n    });\n    var orderClasses = classes.order;\n\n    // Flag to note that the table is currently being destroyed - no action\n    // should be taken\n    settings.bDestroying = true;\n\n    // Fire off the destroy callbacks for plug-ins etc\n    _fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings], true);\n\n    // If not being removed from the document, make all columns visible\n    if (!remove) {\n      new _Api(settings).columns().visible(true);\n    }\n\n    // Container width change listener\n    if (settings.resizeObserver) {\n      settings.resizeObserver.disconnect();\n    }\n\n    // Blitz all `DT` namespaced events (these are internal events, the\n    // lowercase, `dt` events are user subscribed and they are responsible\n    // for removing them\n    jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n    $(window).off('.DT-' + settings.sInstance);\n\n    // When scrolling we had to break the table up - restore it\n    if (table != thead.parentNode) {\n      jqTable.children('thead').detach();\n      jqTable.append(thead);\n    }\n    if (tfoot && table != tfoot.parentNode) {\n      jqTable.children('tfoot').detach();\n      jqTable.append(tfoot);\n    }\n    settings.colgroup.remove();\n    settings.aaSorting = [];\n    settings.aaSortingFixed = [];\n    _fnSortingClasses(settings);\n    $('th, td', thead).removeClass(orderClasses.canAsc + ' ' + orderClasses.canDesc + ' ' + orderClasses.isAsc + ' ' + orderClasses.isDesc).css('width', '');\n\n    // Add the TR elements back into the table in their original order\n    jqTbody.children().detach();\n    jqTbody.append(rows);\n    var orig = settings.nTableWrapper.parentNode;\n    var insertBefore = settings.nTableWrapper.nextSibling;\n\n    // Remove the DataTables generated nodes, events and classes\n    var removedMethod = remove ? 'remove' : 'detach';\n    jqTable[removedMethod]();\n    jqWrapper[removedMethod]();\n\n    // If we need to reattach the table to the document\n    if (!remove && orig) {\n      // insertBefore acts like appendChild if !arg[1]\n      orig.insertBefore(table, insertBefore);\n\n      // Restore the width of the original table - was read from the style property,\n      // so we can restore directly to that\n      jqTable.css('width', settings.sDestroyWidth).removeClass(classes.table);\n    }\n\n    /* Remove the settings object from the settings array */\n    var idx = DataTable.settings.indexOf(settings);\n    if (idx !== -1) {\n      DataTable.settings.splice(idx, 1);\n    }\n  });\n});\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each(['column', 'row', 'cell'], function (i, type) {\n  _api_register(type + 's().every()', function (fn) {\n    var opts = this.selector.opts;\n    var api = this;\n    var inst;\n    var counter = 0;\n    return this.iterator('every', function (settings, selectedIdx, tableIdx) {\n      inst = api[type](selectedIdx, opts);\n      if (type === 'cell') {\n        fn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n      } else {\n        fn.call(inst, selectedIdx, tableIdx, counter);\n      }\n      counter++;\n    });\n  });\n});\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register('i18n()', function (token, def, plural) {\n  var ctx = this.context[0];\n  var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n  if (resolved === undefined) {\n    resolved = def;\n  }\n  if ($.isPlainObject(resolved)) {\n    resolved = plural !== undefined && resolved[plural] !== undefined ? resolved[plural] : resolved._;\n  }\n  return typeof resolved === 'string' ? resolved.replace('%d', plural) // nb: plural might be undefined,\n  : resolved;\n});\n\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"2.2.0\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n  /**\n   * Flag to indicate if the filtering should be case insensitive or not\n   */\n  \"caseInsensitive\": true,\n  /**\n   * Applied search term\n   */\n  \"search\": \"\",\n  /**\n   * Flag to indicate if the search term should be interpreted as a\n   * regular expression (true) or not (false) and therefore and special\n   * regex characters escaped.\n   */\n  \"regex\": false,\n  /**\n   * Flag to indicate if DataTables is to use its smart filtering or not.\n   */\n  \"smart\": true,\n  /**\n   * Flag to indicate if DataTables should only trigger a search when\n   * the return key is pressed.\n   */\n  \"return\": false\n};\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n  /**\n   * TR element for the row\n   */\n  \"nTr\": null,\n  /**\n   * Array of TD elements for each row. This is null until the row has been\n   * created.\n   */\n  \"anCells\": null,\n  /**\n   * Data object from the original data source for the row. This is either\n   * an array if using the traditional form of DataTables, or an object if\n   * using mData options. The exact type will depend on the passed in\n   * data from the data source, or will be an array if using DOM a data\n   * source.\n   */\n  \"_aData\": [],\n  /**\n   * Sorting data cache - this array is ostensibly the same length as the\n   * number of columns (although each index is generated only as it is\n   * needed), and holds the data that is used for sorting each column in the\n   * row. We do this cache generation at the start of the sort in order that\n   * the formatting of the sort data need be done only once for each cell\n   * per sort. This array should not be read from or written to by anything\n   * other than the master sorting methods.\n   */\n  \"_aSortData\": null,\n  /**\n   * Per cell filtering data cache. As per the sort data cache, used to\n   * increase the performance of the filtering in DataTables\n   */\n  \"_aFilterData\": null,\n  /**\n   * Filtering data cache. This is the same as the cell filtering cache, but\n   * in this case a string rather than an array. This is easily computed with\n   * a join on `_aFilterData`, but is provided as a cache so the join isn't\n   * needed on every search (memory traded for performance)\n   */\n  \"_sFilterRow\": null,\n  /**\n   * Denote if the original data source was from the DOM, or the data source\n   * object. This is used for invalidating data, so DataTables can\n   * automatically read data from the original source, unless uninstructed\n   * otherwise.\n   */\n  \"src\": null,\n  /**\n   * Index in the aoData array. This saves an indexOf lookup when we have the\n   * object, but want to know the index\n   */\n  \"idx\": -1,\n  /**\n   * Cached display value\n   */\n  displayData: null\n};\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n  /**\n   * Column index.\n   */\n  \"idx\": null,\n  /**\n   * A list of the columns that sorting should occur on when this column\n   * is sorted. That this property is an array allows multi-column sorting\n   * to be defined for a column (for example first name / last name columns\n   * would benefit from this). The values are integers pointing to the\n   * columns to be sorted on (typically it will be a single integer pointing\n   * at itself, but that doesn't need to be the case).\n   */\n  \"aDataSort\": null,\n  /**\n   * Define the sorting directions that are applied to the column, in sequence\n   * as the column is repeatedly sorted upon - i.e. the first value is used\n   * as the sorting direction when the column if first sorted (clicked on).\n   * Sort it again (click again) and it will move on to the next index.\n   * Repeat until loop.\n   */\n  \"asSorting\": null,\n  /**\n   * Flag to indicate if the column is searchable, and thus should be included\n   * in the filtering or not.\n   */\n  \"bSearchable\": null,\n  /**\n   * Flag to indicate if the column is sortable or not.\n   */\n  \"bSortable\": null,\n  /**\n   * Flag to indicate if the column is currently visible in the table or not\n   */\n  \"bVisible\": null,\n  /**\n   * Store for manual type assignment using the `column.type` option. This\n   * is held in store so we can manipulate the column's `sType` property.\n   */\n  \"_sManualType\": null,\n  /**\n   * Flag to indicate if HTML5 data attributes should be used as the data\n   * source for filtering or sorting. True is either are.\n   */\n  \"_bAttrSrc\": false,\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   */\n  \"fnCreatedCell\": null,\n  /**\n   * Function to get data from a cell in a column. You should <b>never</b>\n   * access data directly through _aData internally in DataTables - always use\n   * the method attached to this property. It allows mData to function as\n   * required. This function is automatically assigned by the column\n   * initialisation method\n   */\n  \"fnGetData\": null,\n  /**\n   * Function to set data for a cell in the column. You should <b>never</b>\n   * set the data directly to _aData internally in DataTables - always use\n   * this method. It allows mData to function as required. This function\n   * is automatically assigned by the column initialisation method\n   */\n  \"fnSetData\": null,\n  /**\n   * Property to read the value for the cells in the column from the data\n   * source array / object. If null, then the default content is used, if a\n   * function is given then the return from the function is used.\n   */\n  \"mData\": null,\n  /**\n   * Partner property to mData which is used (only when defined) to get\n   * the data - i.e. it is basically the same as mData, but without the\n   * 'set' option, and also the data fed to it is the result from mData.\n   * This is the rendering method to match the data method of mData.\n   */\n  \"mRender\": null,\n  /**\n   * The class to apply to all TD elements in the table's TBODY for the column\n   */\n  \"sClass\": null,\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   */\n  \"sContentPadding\": null,\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because mData\n   * is set to null, or because the data source itself is null).\n   */\n  \"sDefaultContent\": null,\n  /**\n   * Name for the column, allowing reference to the column by name as well as\n   * by index (needs a lookup to work by name).\n   */\n  \"sName\": null,\n  /**\n   * Custom sorting data type - defines which of the available plug-ins in\n   * afnSortData the custom sorting will use - if any is defined.\n   */\n  \"sSortDataType\": 'std',\n  /**\n   * Class to be applied to the header element when sorting on this column\n   */\n  \"sSortingClass\": null,\n  /**\n   * Title of the column - what is seen in the TH element (nTh).\n   */\n  \"sTitle\": null,\n  /**\n   * Column sorting and filtering type\n   */\n  \"sType\": null,\n  /**\n   * Width of the column\n   */\n  \"sWidth\": null,\n  /**\n   * Width of the column when it was first \"encountered\"\n   */\n  \"sWidthOrig\": null,\n  /** Cached string which is the longest in the column */\n  maxLenString: null,\n  /**\n   * Store for named searches\n   */\n  searchFixed: null\n};\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n  /**\n   * An array of data to use for the table, passed in at initialisation which\n   * will be used in preference to any data which is already in the DOM. This is\n   * particularly useful for constructing tables purely in Javascript, for\n   * example with a custom Ajax call.\n   */\n  \"aaData\": null,\n  /**\n   * If ordering is enabled, then DataTables will perform a first pass sort on\n   * initialisation. You can define which column(s) the sort is performed\n   * upon, and the sorting direction, with this variable. The `sorting` array\n   * should contain an array for each column to be sorted initially containing\n   * the column's index and a direction string ('asc' or 'desc').\n   */\n  \"aaSorting\": [[0, 'asc']],\n  /**\n   * This parameter is basically identical to the `sorting` parameter, but\n   * cannot be overridden by user interaction with the table. What this means\n   * is that you could have a column (visible or hidden) which the sorting\n   * will always be forced on first - any sorting after that (from the user)\n   * will then be performed as required. This can be useful for grouping rows\n   * together.\n   */\n  \"aaSortingFixed\": [],\n  /**\n   * DataTables can be instructed to load data to display in the table from a\n   * Ajax source. This option defines how that Ajax call is made and where to.\n   *\n   * The `ajax` property has three different modes of operation, depending on\n   * how it is defined. These are:\n   *\n   * * `string` - Set the URL from where the data should be loaded from.\n   * * `object` - Define properties for `jQuery.ajax`.\n   * * `function` - Custom data get function\n   *\n   * `string`\n   * --------\n   *\n   * As a string, the `ajax` property simply defines the URL from which\n   * DataTables will load data.\n   *\n   * `object`\n   * --------\n   *\n   * As an object, the parameters in the object are passed to\n   * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n   * of the Ajax request. DataTables has a number of default parameters which\n   * you can override using this option. Please refer to the jQuery\n   * documentation for a full description of the options available, although\n   * the following parameters provide additional options in DataTables or\n   * require special consideration:\n   *\n   * * `data` - As with jQuery, `data` can be provided as an object, but it\n   *   can also be used as a function to manipulate the data DataTables sends\n   *   to the server. The function takes a single parameter, an object of\n   *   parameters with the values that DataTables has readied for sending. An\n   *   object may be returned which will be merged into the DataTables\n   *   defaults, or you can add the items to the object that was passed in and\n   *   not return anything from the function. This supersedes `fnServerParams`\n   *   from DataTables 1.9-.\n   *\n   * * `dataSrc` - By default DataTables will look for the property `data` (or\n   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n   *   from an Ajax source or for server-side processing - this parameter\n   *   allows that property to be changed. You can use Javascript dotted\n   *   object notation to get a data source for multiple levels of nesting, or\n   *   it my be used as a function. As a function it takes a single parameter,\n   *   the JSON returned from the server, which can be manipulated as\n   *   required, with the returned value being that used by DataTables as the\n   *   data source for the table.\n   *\n   * * `success` - Should not be overridden it is used internally in\n   *   DataTables. To manipulate / transform the data returned by the server\n   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n   *\n   * `function`\n   * ----------\n   *\n   * As a function, making the Ajax call is left up to yourself allowing\n   * complete control of the Ajax request. Indeed, if desired, a method other\n   * than Ajax could be used to obtain the required data, such as Web storage\n   * or an AIR database.\n   *\n   * The function is given four parameters and no return is required. The\n   * parameters are:\n   *\n   * 1. _object_ - Data to send to the server\n   * 2. _function_ - Callback function that must be executed when the required\n   *    data has been obtained. That data should be passed into the callback\n   *    as the only parameter\n   * 3. _object_ - DataTables settings object for the table\n   */\n  \"ajax\": null,\n  /**\n   * This parameter allows you to readily specify the entries in the length drop\n   * down menu that DataTables shows when pagination is enabled. It can be\n   * either a 1D array of options which will be used for both the displayed\n   * option and the value, or a 2D array which will use the array in the first\n   * position as the value, and the array in the second position as the\n   * displayed options (useful for language strings such as 'All').\n   *\n   * Note that the `pageLength` property will be automatically set to the\n   * first value given in this array, unless `pageLength` is also provided.\n   */\n  \"aLengthMenu\": [10, 25, 50, 100],\n  /**\n   * The `columns` option in the initialisation parameter allows you to define\n   * details about the way individual columns behave. For a full list of\n   * column options that can be set, please see\n   * {@link DataTable.defaults.column}. Note that if you use `columns` to\n   * define your columns, you must have an entry in the array for every single\n   * column that you have in your table (these can be null if you don't which\n   * to specify any options).\n   */\n  \"aoColumns\": null,\n  /**\n   * Very similar to `columns`, `columnDefs` allows you to target a specific\n   * column, multiple columns, or all columns, using the `targets` property of\n   * each object in the array. This allows great flexibility when creating\n   * tables, as the `columnDefs` arrays can be of any length, targeting the\n   * columns you specifically want. `columnDefs` may use any of the column\n   * options available: {@link DataTable.defaults.column}, but it _must_\n   * have `targets` defined in each object in the array. Values in the `targets`\n   * array may be:\n   *   <ul>\n   *     <li>a string - class name will be matched on the TH for the column</li>\n   *     <li>0 or a positive integer - column index counting from the left</li>\n   *     <li>a negative integer - column index counting from the right</li>\n   *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n   *   </ul>\n   */\n  \"aoColumnDefs\": null,\n  /**\n   * Basically the same as `search`, this parameter defines the individual column\n   * filtering state at initialisation time. The array must be of the same size\n   * as the number of columns, and each element be an object with the parameters\n   * `search` and `escapeRegex` (the latter is optional). 'null' is also\n   * accepted and the default will be used.\n   */\n  \"aoSearchCols\": [],\n  /**\n   * Enable or disable automatic column width calculation. This can be disabled\n   * as an optimisation (it takes some time to calculate the widths) if the\n   * tables widths are passed in using `columns`.\n   */\n  \"bAutoWidth\": true,\n  /**\n   * Deferred rendering can provide DataTables with a huge speed boost when you\n   * are using an Ajax or JS data source for the table. This option, when set to\n   * true, will cause DataTables to defer the creation of the table elements for\n   * each row until they are needed for a draw - saving a significant amount of\n   * time.\n   */\n  \"bDeferRender\": true,\n  /**\n   * Replace a DataTable which matches the given selector and replace it with\n   * one which has the properties of the new initialisation object passed. If no\n   * table matches the selector, then the new DataTable will be constructed as\n   * per normal.\n   */\n  \"bDestroy\": false,\n  /**\n   * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n   * that it allows the end user to input multiple words (space separated) and\n   * will match a row containing those words, even if not in the order that was\n   * specified (this allow matching across multiple columns). Note that if you\n   * wish to use filtering in DataTables this must remain 'true' - to remove the\n   * default filtering input box and retain filtering abilities, please use\n   * {@link DataTable.defaults.dom}.\n   */\n  \"bFilter\": true,\n  /**\n   * Used only for compatiblity with DT1\n   * @deprecated\n   */\n  \"bInfo\": true,\n  /**\n   * Used only for compatiblity with DT1\n   * @deprecated\n   */\n  \"bLengthChange\": true,\n  /**\n   * Enable or disable pagination.\n   */\n  \"bPaginate\": true,\n  /**\n   * Enable or disable the display of a 'processing' indicator when the table is\n   * being processed (e.g. a sort). This is particularly useful for tables with\n   * large amounts of data where it can take a noticeable amount of time to sort\n   * the entries.\n   */\n  \"bProcessing\": false,\n  /**\n   * Retrieve the DataTables object for the given selector. Note that if the\n   * table has already been initialised, this parameter will cause DataTables\n   * to simply return the object that has already been set up - it will not take\n   * account of any changes you might have made to the initialisation object\n   * passed to DataTables (setting this parameter to true is an acknowledgement\n   * that you understand this). `destroy` can be used to reinitialise a table if\n   * you need.\n   */\n  \"bRetrieve\": false,\n  /**\n   * When vertical (y) scrolling is enabled, DataTables will force the height of\n   * the table's viewport to the given height at all times (useful for layout).\n   * However, this can look odd when filtering data down to a small data set,\n   * and the footer is left \"floating\" further down. This parameter (when\n   * enabled) will cause DataTables to collapse the table's viewport down when\n   * the result set will fit within the given Y height.\n   */\n  \"bScrollCollapse\": false,\n  /**\n   * Configure DataTables to use server-side processing. Note that the\n   * `ajax` parameter must also be given in order to give DataTables a\n   * source to obtain the required data for each draw.\n   */\n  \"bServerSide\": false,\n  /**\n   * Enable or disable sorting of columns. Sorting of individual columns can be\n   * disabled by the `sortable` option for each column.\n   */\n  \"bSort\": true,\n  /**\n   * Enable or display DataTables' ability to sort multiple columns at the\n   * same time (activated by shift-click by the user).\n   */\n  \"bSortMulti\": true,\n  /**\n   * Allows control over whether DataTables should use the top (true) unique\n   * cell that is found for a single column, or the bottom (false - default).\n   * This is useful when using complex headers.\n   */\n  \"bSortCellsTop\": null,\n  /**\n   * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n   * `sorting\\_3` to the columns which are currently being sorted on. This is\n   * presented as a feature switch as it can increase processing time (while\n   * classes are removed and added) so for large data sets you might want to\n   * turn this off.\n   */\n  \"bSortClasses\": true,\n  /**\n   * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n   * used to save table display information such as pagination information,\n   * display length, filtering and sorting. As such when the end user reloads\n   * the page the display display will match what thy had previously set up.\n   */\n  \"bStateSave\": false,\n  /**\n   * This function is called when a TR element is created (and all TD child\n   * elements have been inserted), or registered if using a DOM source, allowing\n   * manipulation of the TR element (adding classes etc).\n   */\n  \"fnCreatedRow\": null,\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify any aspect you want about the created DOM.\n   */\n  \"fnDrawCallback\": null,\n  /**\n   * Identical to fnHeaderCallback() but for the table footer this function\n   * allows you to modify the table footer on every 'draw' event.\n   */\n  \"fnFooterCallback\": null,\n  /**\n   * When rendering large numbers in the information element for the table\n   * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n   * to have a comma separator for the 'thousands' units (e.g. 1 million is\n   * rendered as \"1,000,000\") to help readability for the end user. This\n   * function will override the default method DataTables uses.\n   */\n  \"fnFormatNumber\": function (toFormat) {\n    return toFormat.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.oLanguage.sThousands);\n  },\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify the header row. This can be used to calculate and\n   * display useful information about the table.\n   */\n  \"fnHeaderCallback\": null,\n  /**\n   * The information element can be used to convey information about the current\n   * state of the table. Although the internationalisation options presented by\n   * DataTables are quite capable of dealing with most customisations, there may\n   * be times where you wish to customise the string further. This callback\n   * allows you to do exactly that.\n   */\n  \"fnInfoCallback\": null,\n  /**\n   * Called when the table has been initialised. Normally DataTables will\n   * initialise sequentially and there will be no need for this function,\n   * however, this does not hold true when using external language information\n   * since that is obtained using an async XHR call.\n   */\n  \"fnInitComplete\": null,\n  /**\n   * Called at the very start of each table draw and can be used to cancel the\n   * draw by returning false, any other return (including undefined) results in\n   * the full draw occurring).\n   */\n  \"fnPreDrawCallback\": null,\n  /**\n   * This function allows you to 'post process' each row after it have been\n   * generated for each table draw, but before it is rendered on screen. This\n   * function might be used for setting the row class name etc.\n   */\n  \"fnRowCallback\": null,\n  /**\n   * Load the table state. With this function you can define from where, and how, the\n   * state of a table is loaded. By default DataTables will load from `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   */\n  \"fnStateLoadCallback\": function (settings) {\n    try {\n      return JSON.parse((settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem('DataTables_' + settings.sInstance + '_' + location.pathname));\n    } catch (e) {\n      return {};\n    }\n  },\n  /**\n   * Callback which allows modification of the saved state prior to loading that state.\n   * This callback is called when the table is loading state from the stored data, but\n   * prior to the settings object being modified by the saved state. Note that for\n   * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n   * a plug-in.\n   */\n  \"fnStateLoadParams\": null,\n  /**\n   * Callback that is called when the state has been loaded from the state saving method\n   * and the DataTables settings object has been modified as a result of the loaded state.\n   */\n  \"fnStateLoaded\": null,\n  /**\n   * Save the table state. This function allows you to define where and how the state\n   * information for the table is stored By default DataTables will use `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   */\n  \"fnStateSaveCallback\": function (settings, data) {\n    try {\n      (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem('DataTables_' + settings.sInstance + '_' + location.pathname, JSON.stringify(data));\n    } catch (e) {\n      // noop\n    }\n  },\n  /**\n   * Callback which allows modification of the state to be saved. Called when the table\n   * has changed state a new state save is required. This method allows modification of\n   * the state saving object prior to actually doing the save, including addition or\n   * other state properties or modification. Note that for plug-in authors, you should\n   * use the `stateSaveParams` event to save parameters for a plug-in.\n   */\n  \"fnStateSaveParams\": null,\n  /**\n   * Duration for which the saved state information is considered valid. After this period\n   * has elapsed the state will be returned to the default.\n   * Value is given in seconds.\n   */\n  \"iStateDuration\": 7200,\n  /**\n   * Number of rows to display on a single page when using pagination. If\n   * feature enabled (`lengthChange`) then the end user will be able to override\n   * this to a custom setting using a pop-up menu.\n   */\n  \"iDisplayLength\": 10,\n  /**\n   * Define the starting point for data display when using DataTables with\n   * pagination. Note that this parameter is the number of records, rather than\n   * the page number, so if you have 10 records per page and want to start on\n   * the third page, it should be \"20\".\n   */\n  \"iDisplayStart\": 0,\n  /**\n   * By default DataTables allows keyboard navigation of the table (sorting, paging,\n   * and filtering) by adding a `tabindex` attribute to the required elements. This\n   * allows you to tab through the controls and press the enter key to activate them.\n   * The tabindex is default 0, meaning that the tab follows the flow of the document.\n   * You can overrule this using this parameter if you wish. Use a value of -1 to\n   * disable built-in keyboard navigation.\n   */\n  \"iTabIndex\": 0,\n  /**\n   * Classes that DataTables assigns to the various components and features\n   * that it adds to the HTML table. This allows classes to be configured\n   * during initialisation in addition to through the static\n   * {@link DataTable.ext.oStdClasses} object).\n   */\n  \"oClasses\": {},\n  /**\n   * All strings that DataTables uses in the user interface that it creates\n   * are defined in this object, allowing you to modified them individually or\n   * completely replace them all as required.\n   */\n  \"oLanguage\": {\n    /**\n     * Strings that are used for WAI-ARIA labels and controls only (these are not\n     * actually visible on the page, but will be read by screenreaders, and thus\n     * must be internationalised as well).\n     */\n    \"oAria\": {\n      /**\n       * ARIA label that is added to the table headers when the column may be sorted\n       */\n      \"orderable\": \": Activate to sort\",\n      /**\n       * ARIA label that is added to the table headers when the column is currently being sorted\n       */\n      \"orderableReverse\": \": Activate to invert sorting\",\n      /**\n       * ARIA label that is added to the table headers when the column is currently being \n       * sorted and next step is to remove sorting\n       */\n      \"orderableRemove\": \": Activate to remove sorting\",\n      paginate: {\n        first: 'First',\n        last: 'Last',\n        next: 'Next',\n        previous: 'Previous',\n        number: ''\n      }\n    },\n    /**\n     * Pagination string used by DataTables for the built-in pagination\n     * control types.\n     */\n    \"oPaginate\": {\n      /**\n       * Label and character for first page button («)\n       */\n      \"sFirst\": \"\\u00AB\",\n      /**\n       * Last page button (»)\n       */\n      \"sLast\": \"\\u00BB\",\n      /**\n       * Next page button (›)\n       */\n      \"sNext\": \"\\u203A\",\n      /**\n       * Previous page button (‹)\n       */\n      \"sPrevious\": \"\\u2039\"\n    },\n    /**\n     * Plural object for the data type the table is showing\n     */\n    entries: {\n      _: \"entries\",\n      1: \"entry\"\n    },\n    /**\n     * This string is shown in preference to `zeroRecords` when the table is\n     * empty of data (regardless of filtering). Note that this is an optional\n     * parameter - if it is not given, the value of `zeroRecords` will be used\n     * instead (either the default or given value).\n     */\n    \"sEmptyTable\": \"No data available in table\",\n    /**\n     * This string gives information to the end user about the information\n     * that is current on display on the page. The following tokens can be\n     * used in the string and will be dynamically replaced as the table\n     * display updates. This tokens can be placed anywhere in the string, or\n     * removed as needed by the language requires:\n     *\n     * * `\\_START\\_` - Display index of the first record on the current page\n     * * `\\_END\\_` - Display index of the last record on the current page\n     * * `\\_TOTAL\\_` - Number of records in the table after filtering\n     * * `\\_MAX\\_` - Number of records in the table without filtering\n     * * `\\_PAGE\\_` - Current page number\n     * * `\\_PAGES\\_` - Total number of pages of data in the table\n     */\n    \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n    /**\n     * Display information string for when the table is empty. Typically the\n     * format of this string should match `info`.\n     */\n    \"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n    /**\n     * When a user filters the information in a table, this string is appended\n     * to the information (`info`) to give an idea of how strong the filtering\n     * is. The variable _MAX_ is dynamically updated.\n     */\n    \"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n    /**\n     * If can be useful to append extra information to the info string at times,\n     * and this variable does exactly that. This information will be appended to\n     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n     * being used) at all times.\n     */\n    \"sInfoPostFix\": \"\",\n    /**\n     * This decimal place operator is a little different from the other\n     * language options since DataTables doesn't output floating point\n     * numbers, so it won't ever use this for display of a number. Rather,\n     * what this parameter does is modify the sort methods of the table so\n     * that numbers which are in a format which has a character other than\n     * a period (`.`) as a decimal place will be sorted numerically.\n     *\n     * Note that numbers with different decimal places cannot be shown in\n     * the same table and still be sortable, the table must be consistent.\n     * However, multiple different tables on the page can use different\n     * decimal place characters.\n     */\n    \"sDecimal\": \"\",\n    /**\n     * DataTables has a build in number formatter (`formatNumber`) which is\n     * used to format large numbers that are used in the table information.\n     * By default a comma is used, but this can be trivially changed to any\n     * character you wish with this parameter.\n     */\n    \"sThousands\": \",\",\n    /**\n     * Detail the action that will be taken when the drop down menu for the\n     * pagination length option is changed. The '_MENU_' variable is replaced\n     * with a default select list of 10, 25, 50 and 100, and can be replaced\n     * with a custom select box if required.\n     */\n    \"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n    /**\n     * When using Ajax sourced data and during the first draw when DataTables is\n     * gathering the data, this message is shown in an empty row in the table to\n     * indicate to the end user the the data is being loaded. Note that this\n     * parameter is not used when loading data by server-side processing, just\n     * Ajax sourced data with client-side processing.\n     */\n    \"sLoadingRecords\": \"Loading...\",\n    /**\n     * Text which is displayed when the table is processing a user action\n     * (usually a sort command or similar).\n     */\n    \"sProcessing\": \"\",\n    /**\n     * Details the actions that will be taken when the user types into the\n     * filtering input text box. The variable \"_INPUT_\", if used in the string,\n     * is replaced with the HTML text box for the filtering input allowing\n     * control over where it appears in the string. If \"_INPUT_\" is not given\n     * then the input box is appended to the string automatically.\n     */\n    \"sSearch\": \"Search:\",\n    /**\n     * Assign a `placeholder` attribute to the search `input` element\n     *  @type string\n     *  @default \n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.searchPlaceholder\n     */\n    \"sSearchPlaceholder\": \"\",\n    /**\n     * All of the language information can be stored in a file on the\n     * server-side, which DataTables will look up if this parameter is passed.\n     * It must store the URL of the language file, which is in a JSON format,\n     * and the object has the same properties as the oLanguage object in the\n     * initialiser object (i.e. the above parameters). Please refer to one of\n     * the example language files to see how this works in action.\n     */\n    \"sUrl\": \"\",\n    /**\n     * Text shown inside the table records when the is no information to be\n     * displayed after filtering. `emptyTable` is shown when there is simply no\n     * information in the table at all (regardless of filtering).\n     */\n    \"sZeroRecords\": \"No matching records found\"\n  },\n  /** The initial data order is reversed when `desc` ordering */\n  orderDescReverse: true,\n  /**\n   * This parameter allows you to have define the global filtering state at\n   * initialisation time. As an object the `search` parameter must be\n   * defined, but all other parameters are optional. When `regex` is true,\n   * the search string will be treated as a regular expression, when false\n   * (default) it will be treated as a straight string. When `smart`\n   * DataTables will use it's smart filtering methods (to word match at\n   * any point in the data), when false this will not be done.\n   */\n  \"oSearch\": $.extend({}, DataTable.models.oSearch),\n  /**\n   * Table and control layout. This replaces the legacy `dom` option.\n   */\n  layout: {\n    topStart: 'pageLength',\n    topEnd: 'search',\n    bottomStart: 'info',\n    bottomEnd: 'paging'\n  },\n  /**\n   * Legacy DOM layout option\n   */\n  \"sDom\": null,\n  /**\n   * Search delay option. This will throttle full table searches that use the\n   * DataTables provided search input element (it does not effect calls to\n   * `dt-api search()`, providing a delay before the search is made.\n   */\n  \"searchDelay\": null,\n  /**\n   * DataTables features six different built-in options for the buttons to\n   * display for pagination control:\n   *\n   * * `numbers` - Page number buttons only\n   * * `simple` - 'Previous' and 'Next' buttons only\n   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n   */\n  \"sPaginationType\": \"\",\n  /**\n   * Enable horizontal scrolling. When a table is too wide to fit into a\n   * certain layout, or you have a large number of columns in the table, you\n   * can enable x-scrolling to show the table in a viewport, which can be\n   * scrolled. This property can be `true` which will allow the table to\n   * scroll horizontally when needed, or any CSS unit, or a number (in which\n   * case it will be treated as a pixel measurement). Setting as simply `true`\n   * is recommended.\n   */\n  \"sScrollX\": \"\",\n  /**\n   * This property can be used to force a DataTable to use more width than it\n   * might otherwise do when x-scrolling is enabled. For example if you have a\n   * table which requires to be well spaced, this parameter is useful for\n   * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n   * any CSS unit, or a number (in which case it will be treated as a pixel\n   * measurement).\n   */\n  \"sScrollXInner\": \"\",\n  /**\n   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n   * to the given height, and enable scrolling for any data which overflows the\n   * current viewport. This can be used as an alternative to paging to display\n   * a lot of data in a small area (although paging and scrolling can both be\n   * enabled at the same time). This property can be any CSS unit, or a number\n   * (in which case it will be treated as a pixel measurement).\n   */\n  \"sScrollY\": \"\",\n  /**\n   * __Deprecated__ The functionality provided by this parameter has now been\n   * superseded by that provided through `ajax`, which should be used instead.\n   *\n   * Set the HTTP method that is used to make the Ajax call for server-side\n   * processing or Ajax sourced data.\n   */\n  \"sServerMethod\": \"GET\",\n  /**\n   * DataTables makes use of renderers when displaying HTML elements for\n   * a table. These renderers can be added or modified by plug-ins to\n   * generate suitable mark-up for a site. For example the Bootstrap\n   * integration plug-in for DataTables uses a paging button renderer to\n   * display pagination buttons in the mark-up required by Bootstrap.\n   *\n   * For further information about the renderers available see\n   * DataTable.ext.renderer\n   */\n  \"renderer\": null,\n  /**\n   * Set the data property name that DataTables should use to get a row's id\n   * to set as the `id` property in the node.\n   */\n  \"rowId\": \"DT_RowId\",\n  /**\n   * Caption value\n   */\n  \"caption\": null,\n  /**\n   * For server-side processing - use the data from the DOM for the first draw\n   */\n  iDeferLoading: null\n};\n_fnHungarianMap(DataTable.defaults);\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n  /**\n   * Define which column(s) an order will occur on for this column. This\n   * allows a column's ordering to take multiple columns into account when\n   * doing a sort or use the data from a different column. For example first\n   * name / last name columns make sense to do a multi-column sort over the\n   * two columns.\n   */\n  \"aDataSort\": null,\n  \"iDataSort\": -1,\n  ariaTitle: '',\n  /**\n   * You can control the default ordering direction, and even alter the\n   * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n   * using this parameter.\n   */\n  \"asSorting\": ['asc', 'desc', ''],\n  /**\n   * Enable or disable filtering on the data in this column.\n   */\n  \"bSearchable\": true,\n  /**\n   * Enable or disable ordering on this column.\n   */\n  \"bSortable\": true,\n  /**\n   * Enable or disable the display of this column.\n   */\n  \"bVisible\": true,\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   */\n  \"fnCreatedCell\": null,\n  /**\n   * This property can be used to read data from any data source property,\n   * including deeply nested objects / properties. `data` can be given in a\n   * number of different ways which effect its behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object. Note that\n   *      function notation is recommended for use in `render` rather than\n   *      `data` as it is much simpler to use as a renderer.\n   * * `null` - use the original data source for the row rather than plucking\n   *   data directly from it. This action has effects on two other\n   *   initialisation options:\n   *    * `defaultContent` - When null is given as the `data` option and\n   *      `defaultContent` is specified for the column, the value defined by\n   *      `defaultContent` will be used for the cell.\n   *    * `render` - When null is used for the `data` option and the `render`\n   *      option is specified for the column, the whole data source for the\n   *      row is used for the renderer.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * `{array|object}` The data source for the row\n   *      * `{string}` The type call data requested - this will be 'set' when\n   *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n   *        when gathering data. Note that when `undefined` is given for the\n   *        type DataTables expects to get the raw data for the object back<\n   *      * `{*}` Data to set when the second parameter is 'set'.\n   *    * Return:\n   *      * The return value from the function is not required when 'set' is\n   *        the type of call, but otherwise the return is what will be used\n   *        for the data requested.\n   *\n   * Note that `data` is a getter and setter option. If you just require\n   * formatting of data for output, you will likely want to use `render` which\n   * is simply a getter and thus simpler to use.\n   *\n   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n   * name change reflects the flexibility of this property and is consistent\n   * with the naming of mRender. If 'mDataProp' is given, then it will still\n   * be used by DataTables, as it automatically maps the old name to the new\n   * if required.\n   */\n  \"mData\": null,\n  /**\n   * This property is the rendering partner to `data` and it is suggested that\n   * when you want to manipulate data for display (including filtering,\n   * sorting etc) without altering the underlying data for the table, use this\n   * property. `render` can be considered to be the the read only companion to\n   * `data` which is read / write (then as such more complex). Like `data`\n   * this option can be given in a number of different ways to effect its\n   * behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object.\n   * * `object` - use different data for the different data types requested by\n   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n   *   of the object is the data type the property refers to and the value can\n   *   defined using an integer, string or function using the same rules as\n   *   `render` normally does. Note that an `_` option _must_ be specified.\n   *   This is the default value to use if you haven't specified a value for\n   *   the data type requested by DataTables.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * {array|object} The data source for the row (based on `data`)\n   *      * {string} The type call data requested - this will be 'filter',\n   *        'display', 'type' or 'sort'.\n   *      * {array|object} The full data source for the row (not based on\n   *        `data`)\n   *    * Return:\n   *      * The return value from the function is what will be used for the\n   *        data requested.\n   */\n  \"mRender\": null,\n  /**\n   * Change the cell type created for the column - either TD cells or TH cells. This\n   * can be useful as TH cells have semantic meaning in the table body, allowing them\n   * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n   */\n  \"sCellType\": \"td\",\n  /**\n   * Class to give to each cell in this column.\n   */\n  \"sClass\": \"\",\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   * Generally you shouldn't need this!\n   */\n  \"sContentPadding\": \"\",\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because `data`\n   * is set to null, or because the data source itself is null).\n   */\n  \"sDefaultContent\": null,\n  /**\n   * This parameter is only used in DataTables' server-side processing. It can\n   * be exceptionally useful to know what columns are being displayed on the\n   * client side, and to map these to database fields. When defined, the names\n   * also allow DataTables to reorder information from the server if it comes\n   * back in an unexpected order (i.e. if you switch your columns around on the\n   * client-side, your server-side code does not also need updating).\n   */\n  \"sName\": \"\",\n  /**\n   * Defines a data source type for the ordering which can be used to read\n   * real-time information from the table (updating the internally cached\n   * version) prior to ordering. This allows ordering to occur on user\n   * editable elements such as form inputs.\n   */\n  \"sSortDataType\": \"std\",\n  /**\n   * The title of this column.\n   */\n  \"sTitle\": null,\n  /**\n   * The type allows you to specify how the data for this column will be\n   * ordered. Four types (string, numeric, date and html (which will strip\n   * HTML tags before ordering)) are currently available. Note that only date\n   * formats understood by Javascript's Date() object will be accepted as type\n   * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n   * 'numeric', 'date' or 'html' (by default). Further types can be adding\n   * through plug-ins.\n   */\n  \"sType\": null,\n  /**\n   * Defining the width of the column, this parameter may take any CSS value\n   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n   * been given a specific width through this interface ensuring that the table\n   * remains readable.\n   */\n  \"sWidth\": null\n};\n_fnHungarianMap(DataTable.defaults.column);\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n */\nDataTable.models.oSettings = {\n  /**\n   * Primary features of DataTables and their enablement state.\n   */\n  \"oFeatures\": {\n    /**\n     * Flag to say if DataTables should automatically try to calculate the\n     * optimum table and columns widths (true) or not (false).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bAutoWidth\": null,\n    /**\n     * Delay the creation of TR and TD elements until they are actually\n     * needed by a driven page draw. This can give a significant speed\n     * increase for Ajax source and Javascript source data, but makes no\n     * difference at all for DOM and server-side processing tables.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bDeferRender\": null,\n    /**\n     * Enable filtering on the table or not. Note that if this is disabled\n     * then there is no filtering at all on the table, including fnFilter.\n     * To just remove the filtering input use sDom and remove the 'f' option.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bFilter\": null,\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    \"bInfo\": true,\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    \"bLengthChange\": true,\n    /**\n     * Pagination enabled or not. Note that if this is disabled then length\n     * changing must also be disabled.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bPaginate\": null,\n    /**\n     * Processing indicator enable flag whenever DataTables is enacting a\n     * user request - typically an Ajax request for server-side processing.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bProcessing\": null,\n    /**\n     * Server-side processing enabled flag - when enabled DataTables will\n     * get all data from the server for every draw - there is no filtering,\n     * sorting or paging done on the client-side.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bServerSide\": null,\n    /**\n     * Sorting enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSort\": null,\n    /**\n     * Multi-column sorting\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSortMulti\": null,\n    /**\n     * Apply a class to the columns which are being sorted to provide a\n     * visual highlight or not. This can slow things down when enabled since\n     * there is a lot of DOM interaction.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSortClasses\": null,\n    /**\n     * State saving enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bStateSave\": null\n  },\n  /**\n   * Scrolling settings for a table.\n   */\n  \"oScroll\": {\n    /**\n     * When the table is shorter in height than sScrollY, collapse the\n     * table container down to the height of the table (when true).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bCollapse\": null,\n    /**\n     * Width of the scrollbar for the web-browser's platform. Calculated\n     * during table initialisation.\n     */\n    \"iBarWidth\": 0,\n    /**\n     * Viewport width for horizontal scrolling. Horizontal scrolling is\n     * disabled if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"sX\": null,\n    /**\n     * Width to expand the table to when using x-scrolling. Typically you\n     * should not need to use this.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @deprecated\n     */\n    \"sXInner\": null,\n    /**\n     * Viewport height for vertical scrolling. Vertical scrolling is disabled\n     * if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"sY\": null\n  },\n  /**\n   * Language information for the table.\n   */\n  \"oLanguage\": {\n    /**\n     * Information callback function. See\n     * {@link DataTable.defaults.fnInfoCallback}\n     */\n    \"fnInfoCallback\": null\n  },\n  /**\n   * Browser support parameters\n   */\n  \"oBrowser\": {\n    /**\n     * Determine if the vertical scrollbar is on the right or left of the\n     * scrolling container - needed for rtl language layout, although not\n     * all browsers move the scrollbar (Safari).\n     */\n    \"bScrollbarLeft\": false,\n    /**\n     * Browser scrollbar width\n     */\n    \"barWidth\": 0\n  },\n  \"ajax\": null,\n  /**\n   * Array referencing the nodes which are used for the features. The\n   * parameters of this object match what is allowed by sDom - i.e.\n   *   <ul>\n   *     <li>'l' - Length changing</li>\n   *     <li>'f' - Filtering input</li>\n   *     <li>'t' - The table!</li>\n   *     <li>'i' - Information</li>\n   *     <li>'p' - Pagination</li>\n   *     <li>'r' - pRocessing</li>\n   *   </ul>\n   */\n  \"aanFeatures\": [],\n  /**\n   * Store data information - see {@link DataTable.models.oRow} for detailed\n   * information.\n   */\n  \"aoData\": [],\n  /**\n   * Array of indexes which are in the current display (after filtering etc)\n   */\n  \"aiDisplay\": [],\n  /**\n   * Array of indexes for display - no filtering\n   */\n  \"aiDisplayMaster\": [],\n  /**\n   * Map of row ids to data indexes\n   */\n  \"aIds\": {},\n  /**\n   * Store information about each column that is in use\n   */\n  \"aoColumns\": [],\n  /**\n   * Store information about the table's header\n   */\n  \"aoHeader\": [],\n  /**\n   * Store information about the table's footer\n   */\n  \"aoFooter\": [],\n  /**\n   * Store the applied global search information in case we want to force a\n   * research or compare the old search to a new one.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"oPreviousSearch\": {},\n  /**\n   * Store for named searches\n   */\n  searchFixed: {},\n  /**\n   * Store the applied search for each column - see\n   * {@link DataTable.models.oSearch} for the format that is used for the\n   * filtering information for each column.\n   */\n  \"aoPreSearchCols\": [],\n  /**\n   * Sorting that is applied to the table. Note that the inner arrays are\n   * used in the following manner:\n   * <ul>\n   *   <li>Index 0 - column number</li>\n   *   <li>Index 1 - current sorting direction</li>\n   * </ul>\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aaSorting\": null,\n  /**\n   * Sorting that is always applied to the table (i.e. prefixed in front of\n   * aaSorting).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aaSortingFixed\": [],\n  /**\n   * If restoring a table - we should restore its width\n   */\n  \"sDestroyWidth\": 0,\n  /**\n   * Callback functions array for every time a row is inserted (i.e. on a draw).\n   */\n  \"aoRowCallback\": [],\n  /**\n   * Callback functions for the header on each draw.\n   */\n  \"aoHeaderCallback\": [],\n  /**\n   * Callback function for the footer on each draw.\n   */\n  \"aoFooterCallback\": [],\n  /**\n   * Array of callback functions for draw callback functions\n   */\n  \"aoDrawCallback\": [],\n  /**\n   * Array of callback functions for row created function\n   */\n  \"aoRowCreatedCallback\": [],\n  /**\n   * Callback functions for just before the table is redrawn. A return of\n   * false will be used to cancel the draw.\n   */\n  \"aoPreDrawCallback\": [],\n  /**\n   * Callback functions for when the table has been initialised.\n   */\n  \"aoInitComplete\": [],\n  /**\n   * Callbacks for modifying the settings to be stored for state saving, prior to\n   * saving state.\n   */\n  \"aoStateSaveParams\": [],\n  /**\n   * Callbacks for modifying the settings that have been stored for state saving\n   * prior to using the stored values to restore the state.\n   */\n  \"aoStateLoadParams\": [],\n  /**\n   * Callbacks for operating on the settings object once the saved state has been\n   * loaded\n   */\n  \"aoStateLoaded\": [],\n  /**\n   * Cache the table ID for quick access\n   */\n  \"sTableId\": \"\",\n  /**\n   * The TABLE node for the main table\n   */\n  \"nTable\": null,\n  /**\n   * Permanent ref to the thead element\n   */\n  \"nTHead\": null,\n  /**\n   * Permanent ref to the tfoot element - if it exists\n   */\n  \"nTFoot\": null,\n  /**\n   * Permanent ref to the tbody element\n   */\n  \"nTBody\": null,\n  /**\n   * Cache the wrapper node (contains all DataTables controlled elements)\n   */\n  \"nTableWrapper\": null,\n  /**\n   * Indicate if all required information has been read in\n   */\n  \"bInitialised\": false,\n  /**\n   * Information about open rows. Each object in the array has the parameters\n   * 'nTr' and 'nParent'\n   */\n  \"aoOpenRows\": [],\n  /**\n   * Dictate the positioning of DataTables' control elements - see\n   * {@link DataTable.model.oInit.sDom}.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sDom\": null,\n  /**\n   * Search delay (in mS)\n   */\n  \"searchDelay\": null,\n  /**\n   * Which type of pagination should be used.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sPaginationType\": \"two_button\",\n  /**\n   * Number of paging controls on the page. Only used for backwards compatibility\n   */\n  pagingControls: 0,\n  /**\n   * The state duration (for `stateSave`) in seconds.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"iStateDuration\": 0,\n  /**\n   * Array of callback functions for state saving. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the JSON string to save that has been thus far created. Returns\n   *       a JSON string to be inserted into a json object\n   *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   */\n  \"aoStateSave\": [],\n  /**\n   * Array of callback functions for state loading. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the object stored. May return false to cancel state loading</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   */\n  \"aoStateLoad\": [],\n  /**\n   * State that was saved. Useful for back reference\n   */\n  \"oSavedState\": null,\n  /**\n   * State that was loaded. Useful for back reference\n   */\n  \"oLoadedState\": null,\n  /**\n   * Note if draw should be blocked while getting data\n   */\n  \"bAjaxDataGet\": true,\n  /**\n   * The last jQuery XHR object that was used for server-side data gathering.\n   * This can be used for working with the XHR information in one of the\n   * callbacks\n   */\n  \"jqXHR\": null,\n  /**\n   * JSON returned from the server in the last Ajax request\n   */\n  \"json\": undefined,\n  /**\n   * Data submitted as part of the last Ajax request\n   */\n  \"oAjaxData\": undefined,\n  /**\n   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n   * required).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sServerMethod\": null,\n  /**\n   * Format numbers for display.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"fnFormatNumber\": null,\n  /**\n   * List of options that can be used for the user selectable length menu.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aLengthMenu\": null,\n  /**\n   * Counter for the draws that the table does. Also used as a tracker for\n   * server-side processing\n   */\n  \"iDraw\": 0,\n  /**\n   * Indicate if a redraw is being done - useful for Ajax\n   */\n  \"bDrawing\": false,\n  /**\n   * Draw index (iDraw) of the last error when parsing the returned data\n   */\n  \"iDrawError\": -1,\n  /**\n   * Paging display length\n   */\n  \"_iDisplayLength\": 10,\n  /**\n   * Paging start point - aiDisplay index\n   */\n  \"_iDisplayStart\": 0,\n  /**\n   * Server-side processing - number of records in the result set\n   * (i.e. before filtering), Use fnRecordsTotal rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   */\n  \"_iRecordsTotal\": 0,\n  /**\n   * Server-side processing - number of records in the current display set\n   * (i.e. after filtering). Use fnRecordsDisplay rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   */\n  \"_iRecordsDisplay\": 0,\n  /**\n   * The classes to use for the table\n   */\n  \"oClasses\": {},\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if filtering has been done in the draw. Deprecated in favour of\n   * events.\n   *  @deprecated\n   */\n  \"bFiltered\": false,\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if sorting has been done in the draw. Deprecated in favour of\n   * events.\n   *  @deprecated\n   */\n  \"bSorted\": false,\n  /**\n   * Indicate that if multiple rows are in the header and there is more than\n   * one unique cell per column, if the top one (true) or bottom one (false)\n   * should be used for sorting / title by DataTables.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"bSortCellsTop\": null,\n  /**\n   * Initialisation object that is used for the table\n   */\n  \"oInit\": null,\n  /**\n   * Destroy callback functions - for plug-ins to attach themselves to the\n   * destroy so they can clean up markup and events.\n   */\n  \"aoDestroyCallback\": [],\n  /**\n   * Get the number of records in the current record set, before filtering\n   */\n  \"fnRecordsTotal\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;\n  },\n  /**\n   * Get the number of records in the current record set, after filtering\n   */\n  \"fnRecordsDisplay\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsDisplay * 1 : this.aiDisplay.length;\n  },\n  /**\n   * Get the display end point - aiDisplay index\n   */\n  \"fnDisplayEnd\": function () {\n    var len = this._iDisplayLength,\n      start = this._iDisplayStart,\n      calc = start + len,\n      records = this.aiDisplay.length,\n      features = this.oFeatures,\n      paginate = features.bPaginate;\n    if (features.bServerSide) {\n      return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay);\n    } else {\n      return !paginate || calc > records || len === -1 ? records : calc;\n    }\n  },\n  /**\n   * The DataTables object for this table\n   */\n  \"oInstance\": null,\n  /**\n   * Unique identifier for each instance of the DataTables object. If there\n   * is an ID on the table node, then it takes that value, otherwise an\n   * incrementing internal counter is used.\n   */\n  \"sInstance\": null,\n  /**\n   * tabindex attribute value that is added to DataTables control elements, allowing\n   * keyboard navigation of the table and its controls.\n   */\n  \"iTabIndex\": 0,\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollHead\": null,\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollFoot\": null,\n  /**\n   * Last applied sort\n   */\n  \"aLastSort\": [],\n  /**\n   * Stored plug-in instances\n   */\n  \"oPlugins\": {},\n  /**\n   * Function used to get a row's id from the row's data\n   */\n  \"rowIdFn\": null,\n  /**\n   * Data location where to store a row's id\n   */\n  \"rowId\": null,\n  caption: '',\n  captionNode: null,\n  colgroup: null,\n  /** Delay loading of data */\n  deferLoading: null,\n  /** Allow auto type detection */\n  typeDetect: true,\n  /** ResizeObserver for the container div */\n  resizeObserver: null,\n  /** Keep a record of the last size of the container, so we can skip duplicates */\n  containerWidth: 0\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\nvar extPagination = DataTable.ext.pager;\n\n// Paging buttons configuration\n$.extend(extPagination, {\n  simple: function () {\n    return ['previous', 'next'];\n  },\n  full: function () {\n    return ['first', 'previous', 'next', 'last'];\n  },\n  numbers: function () {\n    return ['numbers'];\n  },\n  simple_numbers: function () {\n    return ['previous', 'numbers', 'next'];\n  },\n  full_numbers: function () {\n    return ['first', 'previous', 'numbers', 'next', 'last'];\n  },\n  first_last: function () {\n    return ['first', 'last'];\n  },\n  first_last_numbers: function () {\n    return ['first', 'numbers', 'last'];\n  },\n  // For testing and plug-ins to use\n  _numbers: _pagingNumbers,\n  // Number of number buttons - legacy, use `numbers` option for paging feature\n  numbers_length: 7\n});\n$.extend(true, DataTable.ext.renderer, {\n  pagingButton: {\n    _: function (settings, buttonType, content, active, disabled) {\n      var classes = settings.oClasses.paging;\n      var btnClasses = [classes.button];\n      var btn;\n      if (active) {\n        btnClasses.push(classes.active);\n      }\n      if (disabled) {\n        btnClasses.push(classes.disabled);\n      }\n      if (buttonType === 'ellipsis') {\n        btn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n      } else {\n        btn = $('<button>', {\n          class: btnClasses.join(' '),\n          role: 'link',\n          type: 'button'\n        }).html(content);\n      }\n      return {\n        display: btn,\n        clicker: btn\n      };\n    }\n  },\n  pagingContainer: {\n    _: function (settings, buttons) {\n      // No wrapping element - just append directly to the host\n      return buttons;\n    }\n  }\n});\n\n// Common function to remove new lines, strip HTML and diacritic control\nvar _filterString = function (stripHtml, normalize) {\n  return function (str) {\n    if (_empty(str) || typeof str !== 'string') {\n      return str;\n    }\n    str = str.replace(_re_new_lines, \" \");\n    if (stripHtml) {\n      str = _stripHtml(str);\n    }\n    if (normalize) {\n      str = _normalize(str, false);\n    }\n    return str;\n  };\n};\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\n/**\n * Common logic for moment, luxon or a date action.\n *\n * Happens after __mldObj, so don't need to call `resolveWindowsLibs` again\n */\nfunction __mld(dtLib, momentFn, luxonFn, dateFn, arg1) {\n  if (__moment) {\n    return dtLib[momentFn](arg1);\n  } else if (__luxon) {\n    return dtLib[luxonFn](arg1);\n  }\n  return dateFn ? dtLib[dateFn](arg1) : dtLib;\n}\nvar __mlWarning = false;\nvar __luxon; // Can be assigned in DateTable.use()\nvar __moment; // Can be assigned in DateTable.use()\n\n/**\n * \n */\nfunction resolveWindowLibs() {\n  if (window.luxon && !__luxon) {\n    __luxon = window.luxon;\n  }\n  if (window.moment && !__moment) {\n    __moment = window.moment;\n  }\n}\nfunction __mldObj(d, format, locale) {\n  var dt;\n  resolveWindowLibs();\n  if (__moment) {\n    dt = __moment.utc(d, format, locale, true);\n    if (!dt.isValid()) {\n      return null;\n    }\n  } else if (__luxon) {\n    dt = format && typeof d === 'string' ? __luxon.DateTime.fromFormat(d, format) : __luxon.DateTime.fromISO(d);\n    if (!dt.isValid) {\n      return null;\n    }\n    dt = dt.setLocale(locale);\n  } else if (!format) {\n    // No format given, must be ISO\n    dt = new Date(d);\n  } else {\n    if (!__mlWarning) {\n      alert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n    }\n    __mlWarning = true;\n  }\n  return dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper(localeString) {\n  return function (from, to, locale, def) {\n    // Luxon and Moment support\n    // Argument shifting\n    if (arguments.length === 0) {\n      locale = 'en';\n      to = null; // means toLocaleString\n      from = null; // means iso8601\n    } else if (arguments.length === 1) {\n      locale = 'en';\n      to = from;\n      from = null;\n    } else if (arguments.length === 2) {\n      locale = to;\n      to = from;\n      from = null;\n    }\n    var typeName = 'datetime' + (to ? '-' + to : '');\n\n    // Add type detection and sorting specific to this date format - we need to be able to identify\n    // date type columns as such, rather than as numbers in extensions. Hence the need for this.\n    if (!DataTable.ext.type.order[typeName + '-pre']) {\n      DataTable.type(typeName, {\n        detect: function (d) {\n          // The renderer will give the value to type detect as the type!\n          return d === typeName ? typeName : false;\n        },\n        order: {\n          pre: function (d) {\n            // The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n            // `valueOf` which gives milliseconds epoch\n            return d.valueOf();\n          }\n        },\n        className: 'dt-right'\n      });\n    }\n    return function (d, type) {\n      // Allow for a default value\n      if (d === null || d === undefined) {\n        if (def === '--now') {\n          // We treat everything as UTC further down, so no changes are\n          // made, as such need to get the local date / time as if it were\n          // UTC\n          var local = new Date();\n          d = new Date(Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds()));\n        } else {\n          d = '';\n        }\n      }\n      if (type === 'type') {\n        // Typing uses the type name for fast matching\n        return typeName;\n      }\n      if (d === '') {\n        return type !== 'sort' ? '' : __mldObj('0000-01-01 00:00:00', null, locale);\n      }\n\n      // Shortcut. If `from` and `to` are the same, we are using the renderer to\n      // format for ordering, not display - its already in the display format.\n      if (to !== null && from === to && type !== 'sort' && type !== 'type' && !(d instanceof Date)) {\n        return d;\n      }\n      var dt = __mldObj(d, from, locale);\n      if (dt === null) {\n        return d;\n      }\n      if (type === 'sort') {\n        return dt;\n      }\n      var formatted = to === null ? __mld(dt, 'toDate', 'toJSDate', '')[localeString]() : __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n      // XSS protection\n      return type === 'display' ? _escapeHtml(formatted) : formatted;\n    };\n  };\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\nif (window.Intl !== undefined) {\n  try {\n    var num = new Intl.NumberFormat().formatToParts(100000.1);\n    for (var i = 0; i < num.length; i++) {\n      if (num[i].type === 'group') {\n        __thousands = num[i].value;\n      } else if (num[i].type === 'decimal') {\n        __decimal = num[i].value;\n      }\n    }\n  } catch (e) {\n    // noop\n  }\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function (format, locale) {\n  var typeName = 'datetime-' + format;\n  if (!locale) {\n    locale = 'en';\n  }\n  if (!DataTable.ext.type.order[typeName]) {\n    DataTable.type(typeName, {\n      detect: function (d) {\n        var dt = __mldObj(d, format, locale);\n        return d === '' || dt ? typeName : false;\n      },\n      order: {\n        pre: function (d) {\n          return __mldObj(d, format, locale) || 0;\n        }\n      },\n      className: 'dt-right'\n    });\n  }\n};\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\n * This renderer has three overloads:\n *   * 1 parameter:\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n *   * 2 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to. Assumes `en` locale\n *   * 3 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to\n *     * `string` - Locale\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n  date: __mlHelper('toLocaleDateString'),\n  datetime: __mlHelper('toLocaleString'),\n  time: __mlHelper('toLocaleTimeString'),\n  number: function (thousands, decimal, precision, prefix, postfix) {\n    // Auto locale detection\n    if (thousands === null || thousands === undefined) {\n      thousands = __thousands;\n    }\n    if (decimal === null || decimal === undefined) {\n      decimal = __decimal;\n    }\n    return {\n      display: function (d) {\n        if (typeof d !== 'number' && typeof d !== 'string') {\n          return d;\n        }\n        if (d === '' || d === null) {\n          return d;\n        }\n        var negative = d < 0 ? '-' : '';\n        var flo = parseFloat(d);\n        var abs = Math.abs(flo);\n\n        // Scientific notation for large and small numbers\n        if (abs >= 100000000000 || abs < 0.0001 && abs !== 0) {\n          var exp = flo.toExponential(precision).split(/e\\+?/);\n          return exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n        }\n\n        // If NaN then there isn't much formatting that we can do - just\n        // return immediately, escaping any HTML (this was supposed to\n        // be a number after all)\n        if (isNaN(flo)) {\n          return _escapeHtml(d);\n        }\n        flo = flo.toFixed(precision);\n        d = Math.abs(flo);\n        var intPart = parseInt(d, 10);\n        var floatPart = precision ? decimal + (d - intPart).toFixed(precision).substring(2) : '';\n\n        // If zero, then can't have a negative prefix\n        if (intPart === 0 && parseFloat(floatPart) === 0) {\n          negative = '';\n        }\n        return negative + (prefix || '') + intPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands) + floatPart + (postfix || '');\n      }\n    };\n  },\n  text: function () {\n    return {\n      display: _escapeHtml,\n      filter: _escapeHtml\n    };\n  }\n};\nvar _extTypes = DataTable.ext.type;\n\n// Get / set type\nDataTable.type = function (name, prop, val) {\n  if (!prop) {\n    return {\n      className: _extTypes.className[name],\n      detect: _extTypes.detect.find(function (fn) {\n        return fn._name === name;\n      }),\n      order: {\n        pre: _extTypes.order[name + '-pre'],\n        asc: _extTypes.order[name + '-asc'],\n        desc: _extTypes.order[name + '-desc']\n      },\n      render: _extTypes.render[name],\n      search: _extTypes.search[name]\n    };\n  }\n  var setProp = function (prop, propVal) {\n    _extTypes[prop][name] = propVal;\n  };\n  var setDetect = function (detect) {\n    // `detect` can be a function or an object - we set a name\n    // property for either - that is used for the detection\n    Object.defineProperty(detect, \"_name\", {\n      value: name\n    });\n    var idx = _extTypes.detect.findIndex(function (item) {\n      return item._name === name;\n    });\n    if (idx === -1) {\n      _extTypes.detect.unshift(detect);\n    } else {\n      _extTypes.detect.splice(idx, 1, detect);\n    }\n  };\n  var setOrder = function (obj) {\n    _extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n    _extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n    _extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n  };\n\n  // prop is optional\n  if (val === undefined) {\n    val = prop;\n    prop = null;\n  }\n  if (prop === 'className') {\n    setProp('className', val);\n  } else if (prop === 'detect') {\n    setDetect(val);\n  } else if (prop === 'order') {\n    setOrder(val);\n  } else if (prop === 'render') {\n    setProp('render', val);\n  } else if (prop === 'search') {\n    setProp('search', val);\n  } else if (!prop) {\n    if (val.className) {\n      setProp('className', val.className);\n    }\n    if (val.detect !== undefined) {\n      setDetect(val.detect);\n    }\n    if (val.order) {\n      setOrder(val.order);\n    }\n    if (val.render !== undefined) {\n      setProp('render', val.render);\n    }\n    if (val.search !== undefined) {\n      setProp('search', val.search);\n    }\n  }\n};\n\n// Get a list of types\nDataTable.types = function () {\n  return _extTypes.detect.map(function (fn) {\n    return fn._name;\n  });\n};\nvar __diacriticSort = function (a, b) {\n  a = a !== null && a !== undefined ? a.toString().toLowerCase() : '';\n  b = b !== null && b !== undefined ? b.toString().toLowerCase() : '';\n\n  // Checked for `navigator.languages` support in `oneOf` so this code can't execute in old\n  // Safari and thus can disable this check\n  // eslint-disable-next-line compat/compat\n  return a.localeCompare(b, navigator.languages[0] || navigator.language, {\n    numeric: true,\n    ignorePunctuation: true\n  });\n};\nvar __diacriticHtmlSort = function (a, b) {\n  a = _stripHtml(a);\n  b = _stripHtml(b);\n  return __diacriticSort(a, b);\n};\n\n//\n// Built in data types\n//\n\nDataTable.type('string', {\n  detect: function () {\n    return 'string';\n  },\n  order: {\n    pre: function (a) {\n      // This is a little complex, but faster than always calling toString,\n      // http://jsperf.com/tostring-v-check\n      return _empty(a) && typeof a !== 'boolean' ? '' : typeof a === 'string' ? a.toLowerCase() : !a.toString ? '' : a.toString();\n    }\n  },\n  search: _filterString(false, true)\n});\nDataTable.type('string-utf8', {\n  detect: {\n    allOf: function (d) {\n      return true;\n    },\n    oneOf: function (d) {\n      // At least one data point must contain a non-ASCII character\n      // This line will also check if navigator.languages is supported or not. If not (Safari 10.0-)\n      // this data type won't be supported.\n      // eslint-disable-next-line compat/compat\n      return !_empty(d) && navigator.languages && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n    }\n  },\n  order: {\n    asc: __diacriticSort,\n    desc: function (a, b) {\n      return __diacriticSort(a, b) * -1;\n    }\n  },\n  search: _filterString(false, true)\n});\nDataTable.type('html', {\n  detect: {\n    allOf: function (d) {\n      return _empty(d) || typeof d === 'string' && d.indexOf('<') !== -1;\n    },\n    oneOf: function (d) {\n      // At least one data point must contain a `<`\n      return !_empty(d) && typeof d === 'string' && d.indexOf('<') !== -1;\n    }\n  },\n  order: {\n    pre: function (a) {\n      return _empty(a) ? '' : a.replace ? _stripHtml(a).trim().toLowerCase() : a + '';\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('html-utf8', {\n  detect: {\n    allOf: function (d) {\n      return _empty(d) || typeof d === 'string' && d.indexOf('<') !== -1;\n    },\n    oneOf: function (d) {\n      // At least one data point must contain a `<` and a non-ASCII character\n      // eslint-disable-next-line compat/compat\n      return navigator.languages && !_empty(d) && typeof d === 'string' && d.indexOf('<') !== -1 && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n    }\n  },\n  order: {\n    asc: __diacriticHtmlSort,\n    desc: function (a, b) {\n      return __diacriticHtmlSort(a, b) * -1;\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('date', {\n  className: 'dt-type-date',\n  detect: {\n    allOf: function (d) {\n      // V8 tries _very_ hard to make a string passed into `Date.parse()`\n      // valid, so we need to use a regex to restrict date formats. Use a\n      // plug-in for anything other than ISO8601 style strings\n      if (d && !(d instanceof Date) && !_re_date.test(d)) {\n        return null;\n      }\n      var parsed = Date.parse(d);\n      return parsed !== null && !isNaN(parsed) || _empty(d);\n    },\n    oneOf: function (d) {\n      // At least one entry must be a date or a string with a date\n      return d instanceof Date || typeof d === 'string' && _re_date.test(d);\n    }\n  },\n  order: {\n    pre: function (d) {\n      var ts = Date.parse(d);\n      return isNaN(ts) ? -Infinity : ts;\n    }\n  }\n});\nDataTable.type('html-num-fmt', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, true, false);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, true, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_html, _re_formatted_numeric);\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('html-num', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, false, true);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, false, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_html);\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('num-fmt', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, true, true);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, true, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_formatted_numeric);\n    }\n  }\n});\nDataTable.type('num', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, false, true);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, false, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp);\n    }\n  }\n});\nvar __numericReplace = function (d, decimalPlace, re1, re2) {\n  if (d !== 0 && (!d || d === '-')) {\n    return -Infinity;\n  }\n  var type = typeof d;\n  if (type === 'number' || type === 'bigint') {\n    return d;\n  }\n\n  // If a decimal place other than `.` is used, it needs to be given to the\n  // function so we can detect it and replace with a `.` which is the only\n  // decimal place Javascript recognises - it is not locale aware.\n  if (decimalPlace) {\n    d = _numToDecimal(d, decimalPlace);\n  }\n  if (d.replace) {\n    if (re1) {\n      d = d.replace(re1, '');\n    }\n    if (re2) {\n      d = d.replace(re2, '');\n    }\n  }\n  return d * 1;\n};\n$.extend(true, DataTable.ext.renderer, {\n  footer: {\n    _: function (settings, cell, classes) {\n      cell.addClass(classes.tfoot.cell);\n    }\n  },\n  header: {\n    _: function (settings, cell, classes) {\n      cell.addClass(classes.thead.cell);\n      if (!settings.oFeatures.bSort) {\n        cell.addClass(classes.order.none);\n      }\n      var legacyTop = settings.bSortCellsTop;\n      var headerRows = cell.closest('thead').find('tr');\n      var rowIdx = cell.parent().index();\n\n      // Conditions to not apply the ordering icons\n      if (\n      // Cells and rows which have the attribute to disable the icons\n      cell.attr('data-dt-order') === 'disable' || cell.parent().attr('data-dt-order') === 'disable' ||\n      // Legacy support for `orderCellsTop`. If it is set, then cells\n      // which are not in the top or bottom row of the header (depending\n      // on the value) do not get the sorting classes applied to them\n      legacyTop === true && rowIdx !== 0 || legacyTop === false && rowIdx !== headerRows.length - 1) {\n        return;\n      }\n\n      // No additional mark-up required\n      // Attach a sort listener to update on sort - note that using the\n      // `DT` namespace will allow the event to be removed automatically\n      // on destroy, while the `dt` namespaced event is the one we are\n      // listening for\n      $(settings.nTable).on('order.dt.DT column-visibility.dt.DT', function (e, ctx) {\n        if (settings !== ctx) {\n          // need to check this this is the host\n          return; // table, not a nested one\n        }\n        var sorting = ctx.sortDetails;\n        if (!sorting) {\n          return;\n        }\n        var i;\n        var orderClasses = classes.order;\n        var columns = ctx.api.columns(cell);\n        var col = settings.aoColumns[columns.flatten()[0]];\n        var orderable = columns.orderable().includes(true);\n        var ariaType = '';\n        var indexes = columns.indexes();\n        var sortDirs = columns.orderable(true).flatten();\n        var orderedColumns = _pluck(sorting, 'col');\n        var tabIndex = settings.iTabIndex;\n        cell.removeClass(orderClasses.isAsc + ' ' + orderClasses.isDesc).toggleClass(orderClasses.none, !orderable).toggleClass(orderClasses.canAsc, orderable && sortDirs.includes('asc')).toggleClass(orderClasses.canDesc, orderable && sortDirs.includes('desc'));\n\n        // Determine if all of the columns that this cell covers are included in the\n        // current ordering\n        var isOrdering = true;\n        for (i = 0; i < indexes.length; i++) {\n          if (!orderedColumns.includes(indexes[i])) {\n            isOrdering = false;\n          }\n        }\n        if (isOrdering) {\n          // Get the ordering direction for the columns under this cell\n          // Note that it is possible for a cell to be asc and desc sorting\n          // (column spanning cells)\n          var orderDirs = columns.order();\n          cell.addClass(orderDirs.includes('asc') ? orderClasses.isAsc : '' + orderDirs.includes('desc') ? orderClasses.isDesc : '');\n        }\n\n        // Find the first visible column that has ordering applied to it - it get's\n        // the aria information, as the ARIA spec says that only one column should\n        // be marked with aria-sort\n        var firstVis = -1; // column index\n\n        for (i = 0; i < orderedColumns.length; i++) {\n          if (settings.aoColumns[orderedColumns[i]].bVisible) {\n            firstVis = orderedColumns[i];\n            break;\n          }\n        }\n        if (indexes[0] == firstVis) {\n          var firstSort = sorting[0];\n          var sortOrder = col.asSorting;\n          cell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\n\n          // Determine if the next click will remove sorting or change the sort\n          ariaType = !sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n        } else {\n          cell.removeAttr('aria-sort');\n        }\n        cell.attr('aria-label', orderable ? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType) : col.ariaTitle);\n\n        // Make the headers tab-able for keyboard navigation\n        if (orderable) {\n          var orderSpan = cell.find('.dt-column-order');\n          orderSpan.attr('role', 'button');\n          if (tabIndex !== -1) {\n            orderSpan.attr('tabindex', tabIndex);\n          }\n        }\n      });\n    }\n  },\n  layout: {\n    _: function (settings, container, items) {\n      var classes = settings.oClasses.layout;\n      var row = $('<div/>').attr('id', items.id || null).addClass(items.className || classes.row).appendTo(container);\n      DataTable.ext.renderer.layout._forLayoutRow(items, function (key, val) {\n        if (key === 'id' || key === 'className') {\n          return;\n        }\n        var klass = '';\n        if (val.table) {\n          row.addClass(classes.tableRow);\n          klass += classes.tableCell + ' ';\n        }\n        if (key === 'start') {\n          klass += classes.start;\n        } else if (key === 'end') {\n          klass += classes.end;\n        } else {\n          klass += classes.full;\n        }\n        $('<div/>').attr({\n          id: val.id || null,\n          \"class\": val.className ? val.className : classes.cell + ' ' + klass\n        }).append(val.contents).appendTo(row);\n      });\n    },\n    // Shared for use by the styling frameworks\n    _forLayoutRow: function (items, fn) {\n      // As we are inserting dom elements, we need start / end in a\n      // specific order, this function is used for sorting the layout\n      // keys.\n      var layoutEnum = function (x) {\n        switch (x) {\n          case '':\n            return 0;\n          case 'start':\n            return 1;\n          case 'end':\n            return 2;\n          default:\n            return 3;\n        }\n      };\n      Object.keys(items).sort(function (a, b) {\n        return layoutEnum(a) - layoutEnum(b);\n      }).forEach(function (key) {\n        fn(key, items[key]);\n      });\n    }\n  }\n});\nDataTable.feature = {};\n\n// Third parameter is internal only!\nDataTable.feature.register = function (name, cb, legacy) {\n  DataTable.ext.features[name] = cb;\n  if (legacy) {\n    _ext.feature.push({\n      cFeature: legacy,\n      fnInit: cb\n    });\n  }\n};\nfunction _divProp(el, prop, val) {\n  if (val) {\n    el[prop] = val;\n  }\n}\nDataTable.feature.register('div', function (settings, opts) {\n  var n = $('<div>')[0];\n  if (opts) {\n    _divProp(n, 'className', opts.className);\n    _divProp(n, 'id', opts.id);\n    _divProp(n, 'innerHTML', opts.html);\n    _divProp(n, 'textContent', opts.text);\n  }\n  return n;\n});\nDataTable.feature.register('info', function (settings, opts) {\n  // For compatibility with the legacy `info` top level option\n  if (!settings.oFeatures.bInfo) {\n    return null;\n  }\n  var lang = settings.oLanguage,\n    tid = settings.sTableId,\n    n = $('<div/>', {\n      'class': settings.oClasses.info.container\n    });\n  opts = $.extend({\n    callback: lang.fnInfoCallback,\n    empty: lang.sInfoEmpty,\n    postfix: lang.sInfoPostFix,\n    search: lang.sInfoFiltered,\n    text: lang.sInfo\n  }, opts);\n\n  // Update display on each draw\n  settings.aoDrawCallback.push(function (s) {\n    _fnUpdateInfo(s, opts, n);\n  });\n\n  // For the first info display in the table, we add a callback and aria information.\n  if (!settings._infoEl) {\n    n.attr({\n      'aria-live': 'polite',\n      id: tid + '_info',\n      role: 'status'\n    });\n\n    // Table is described by our info div\n    $(settings.nTable).attr('aria-describedby', tid + '_info');\n    settings._infoEl = n;\n  }\n  return n;\n}, 'i');\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo(settings, opts, node) {\n  var start = settings._iDisplayStart + 1,\n    end = settings.fnDisplayEnd(),\n    max = settings.fnRecordsTotal(),\n    total = settings.fnRecordsDisplay(),\n    out = total ? opts.text : opts.empty;\n  if (total !== max) {\n    // Record set after filtering\n    out += ' ' + opts.search;\n  }\n\n  // Convert the macros\n  out += opts.postfix;\n  out = _fnMacros(settings, out);\n  if (opts.callback) {\n    out = opts.callback.call(settings.oInstance, settings, start, end, max, total, out);\n  }\n  node.html(out);\n  _fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n}\nvar __searchCounter = 0;\n\n// opts\n// - text\n// - placeholder\nDataTable.feature.register('search', function (settings, opts) {\n  // Don't show the input if filtering isn't available on the table\n  if (!settings.oFeatures.bFilter) {\n    return null;\n  }\n  var classes = settings.oClasses.search;\n  var tableId = settings.sTableId;\n  var language = settings.oLanguage;\n  var previousSearch = settings.oPreviousSearch;\n  var input = '<input type=\"search\" class=\"' + classes.input + '\"/>';\n  opts = $.extend({\n    placeholder: language.sSearchPlaceholder,\n    processing: false,\n    text: language.sSearch\n  }, opts);\n\n  // The _INPUT_ is optional - is appended if not present\n  if (opts.text.indexOf('_INPUT_') === -1) {\n    opts.text += '_INPUT_';\n  }\n  opts.text = _fnMacros(settings, opts.text);\n\n  // We can put the <input> outside of the label if it is at the start or end\n  // which helps improve accessability (not all screen readers like implicit\n  // for elements).\n  var end = opts.text.match(/_INPUT_$/);\n  var start = opts.text.match(/^_INPUT_/);\n  var removed = opts.text.replace(/_INPUT_/, '');\n  var str = '<label>' + opts.text + '</label>';\n  if (start) {\n    str = '_INPUT_<label>' + removed + '</label>';\n  } else if (end) {\n    str = '<label>' + removed + '</label>_INPUT_';\n  }\n  var filter = $('<div>').addClass(classes.container).append(str.replace(/_INPUT_/, input));\n\n  // add for and id to label and input\n  filter.find('label').attr('for', 'dt-search-' + __searchCounter);\n  filter.find('input').attr('id', 'dt-search-' + __searchCounter);\n  __searchCounter++;\n  var searchFn = function (event) {\n    var val = this.value;\n    if (previousSearch.return && event.key !== \"Enter\") {\n      return;\n    }\n\n    /* Now do the filter */\n    if (val != previousSearch.search) {\n      _fnProcessingRun(settings, opts.processing, function () {\n        previousSearch.search = val;\n        _fnFilterComplete(settings, previousSearch);\n\n        // Need to redraw, without resorting\n        settings._iDisplayStart = 0;\n        _fnDraw(settings);\n      });\n    }\n  };\n  var searchDelay = settings.searchDelay !== null ? settings.searchDelay : 0;\n  var jqFilter = $('input', filter).val(previousSearch.search).attr('placeholder', opts.placeholder).on('keyup.DT search.DT input.DT paste.DT cut.DT', searchDelay ? DataTable.util.debounce(searchFn, searchDelay) : searchFn).on('mouseup.DT', function (e) {\n    // Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n    // on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n    // checks the value to see if it has changed. In other browsers it won't have.\n    setTimeout(function () {\n      searchFn.call(jqFilter[0], e);\n    }, 10);\n  }).on('keypress.DT', function (e) {\n    /* Prevent form submission */\n    if (e.keyCode == 13) {\n      return false;\n    }\n  }).attr('aria-controls', tableId);\n\n  // Update the input elements whenever the table is filtered\n  $(settings.nTable).on('search.dt.DT', function (ev, s) {\n    if (settings === s && jqFilter[0] !== document.activeElement) {\n      jqFilter.val(typeof previousSearch.search !== 'function' ? previousSearch.search : '');\n    }\n  });\n  return filter;\n}, 'f');\n\n// opts\n// - type - button configuration\n// - buttons - number of buttons to show - must be odd\nDataTable.feature.register('paging', function (settings, opts) {\n  // Don't show the paging input if the table doesn't have paging enabled\n  if (!settings.oFeatures.bPaginate) {\n    return null;\n  }\n  opts = $.extend({\n    buttons: DataTable.ext.pager.numbers_length,\n    type: settings.sPaginationType,\n    boundaryNumbers: true,\n    firstLast: true,\n    previousNext: true,\n    numbers: true\n  }, opts);\n  var host = $('<div/>').addClass(settings.oClasses.paging.container + (opts.type ? ' paging_' + opts.type : '')).append($('<nav>').attr('aria-label', 'pagination').addClass(settings.oClasses.paging.nav));\n  var draw = function () {\n    _pagingDraw(settings, host.children(), opts);\n  };\n  settings.aoDrawCallback.push(draw);\n\n  // Responsive redraw of paging control\n  $(settings.nTable).on('column-sizing.dt.DT', draw);\n  return host;\n}, 'p');\n\n/**\n * Dynamically create the button type array based on the configuration options.\n * This will only happen if the paging type is not defined.\n */\nfunction _pagingDynamic(opts) {\n  var out = [];\n  if (opts.numbers) {\n    out.push('numbers');\n  }\n  if (opts.previousNext) {\n    out.unshift('previous');\n    out.push('next');\n  }\n  if (opts.firstLast) {\n    out.unshift('first');\n    out.push('last');\n  }\n  return out;\n}\nfunction _pagingDraw(settings, host, opts) {\n  if (!settings._bInitComplete) {\n    return;\n  }\n  var plugin = opts.type ? DataTable.ext.pager[opts.type] : _pagingDynamic,\n    aria = settings.oLanguage.oAria.paginate || {},\n    start = settings._iDisplayStart,\n    len = settings._iDisplayLength,\n    visRecords = settings.fnRecordsDisplay(),\n    all = len === -1,\n    page = all ? 0 : Math.ceil(start / len),\n    pages = all ? 1 : Math.ceil(visRecords / len),\n    buttons = [],\n    buttonEls = [],\n    buttonsNested = plugin(opts).map(function (val) {\n      return val === 'numbers' ? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers) : val;\n    });\n\n  // .flat() would be better, but not supported in old Safari\n  buttons = buttons.concat.apply(buttons, buttonsNested);\n  for (var i = 0; i < buttons.length; i++) {\n    var button = buttons[i];\n    var btnInfo = _pagingButtonInfo(settings, button, page, pages);\n    var btn = _fnRenderer(settings, 'pagingButton')(settings, button, btnInfo.display, btnInfo.active, btnInfo.disabled);\n    var ariaLabel = typeof button === 'string' ? aria[button] : aria.number ? aria.number + (button + 1) : null;\n\n    // Common attributes\n    $(btn.clicker).attr({\n      'aria-controls': settings.sTableId,\n      'aria-disabled': btnInfo.disabled ? 'true' : null,\n      'aria-current': btnInfo.active ? 'page' : null,\n      'aria-label': ariaLabel,\n      'data-dt-idx': button,\n      'tabIndex': btnInfo.disabled ? -1 : settings.iTabIndex && btn.clicker[0].nodeName.toLowerCase() !== 'span' ? settings.iTabIndex : null // `0` doesn't need a tabIndex since it is the default\n    });\n    if (typeof button !== 'number') {\n      $(btn.clicker).addClass(button);\n    }\n    _fnBindAction(btn.clicker, {\n      action: button\n    }, function (e) {\n      e.preventDefault();\n      _fnPageChange(settings, e.data.action, true);\n    });\n    buttonEls.push(btn.display);\n  }\n  var wrapped = _fnRenderer(settings, 'pagingContainer')(settings, buttonEls);\n  var activeEl = host.find(document.activeElement).data('dt-idx');\n  host.empty().append(wrapped);\n  if (activeEl !== undefined) {\n    host.find('[data-dt-idx=' + activeEl + ']').trigger('focus');\n  }\n\n  // Responsive - check if the buttons are over two lines based on the\n  // height of the buttons and the container.\n  if (buttonEls.length) {\n    var outerHeight = $(buttonEls[0]).outerHeight();\n    if (opts.buttons > 1 &&\n    // prevent infinite\n    outerHeight > 0 &&\n    // will be 0 if hidden\n    $(host).height() >= outerHeight * 2 - 10) {\n      _pagingDraw(settings, host, $.extend({}, opts, {\n        buttons: opts.buttons - 2\n      }));\n    }\n  }\n}\n\n/**\n * Get properties for a button based on the current paging state of the table\n *\n * @param {*} settings DT settings object\n * @param {*} button The button type in question\n * @param {*} page Table's current page\n * @param {*} pages Number of pages\n * @returns Info object\n */\nfunction _pagingButtonInfo(settings, button, page, pages) {\n  var lang = settings.oLanguage.oPaginate;\n  var o = {\n    display: '',\n    active: false,\n    disabled: false\n  };\n  switch (button) {\n    case 'ellipsis':\n      o.display = '&#x2026;';\n      break;\n    case 'first':\n      o.display = lang.sFirst;\n      if (page === 0) {\n        o.disabled = true;\n      }\n      break;\n    case 'previous':\n      o.display = lang.sPrevious;\n      if (page === 0) {\n        o.disabled = true;\n      }\n      break;\n    case 'next':\n      o.display = lang.sNext;\n      if (pages === 0 || page === pages - 1) {\n        o.disabled = true;\n      }\n      break;\n    case 'last':\n      o.display = lang.sLast;\n      if (pages === 0 || page === pages - 1) {\n        o.disabled = true;\n      }\n      break;\n    default:\n      if (typeof button === 'number') {\n        o.display = settings.fnFormatNumber(button + 1);\n        if (page === button) {\n          o.active = true;\n        }\n      }\n      break;\n  }\n  return o;\n}\n\n/**\n * Compute what number buttons to show in the paging control\n *\n * @param {*} page Current page\n * @param {*} pages Total number of pages\n * @param {*} buttons Target number of number buttons\n * @param {boolean} addFirstLast Indicate if page 1 and end should be included\n * @returns Buttons to show\n */\nfunction _pagingNumbers(page, pages, buttons, addFirstLast) {\n  var numbers = [],\n    half = Math.floor(buttons / 2),\n    before = addFirstLast ? 2 : 1,\n    after = addFirstLast ? 1 : 0;\n  if (pages <= buttons) {\n    numbers = _range(0, pages);\n  } else if (buttons === 1) {\n    // Single button - current page only\n    numbers = [page];\n  } else if (buttons === 3) {\n    // Special logic for just three buttons\n    if (page <= 1) {\n      numbers = [0, 1, 'ellipsis'];\n    } else if (page >= pages - 2) {\n      numbers = _range(pages - 2, pages);\n      numbers.unshift('ellipsis');\n    } else {\n      numbers = ['ellipsis', page, 'ellipsis'];\n    }\n  } else if (page <= half) {\n    numbers = _range(0, buttons - before);\n    numbers.push('ellipsis');\n    if (addFirstLast) {\n      numbers.push(pages - 1);\n    }\n  } else if (page >= pages - 1 - half) {\n    numbers = _range(pages - (buttons - before), pages);\n    numbers.unshift('ellipsis');\n    if (addFirstLast) {\n      numbers.unshift(0);\n    }\n  } else {\n    numbers = _range(page - half + before, page + half - after);\n    numbers.push('ellipsis');\n    numbers.unshift('ellipsis');\n    if (addFirstLast) {\n      numbers.push(pages - 1);\n      numbers.unshift(0);\n    }\n  }\n  return numbers;\n}\nvar __lengthCounter = 0;\n\n// opts\n// - menu\n// - text\nDataTable.feature.register('pageLength', function (settings, opts) {\n  var features = settings.oFeatures;\n\n  // For compatibility with the legacy `pageLength` top level option\n  if (!features.bPaginate || !features.bLengthChange) {\n    return null;\n  }\n  opts = $.extend({\n    menu: settings.aLengthMenu,\n    text: settings.oLanguage.sLengthMenu\n  }, opts);\n  var classes = settings.oClasses.length,\n    tableId = settings.sTableId,\n    menu = opts.menu,\n    lengths = [],\n    language = [],\n    i;\n\n  // Options can be given in a number of ways\n  if (Array.isArray(menu[0])) {\n    // Old 1.x style - 2D array\n    lengths = menu[0];\n    language = menu[1];\n  } else {\n    for (i = 0; i < menu.length; i++) {\n      // An object with different label and value\n      if ($.isPlainObject(menu[i])) {\n        lengths.push(menu[i].value);\n        language.push(menu[i].label);\n      } else {\n        // Or just a number to display and use\n        lengths.push(menu[i]);\n        language.push(menu[i]);\n      }\n    }\n  }\n\n  // We can put the <select> outside of the label if it is at the start or\n  // end which helps improve accessability (not all screen readers like\n  // implicit for elements).\n  var end = opts.text.match(/_MENU_$/);\n  var start = opts.text.match(/^_MENU_/);\n  var removed = opts.text.replace(/_MENU_/, '');\n  var str = '<label>' + opts.text + '</label>';\n  if (start) {\n    str = '_MENU_<label>' + removed + '</label>';\n  } else if (end) {\n    str = '<label>' + removed + '</label>_MENU_';\n  }\n\n  // Wrapper element - use a span as a holder for where the select will go\n  var tmpId = 'tmp-' + +new Date();\n  var div = $('<div/>').addClass(classes.container).append(str.replace('_MENU_', '<span id=\"' + tmpId + '\"></span>'));\n\n  // Save text node content for macro updating\n  var textNodes = [];\n  Array.prototype.slice.call(div.find('label')[0].childNodes).forEach(function (el) {\n    if (el.nodeType === Node.TEXT_NODE) {\n      textNodes.push({\n        el: el,\n        text: el.textContent\n      });\n    }\n  });\n\n  // Update the label text in case it has an entries value\n  var updateEntries = function (len) {\n    textNodes.forEach(function (node) {\n      node.el.textContent = _fnMacros(settings, node.text, len);\n    });\n  };\n\n  // Next, the select itself, along with the options\n  var select = $('<select/>', {\n    'aria-controls': tableId,\n    'class': classes.select\n  });\n  for (i = 0; i < lengths.length; i++) {\n    select[0][i] = new Option(typeof language[i] === 'number' ? settings.fnFormatNumber(language[i]) : language[i], lengths[i]);\n  }\n\n  // add for and id to label and input\n  div.find('label').attr('for', 'dt-length-' + __lengthCounter);\n  select.attr('id', 'dt-length-' + __lengthCounter);\n  __lengthCounter++;\n\n  // Swap in the select list\n  div.find('#' + tmpId).replaceWith(select);\n\n  // Can't use `select` variable as user might provide their own and the\n  // reference is broken by the use of outerHTML\n  $('select', div).val(settings._iDisplayLength).on('change.DT', function () {\n    _fnLengthChange(settings, $(this).val());\n    _fnDraw(settings);\n  });\n\n  // Update node value whenever anything changes the table's length\n  $(settings.nTable).on('length.dt.DT', function (e, s, len) {\n    if (settings === s) {\n      $('select', div).val(len);\n\n      // Resolve plurals in the text for the new length\n      updateEntries(len);\n    }\n  });\n  updateEntries(settings._iDisplayLength);\n  return div;\n}, 'l');\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function (opts) {\n  return $(this).dataTable(opts).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each(DataTable, function (prop, val) {\n  $.fn.DataTable[prop] = val;\n});\nexport default DataTable;"],
  "mappings": "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",
  "names": ["import_jquery", "jQuery", "i", "td", "attr", "cell", "row", "k", "state", "col", "set", "idx", "caption", "e", "settings", "prop"]
}
